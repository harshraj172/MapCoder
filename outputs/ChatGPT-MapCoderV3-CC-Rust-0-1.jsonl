{"name": "1575_A. Another Sorting Problem", "description": "Andi and Budi were given an assignment to tidy up their bookshelf of n books. Each book is represented by the book title \u2014 a string s_i numbered from 1 to n, each with length m. Andi really wants to sort the book lexicographically ascending, while Budi wants to sort it lexicographically descending.\n\nSettling their fight, they decided to combine their idea and sort it asc-desc-endingly, where the odd-indexed characters will be compared ascendingly, and the even-indexed characters will be compared descendingly.\n\nA string a occurs before a string b in asc-desc-ending order if and only if in the first position where a and b differ, the following holds:\n\n  * if it is an odd position, the string a has a letter that appears earlier in the alphabet than the corresponding letter in b; \n  * if it is an even position, the string a has a letter that appears later in the alphabet than the corresponding letter in b. \n\nInput\n\nThe first line contains two integers n and m (1 \u2264 n \u22c5 m \u2264 10^6).\n\nThe i-th of the next n lines contains a string s_i consisting of m uppercase Latin letters \u2014 the book title. The strings are pairwise distinct.\n\nOutput\n\nOutput n integers \u2014 the indices of the strings after they are sorted asc-desc-endingly.\n\nExample\n\nInput\n\n\n5 2\nAA\nAB\nBB\nBA\nAZ\n\n\nOutput\n\n\n5 2 1 3 4\n", "tags": ["data structures", "sortings", "strings"], "difficulty": 7, "id": 1575, "sample_io": [{"input": "5 2\nAA\nAB\nBB\nBA\nAZ\n", "output": ["5 2 1 3 4 \n"]}], "test_list": [{"input": "5 2\nAA\nAB\nBB\nBA\nZA\n", "output": ["2 1 3 4 5\n"]}, {"input": "5 2\nAA\nAB\nCB\nBA\nAZ\n", "output": ["5 2 1 4 3\n"]}, {"input": "2 2\nAA\nAB\nCB\nBA\nAZ\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nBC\nCB\nAB\nAZ\n", "output": ["1 2\n"]}, {"input": "1 2\nAA\nAC\nBC\nBA\nZA\n", "output": ["1\n"]}, {"input": "5 2\nAA\nAB\nBC\nBA\nAZ\n", "output": ["5 2 1 3 4\n"]}, {"input": "3 2\nAA\nAB\nCB\nAB\nAZ\n", "output": ["2 1 3\n"]}, {"input": "4 2\nBA\nAC\nEA\nAA\nZ@\n", "output": ["2 4 1 3\n"]}, {"input": "3 2\nAA\nBA\nCB\nAB\nAZ\n", "output": ["1 2 3\n"]}, {"input": "4 2\nAA\nAC\nCB\nBA\nAZ\n", "output": ["2 1 4 3\n"]}, {"input": "4 2\nBA\nBC\nEA\nAB\nZ@\n", "output": ["4 2 1 3\n"]}, {"input": "3 2\nBA\nAD\nAB\nBA\nC[\n", "output": ["2 3 1\n"]}, {"input": "3 2\nAA\nBA\nBC\nAB\nAZ\n", "output": ["1 3 2\n"]}, {"input": "5 2\nAA\nBA\nCC\nBB\nAZ\n", "output": ["5 1 4 2 3\n"]}, {"input": "2 2\nAA\nAB\nCB\nAB\nAZ\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nAC\nCB\nAB\nAZ\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nBC\nCB\nAB\nZA\n", "output": ["1 2\n"]}, {"input": "2 2\nAA\nBC\nBC\nAB\nZA\n", "output": ["1 2\n"]}, {"input": "2 2\nAA\nAC\nBC\nAB\nZA\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nAC\nBC\nBA\nZA\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAC\nBC\nAA\nZA\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAC\nCB\nAA\nZA\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAC\nCB\nAA\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAC\nCB\nAA\nZ@\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nAC\nCA\nAA\nZ@\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nAC\nCA\nAA\nZ@\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nAC\nCA\nBA\nZ@\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nAC\nCA\nAB\nZ@\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nAC\nCA\nAB\n@Z\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nAC\nCA\nAB\n@Y\n", "output": ["2 1\n"]}, {"input": "5 2\nAA\nAB\nBB\nBA\nZB\n", "output": ["2 1 3 4 5\n"]}, {"input": "2 2\nAA\nAD\nCB\nAB\nAZ\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nBC\nBB\nAB\nAZ\n", "output": ["1 2\n"]}, {"input": "2 2\nBA\nBC\nCB\nAB\nZA\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nBC\nBD\nAB\nZA\n", "output": ["1 2\n"]}, {"input": "2 2\nAA\nAC\nBC\nAB\n[A\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nAC\nBC\nBA\nAZ\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAB\nBC\nBA\nZA\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAC\nBC\nAA\nAZ\n", "output": ["1\n"]}, {"input": "1 2\nBA\nAC\nCB\nAA\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAC\nBC\nAA\nZ@\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nAC\nDA\nAA\nZ@\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nAC\nCA\nAA\n[@\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nCA\nCA\nBA\nZ@\n", "output": ["1 2\n"]}, {"input": "2 2\nAB\nAC\nAC\nAB\nZ@\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nAC\nBA\nAB\n@Z\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nCA\nCA\nAB\n@Y\n", "output": ["1 2\n"]}, {"input": "5 2\nAA\nAB\nCC\nBA\nAZ\n", "output": ["5 2 1 4 3\n"]}, {"input": "2 2\nBA\nBC\nBB\nAB\nZA\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nAC\nAC\nAB\n[A\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nAC\nCB\nBA\nAZ\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAB\nBC\nBA\nAZ\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAC\nBC\nAA\n@Z\n", "output": ["1\n"]}, {"input": "1 2\nBA\nAC\nCA\nAA\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAC\nBC\nAA\nZ?\n", "output": ["2 1\n"]}, {"input": "3 2\nAA\nAC\nDA\nAA\nZ@\n", "output": ["2 1 3\n"]}, {"input": "2 2\nBA\nAC\nCA\nAA\n[@\n", "output": ["2 1\n"]}, {"input": "1 2\nAB\nCA\nCA\nBA\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nAB\nCA\nAC\nAB\nZ@\n", "output": ["1 2\n"]}, {"input": "2 2\nAB\nAC\nBA\nBB\n@Z\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nCB\nCA\nAB\n@Y\n", "output": ["1 2\n"]}, {"input": "3 2\nAA\nAB\nCC\nBA\nAZ\n", "output": ["2 1 3\n"]}, {"input": "1 2\nBA\nBC\nBB\nAB\nZA\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAC\nAC\nAC\n[A\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nAB\nCB\nCA\nAZ\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAB\nBC\nBA\nA[\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAC\nBC\nAB\n@Z\n", "output": ["1\n"]}, {"input": "1 2\nBA\nAC\nCA\nAA\n@Z\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAC\nBC\nAA\n?Z\n", "output": ["2 1\n"]}, {"input": "3 2\nAA\nAC\nEA\nAA\nZ@\n", "output": ["2 1 3\n"]}, {"input": "2 2\nBA\nAC\nAC\nAA\n[@\n", "output": ["2 1\n"]}, {"input": "1 2\nBB\nCA\nCA\nBA\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nAB\nBA\nAC\nAB\nZ@\n", "output": ["1 2\n"]}, {"input": "2 2\nAB\nAC\nBA\nBB\n?Z\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nCB\nCA\nAC\n@Y\n", "output": ["1 2\n"]}, {"input": "1 2\nBA\nCB\nBB\nAB\nZA\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAC\nAC\nAC\n[B\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAC\nCB\nBA\nAZ\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAB\nBC\nBA\nA[\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAC\nCB\nAB\n@Z\n", "output": ["1\n"]}, {"input": "1 2\nBA\nAC\nCA\nAB\n@Z\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAC\nBC\nA@\n?Z\n", "output": ["2 1\n"]}, {"input": "3 2\nBA\nAC\nEA\nAA\nZ@\n", "output": ["2 1 3\n"]}, {"input": "1 2\nBB\nAC\nCA\nBA\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAC\nBA\nBB\n?Z\n", "output": ["2 1\n"]}, {"input": "2 2\nBA\nCB\nCA\nAC\n@Y\n", "output": ["1 2\n"]}, {"input": "2 2\nBA\nCB\nBB\nAB\nZA\n", "output": ["1 2\n"]}, {"input": "1 2\nAA\nAC\nAC\nAC\n[B\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAC\nCB\nBA\nZA\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAB\nCB\nBA\nA[\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAC\nCB\nAB\nZ@\n", "output": ["1\n"]}, {"input": "1 2\nBA\nAC\nCB\nAB\n@Z\n", "output": ["1\n"]}, {"input": "2 2\nBA\nAC\nBC\nA@\n?Z\n", "output": ["2 1\n"]}, {"input": "1 2\nBB\nAC\nCA\nAB\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nAA\nBC\nBA\nBB\n?Z\n", "output": ["1 2\n"]}, {"input": "2 2\nBA\nBC\nCA\nAC\n@Y\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAC\nAC\nAC\n[C\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAC\nCB\nBA\nA[\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAC\nDB\nAB\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nBA\nAD\nBC\nA@\n?Z\n", "output": ["2 1\n"]}, {"input": "4 2\nBA\nAC\nEA\nAB\nZ@\n", "output": ["2 4 1 3\n"]}, {"input": "1 2\nCB\nAC\nCA\nAB\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nAA\nBC\nBA\nBB\nZ?\n", "output": ["1 2\n"]}, {"input": "2 2\nBA\nBB\nCA\nAC\n@Y\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAC\nAC\nAD\n[C\n", "output": ["1\n"]}, {"input": "2 2\nAA\nCA\nCB\nBA\nA[\n", "output": ["1 2\n"]}, {"input": "2 2\nBA\nAD\nBC\nA?\n?Z\n", "output": ["2 1\n"]}, {"input": "1 2\nCB\nCA\nCA\nAB\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nAA\nBC\nBB\nBB\nZ?\n", "output": ["1 2\n"]}, {"input": "2 2\nBA\nBB\nCA\nCA\n@Y\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nCA\nAC\nAD\n[C\n", "output": ["1\n"]}, {"input": "2 2\nAA\nCA\nBB\nBA\nA[\n", "output": ["1 2\n"]}, {"input": "2 2\nBA\nAD\nBB\nA?\n?Z\n", "output": ["2 1\n"]}, {"input": "2 2\nBA\nBB\nCA\nDA\n@Y\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nCA\nBB\nAB\nA[\n", "output": ["1 2\n"]}, {"input": "2 2\nBA\nDA\nBB\nA?\n?Z\n", "output": ["1 2\n"]}, {"input": "2 2\nAB\nBB\nCA\nDA\n@Y\n", "output": ["1 2\n"]}, {"input": "2 2\nAA\nCA\nBB\nAA\nA[\n", "output": ["1 2\n"]}, {"input": "2 2\nBA\nAD\nBB\nA?\n?Y\n", "output": ["2 1\n"]}, {"input": "2 2\nBA\nBB\nCA\nD@\n@Y\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nDA\nBB\nBA\nA[\n", "output": ["1 2\n"]}, {"input": "2 2\nAB\nAD\nBB\nA?\n?Y\n", "output": ["2 1\n"]}, {"input": "2 2\nBA\nBB\nAC\nD@\n@Y\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nDA\nBB\nAB\nA[\n", "output": ["1 2\n"]}, {"input": "2 2\nAB\nAD\nBA\nA?\n?Y\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nDA\nAB\nAB\nA[\n", "output": ["1 2\n"]}, {"input": "2 2\nAB\nAD\nAB\nA?\n?Y\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nDA\nAB\nBA\nA[\n", "output": ["1 2\n"]}, {"input": "2 2\nAB\nAD\nCA\nA?\n?Y\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nDA\nAB\nBA\nB[\n", "output": ["1 2\n"]}, {"input": "2 2\nAB\nAD\nCA\nA>\n?Y\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nDA\nAB\nCA\nB[\n", "output": ["1 2\n"]}, {"input": "1 2\nAA\nDA\nAB\nCA\nB[\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAD\nAB\nCA\nB[\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAD\nAB\nAC\nB[\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAD\nAB\nAC\nC[\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAD\nAB\nCA\nC[\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAD\nAB\nBA\nC[\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAD\nAB\nBA\nC[\n", "output": ["2 1\n"]}, {"input": "2 2\nBA\nAD\nAB\nBA\nC[\n", "output": ["2 1\n"]}, {"input": "2 2\nBA\nAE\nAB\nBA\nC[\n", "output": ["2 1\n"]}, {"input": "2 2\nBA\nAE\nAB\nBA\n[C\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nAB\nCB\nAC\nAZ\n", "output": ["2 1\n"]}, {"input": "3 2\nAA\nAC\nCB\nAB\nAZ\n", "output": ["2 1 3\n"]}, {"input": "2 2\nAA\nBC\nDB\nAB\nAZ\n", "output": ["1 2\n"]}, {"input": "2 2\nAA\nBC\nCB\nBA\nZA\n", "output": ["1 2\n"]}, {"input": "2 2\nAA\nBC\nBC\nAC\nZA\n", "output": ["1 2\n"]}, {"input": "2 2\nAA\nAC\nCB\nAB\nZA\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nAC\nCC\nBA\nZA\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nCA\nBC\nBA\nZA\n", "output": ["1 2\n"]}, {"input": "1 2\nAA\nAB\nBC\nAA\nZA\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAC\nCC\nAA\nZA\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAD\nCB\nAA\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAC\nCB\n@A\nZ@\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nCA\nCA\nAB\nZ@\n", "output": ["1 2\n"]}, {"input": "2 2\nAA\nAC\nCA\nAB\nZ@\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nAC\nAC\nAB\n@Z\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nAC\nAC\nAB\n@Y\n", "output": ["2 1\n"]}, {"input": "2 2\nAA\nBC\nBD\nAB\nYA\n", "output": ["1 2\n"]}, {"input": "3 2\nAA\nAC\nBC\nAB\n[A\n", "output": ["2 1 3\n"]}, {"input": "2 2\nAA\nAC\nAC\nBA\nAZ\n", "output": ["2 1\n"]}, {"input": "1 1\nAA\nAC\nBC\nAA\nAZ\n", "output": ["1\n"]}, {"input": "1 2\nBA\nAC\nCB\nAA\n@Z\n", "output": ["1\n"]}, {"input": "2 2\nAB\nAC\nDA\nAA\nZ@\n", "output": ["2 1\n"]}, {"input": "2 2\nBA\nAC\nCB\nAA\n[@\n", "output": ["2 1\n"]}, {"input": "2 1\nAB\nCA\nCA\nBA\nZ@\n", "output": ["1 2\n"]}, {"input": "2 2\nBA\nAC\nCA\nAB\n@Z\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nBC\nBA\nAB\n@Z\n", "output": ["1 2\n"]}, {"input": "2 2\nAB\nCA\nAC\nAB\n@Y\n", "output": ["1 2\n"]}, {"input": "5 2\nAA\nAB\nCC\nBB\nAZ\n", "output": ["5 2 1 4 3\n"]}, {"input": "2 2\nBA\nCB\nBB\nAB\nAZ\n", "output": ["1 2\n"]}, {"input": "1 2\nAA\nAB\nBC\nBA\nAY\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAC\nBC\nBA\n@Z\n", "output": ["1\n"]}, {"input": "2 2\nAB\nAC\nCB\nAA\n[@\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nCA\nAD\nAB\nZ@\n", "output": ["1 2\n"]}, {"input": "2 2\nAB\nCB\nCB\nAB\n@Y\n", "output": ["1 2\n"]}, {"input": "3 2\nAA\nAB\nCC\nBA\nAY\n", "output": ["2 1 3\n"]}, {"input": "1 2\nBA\nBC\nBB\nBB\nZA\n", "output": ["1\n"]}, {"input": "2 2\nAA\nCA\nAC\nAC\n[A\n", "output": ["1 2\n"]}, {"input": "2 2\nAA\nAB\nBC\nBA\nAZ\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAB\nBB\nBA\nA[\n", "output": ["1\n"]}, {"input": "1 2\nAA\nAC\nBC\nAB\n@[\n", "output": ["1\n"]}, {"input": "1 2\nBA\nBC\nCA\nAA\nZ@\n", "output": ["1\n"]}, {"input": "2 2\nAA\nCA\nBC\nAA\n?Z\n", "output": ["1 2\n"]}, {"input": "3 2\nAB\nAC\nEA\nAA\nZ@\n", "output": ["2 1 3\n"]}, {"input": "2 2\nBA\nAC\nAC\nAA\nZ@\n", "output": ["2 1\n"]}, {"input": "1 2\nBB\nCA\nCA\nBA\n@Z\n", "output": ["1\n"]}, {"input": "2 2\nAB\nBA\nAC\nBA\nZ@\n", "output": ["1 2\n"]}, {"input": "2 2\nBB\nCB\nCA\nAC\n@Y\n", "output": ["1 2\n"]}, {"input": "1 2\nBA\nCB\nBB\nBA\nZA\n", "output": ["1\n"]}, {"input": "2 2\nBA\nAC\nAC\nAC\n[B\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAC\nCB\nAA\nAZ\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAB\nBC\nB@\nA[\n", "output": ["2 1\n"]}, {"input": "1 2\nAA\nAC\nCB\nAA\n@Z\n", "output": ["1\n"]}, {"input": "2 2\nAA\nAC\nCA\nBB\n?Z\n", "output": ["2 1\n"]}, {"input": "2 2\nAB\nCB\nBB\nAB\nZA\n", "output": ["1 2\n"]}, {"input": "1 2\nAA\nCA\nAC\nAC\n[B\n", "output": ["1\n"]}, {"input": "3 2\nAA\nAB\nCB\nBA\nA[\n", "output": ["2 1 3\n"]}, {"input": "1 1\nAA\nAC\nCB\nAB\nZ@\n", "output": ["1\n"]}, {"input": "1 2\nBA\nAC\nCC\nAB\n@Z\n", "output": ["1\n"]}], "source_codes": ["\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let m: usize = iter.next().unwrap().parse().unwrap();\n\n    let mut books: Vec<String> = Vec::new();\n    for _ in 0..n {\n        let mut book_input = String::new();\n        io::stdin().read_line(&mut book_input).unwrap();\n        books.push(book_input.trim().to_string());\n    }\n\n    fn custom_cmp(s: &str) -> String {\n        let mut even_chars: Vec<char> = s.chars().step_by(2).collect();\n        let mut odd_chars: Vec<char> = s.chars().skip(1).step_by(2).collect();\n        even_chars.sort();\n        odd_chars.sort_by(|a, b| b.cmp(a));\n        even_chars.iter().chain(odd_chars.iter()).collect()\n    }\n\n    let mut sorted_books: Vec<usize> = (1..=n).collect();\n    sorted_books.sort_by_key(|&x| custom_cmp(&books[x-1]));\n\n    for book_index in sorted_books {\n        print!(\"{} \", book_index);\n    }\n}\n\n\n"], "responses": ["\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let m: usize = iter.next().unwrap().parse().unwrap();\n\n    let mut books: Vec<String> = Vec::new();\n    for _ in 0..n {\n        let mut book_input = String::new();\n        io::stdin().read_line(&mut book_input).unwrap();\n        books.push(book_input.trim().to_string());\n    }\n\n    fn custom_cmp(s: &str) -> String {\n        let mut even_chars: Vec<char> = s.chars().step_by(2).collect();\n        let mut odd_chars: Vec<char> = s.chars().skip(1).step_by(2).collect();\n        even_chars.sort();\n        odd_chars.sort_by(|a, b| b.cmp(a));\n        even_chars.iter().chain(odd_chars.iter()).collect()\n    }\n\n    let mut sorted_books: Vec<usize> = (1..=n).collect();\n    sorted_books.sort_by_key(|&x| custom_cmp(&books[x-1]));\n\n    for book_index in sorted_books {\n        print!(\"{} \", book_index);\n    }\n}\n\n\n"], "prompt_tokens": [42070], "completion_tokens": [8381], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1575}
{"name": "1575_B. Building an Amusement Park", "description": "Mr. Chanek lives in a city represented as a plane. He wants to build an amusement park in the shape of a circle of radius r. The circle must touch the origin (point (0, 0)).\n\nThere are n bird habitats that can be a photo spot for the tourists in the park. The i-th bird habitat is at point p_i = (x_i, y_i). \n\nFind the minimum radius r of a park with at least k bird habitats inside. \n\nA point is considered to be inside the park if and only if the distance between p_i and the center of the park is less than or equal to the radius of the park. Note that the center and the radius of the park do not need to be integers.\n\nIn this problem, it is guaranteed that the given input always has a solution with r \u2264 2 \u22c5 10^5.\n\nInput\n\nThe first line contains two integers n and k (1 \u2264 n \u2264 10^5, 1 \u2264 k \u2264 n) \u2014 the number of bird habitats in the city and the number of bird habitats required to be inside the park.\n\nThe i-th of the next n lines contains two integers x_i and y_i (0 \u2264 |x_i|, |y_i| \u2264 10^5) \u2014 the position of the i-th bird habitat.\n\nOutput\n\nOutput a single real number r denoting the minimum radius of a park with at least k bird habitats inside. It is guaranteed that the given input always has a solution with r \u2264 2 \u22c5 10^5.\n\nYour answer is considered correct if its absolute or relative error does not exceed 10^{-4}.\n\nFormally, let your answer be a, and the jury's answer be b. Your answer is accepted if and only if \\frac{|a - b|}{max{(1, |b|)}} \u2264 10^{-4}.\n\nExamples\n\nInput\n\n\n8 4\n-3 1\n-4 4\n1 5\n2 2\n2 -2\n-2 -4\n-1 -1\n-6 0\n\n\nOutput\n\n\n3.1622776589\n\n\nInput\n\n\n1 1\n0 0\n\n\nOutput\n\n\n0.0000000000\n\nNote\n\nIn the first example, Mr. Chanek can put the center of the park at (-3, -1) with radius \u221a{10} \u2248 3.162. It can be proven this is the minimum r.\n\nThe following illustrates the first example. The blue points represent bird habitats and the red circle represents the amusement park.\n", "tags": ["binary search", "geometry"], "difficulty": 8, "id": 1575, "sample_io": [{"input": "8 4\n-3 1\n-4 4\n1 5\n2 2\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["3.162277660\n"]}, {"input": "1 1\n0 0\n", "output": ["0.000000000\n"]}], "test_list": [{"input": "2 1\n864 22752\n864 -22752\n", "output": ["11384.199576606\n"]}, {"input": "4 2\n-100000 100000\n100000 100000\n-100000 -100000\n100000 -100000\n", "output": ["100000.000000000\n"]}, {"input": "10 2\n92740 -45467\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n78361 -88657\n43043 68859\n-23309 -4464\n", "output": ["14966.832083565\n"]}, {"input": "1 1\n-100000 100000\n", "output": ["70710.678118655\n"]}, {"input": "2 2\n100000 -100000\n100000 100000\n", "output": ["100000.000000000\n"]}, {"input": "1 1\n0 2\n", "output": ["1.000000000\n"]}, {"input": "4 1\n-100000 100000\n100000 100000\n-100000 -100000\n100000 -100000\n", "output": ["70710.678118655\n"]}, {"input": "2 1\n864 22752\n864 -17916\n", "output": ["8968.41056152109013055451\n"]}, {"input": "4 2\n-100000 100000\n100000 100000\n-100000 -100000\n100100 -100000\n", "output": ["100000.00000000017462298274\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n78361 -88657\n43043 68859\n-23309 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "2 2\n100000 -100000\n100000 110000\n", "output": ["105118.98020814332994632423\n"]}, {"input": "1 1\n0 1\n", "output": ["0.50000000015870682546\n"]}, {"input": "8 4\n-3 1\n-4 4\n2 5\n2 2\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "2 1\n1133 22752\n935 -17916\n", "output": ["8970.19064736088694189675\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["16196.07920191441553470213\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["14937.88147850256791571155\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n44 25288\n-12480 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12644.01913949839581619017\n"]}, {"input": "4 1\n-100000 100000\n100000 100001\n-100000 -100000\n100000 -100000\n", "output": ["70710.67811865478870458901\n"]}, {"input": "1 1\n-3536 100000\n", "output": ["50031.24847532802959904075\n"]}, {"input": "1 1\n0 4\n", "output": ["2.00000000010192025002\n"]}, {"input": "2 1\n864 22752\n695 -17916\n", "output": ["8964.73760073330777231604\n"]}, {"input": "1 1\n1133 22752\n864 -17916\n", "output": ["11390.09649871329747838899\n"]}, {"input": "4 2\n-100000 100000\n100000 100000\n-100000 -79803\n101100 -100000\n", "output": ["90466.89673300410504452884\n"]}, {"input": "2 1\n1133 22752\n354 -17916\n", "output": ["8959.74848977374495007098\n"]}, {"input": "8 4\n-3 -1\n-4 4\n2 5\n3 2\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["2.85043856287359176349\n"]}, {"input": "2 1\n1339 31707\n853 -17916\n", "output": ["8968.14731424502315348946\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n27 25288\n-12480 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12644.00720697373981238343\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n44 25288\n-11426 -40491\n5555 444\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12766.32186774069487000816\n"]}, {"input": "1 1\n0 7\n", "output": ["3.50000000004513367458\n"]}, {"input": "8 4\n-3 1\n-4 1\n1 5\n2 0\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["2.75826479718688233334\n"]}, {"input": "1 1\n-1 -1\n", "output": ["0.70710678130581072764\n"]}, {"input": "4 2\n-151774 100000\n100000 100000\n-100000 -79803\n101100 -100000\n", "output": ["98385.18044663206092081964\n"]}, {"input": "2 1\n1299 58932\n1772 -17916\n", "output": ["9001.70872668084484757856\n"]}, {"input": "10 2\n10823 -45467\n-22104 24717\n29183 -23121\n20557 71595\n44 30946\n-12480 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["15473.01564013956522103399\n"]}, {"input": "9 2\n10823 -45467\n-4448 24717\n29183 -23121\n20557 71595\n44 41577\n-11426 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12557.01788841605593916029\n"]}, {"input": "1 1\n-1 7\n", "output": ["3.53553390599614658640\n"]}, {"input": "1 1\n-1 -2\n", "output": ["1.11803398876730852862\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n8952 71595\n8980 69456\n-12480 -40491\n9766 5466\n78361 -78478\n43043 36992\n-23309 -4464\n", "output": ["15803.87868269852333469316\n"]}, {"input": "2 1\n1299 58932\n1772 -19889\n", "output": ["9983.89083724387091933750\n"]}, {"input": "1 1\n0 10\n", "output": ["5.00000000016598278307\n"]}, {"input": "1 1\n-1 -3\n", "output": ["1.58113883017563239264\n"]}, {"input": "10 2\n10823 -45467\n-18156 24717\n29183 -23121\n20557 125156\n8980 69456\n-12480 -40491\n5555 3298\n42998 -78478\n30816 68859\n-23309 -4464\n", "output": ["16053.09163365937820344698\n"]}, {"input": "8 4\n-3 0\n-4 4\n0 5\n3 0\n1 -3\n-2 -4\n-1 -2\n-6 0\n", "output": ["2.63523138350763019844\n"]}, {"input": "9 2\n10823 -45467\n-4448 24717\n32551 -23121\n20557 71595\n44 21599\n-11426 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["10799.52240842168066592421\n"]}, {"input": "8 4\n-3 1\n-4 1\n1 5\n2 0\n0 1\n-2 -4\n-1 -1\n-6 0\n", "output": ["2.06155281290421044105\n"]}, {"input": "10 2\n10823 -45568\n-15266 24717\n18377 -24316\n20557 7374\n8980 69456\n-15002 -40491\n9766 18573\n78361 -88657\n43043 68859\n-23309 -4464\n", "output": ["11503.23711818170704646036\n"]}, {"input": "8 4\n-2 0\n-2 4\n3 3\n2 2\n2 -2\n-2 -2\n-1 -1\n-6 0\n", "output": ["3.00000000006406253306\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n10378 71595\n8980 69456\n-12480 -40491\n9766 5466\n78361 -78478\n43043 36992\n-6873 -4464\n", "output": ["15185.93179194969343370758\n"]}, {"input": "10 2\n10823 -45467\n-18156 21388\n29183 -23121\n20557 125156\n8980 69456\n-12480 -40491\n5555 3298\n42998 -78478\n30816 68859\n-23309 -4464\n", "output": ["15125.03465252556998166256\n"]}, {"input": "9 2\n10823 -45467\n-15266 12442\n29183 -45742\n20557 71595\n27 25288\n-12480 -40491\n1069 3298\n78361 -145504\n43043 68859\n-23309 -4464\n", "output": ["9847.00614400146878324449\n"]}, {"input": "9 2\n10823 -45467\n-4448 24717\n32551 -23121\n20557 71595\n7 21599\n-11426 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["10799.50056715599566814490\n"]}, {"input": "10 2\n10823 -45568\n-15266 24717\n18377 -24316\n20557 7374\n8980 69456\n-15002 -40491\n2800 18573\n78361 -88657\n43043 68859\n-23309 -4464\n", "output": ["11922.41541813867661403492\n"]}, {"input": "9 2\n10823 -45467\n-4470 12442\n29183 -45742\n20557 71595\n27 25288\n-12480 -40491\n1069 3298\n78361 -145504\n43043 68859\n-23309 -4464\n", "output": ["6610.29999319246962841135\n"]}, {"input": "9 2\n10823 -45467\n-4448 16228\n32551 -23121\n20557 71595\n7 21599\n-11426 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["8476.98247887826983060222\n"]}, {"input": "10 2\n84471 -45467\n-15266 24717\n24210 -23121\n20557 71595\n8980 69456\n-12480 -40491\n16937 18573\n280173 -88657\n43043 68859\n-52175 -4464\n", "output": ["17047.15902090807503554970\n"]}, {"input": "1 1\n0 -3\n", "output": ["1.50000000012084910850\n"]}, {"input": "10 2\n10823 -45568\n-15266 24717\n18377 -24316\n20557 7374\n8980 69456\n-15002 -40491\n2800 31316\n78361 -88657\n43043 116574\n-23309 -4464\n", "output": ["16050.25822781058741384186\n"]}, {"input": "10 2\n1469 -58635\n-15266 24717\n29183 -23121\n10378 71595\n8980 69456\n-12480 -40491\n9766 5466\n78361 -78478\n43043 36992\n-6873 -3149\n", "output": ["14663.22140976625814801082\n"]}, {"input": "10 2\n10823 -45467\n-18156 21843\n29183 -23121\n20557 125156\n8980 69456\n-12480 -40491\n5555 3298\n42998 -78478\n17383 68859\n-32211 -4464\n", "output": ["15240.11383321663925016765\n"]}, {"input": "10 2\n7705 -45467\n-15266 24717\n29183 -30354\n32456 13540\n87 69456\n-12480 -40491\n1850 3298\n60960 -78478\n43043 68859\n-23309 -7997\n", "output": ["14525.67420982600015122443\n"]}, {"input": "10 2\n10823 -45568\n-15266 24717\n18377 -24316\n20557 7374\n8980 24878\n-15002 -40491\n2800 31316\n78361 -88657\n43043 116574\n-23309 -4464\n", "output": ["13614.54353922386508202180\n"]}, {"input": "10 2\n12008 -31631\n-15266 24717\n48594 -23121\n20557 71595\n8980 69456\n-12480 -60094\n12645 18573\n45781 -58755\n43043 123380\n-37028 -4464\n", "output": ["15648.15592881530028535053\n"]}, {"input": "10 4\n10823 -45467\n-18156 21843\n29183 -23121\n20557 125156\n8980 69456\n-12480 -40491\n5555 3298\n42998 -78478\n17383 68859\n-32211 -4464\n", "output": ["35269.77165742764191236347\n"]}, {"input": "9 2\n10823 -45467\n-4448 10299\n32551 -23121\n20557 71595\n7 21599\n-11426 -25305\n5555 3298\n87026 -78478\n43043 68859\n-23309 -4464\n", "output": ["6155.21464110457782226149\n"]}, {"input": "10 2\n12008 -31631\n-15266 29391\n48594 -23121\n20557 71595\n8980 69456\n-12480 -60094\n12645 18573\n45781 -58755\n43043 123380\n-37028 -4464\n", "output": ["16999.46488250869515468366\n"]}, {"input": "10 2\n7705 -45467\n-15266 24717\n29183 -30354\n32456 13540\n87 69456\n-12480 -21819\n1850 3298\n60960 -78478\n61955 68859\n-23309 -2587\n", "output": ["13658.39473476864077383652\n"]}, {"input": "9 2\n10823 -45467\n-4448 14793\n32551 -23121\n20557 108902\n7 21599\n-11426 -25305\n5555 3298\n87026 -78478\n43043 68859\n-23309 -4464\n", "output": ["7850.93688617486441216897\n"]}, {"input": "10 3\n7705 -45467\n-15266 24717\n29183 -30354\n32456 13540\n87 69456\n-12480 -21819\n1850 3298\n60960 -78478\n61955 68859\n-23309 -2587\n", "output": ["15893.25280021736034541391\n"]}, {"input": "9 2\n10823 -45467\n-4448 18392\n32551 -23121\n20557 108902\n7 21599\n-11426 -25305\n5555 3298\n87026 -78478\n43043 68859\n-23309 -4464\n", "output": ["9472.70628687792850541882\n"]}, {"input": "10 2\n12008 -31631\n-15266 29391\n48594 -23121\n20557 71595\n8980 69456\n-12480 -33809\n8630 18573\n16353 -58755\n43043 123380\n-37028 -4464\n", "output": ["16560.40762803261532098986\n"]}, {"input": "10 2\n12008 -31631\n-15266 44500\n48594 -23121\n20557 71595\n8980 69456\n-12480 -33809\n8630 18573\n16353 -58755\n43043 123380\n-37028 -4464\n", "output": ["18718.26197933223738800734\n"]}, {"input": "10 2\n1469 -58635\n-22629 24717\n78552 -23121\n12425 71595\n8980 69456\n-12480 -40491\n10312 5466\n78361 -78478\n25013 36992\n-6873 -3149\n", "output": ["16755.60898624706169357523\n"]}, {"input": "10 4\n10823 -45620\n-18156 26757\n35706 -23121\n39290 125156\n8980 28045\n-12480 -40491\n3657 3298\n42998 -78478\n17383 68859\n-32211 -4464\n", "output": ["32682.62575733213816420175\n"]}, {"input": "10 4\n10823 -45620\n-18156 26757\n35706 -23121\n39290 125156\n8980 28045\n-12480 -40491\n3657 6161\n42998 -78478\n17383 68859\n-32211 -4464\n", "output": ["29104.06158416698599467054\n"]}, {"input": "10 3\n6530 -13438\n-15266 5809\n53854 -30354\n32456 13540\n87 69456\n-12480 -21819\n1850 3298\n60960 -78478\n61955 68859\n-23309 -2587\n", "output": ["14054.64097536697227042168\n"]}, {"input": "10 2\n10823 -45568\n-15266 18988\n18377 -24316\n20557 7374\n9103 24878\n-15002 -40491\n3508 31316\n91260 -131450\n17228 116574\n-2137 -4464\n", "output": ["13619.99233932209608610719\n"]}, {"input": "10 2\n12008 -31631\n-15266 44500\n48594 -23121\n40822 36586\n8980 69456\n-12480 -17394\n8630 18573\n16353 -58755\n43043 214378\n-37028 -4464\n", "output": ["16994.63655710662351339124\n"]}, {"input": "9 2\n10823 -45467\n-4448 29326\n32551 -23121\n20557 108902\n7 4973\n-14267 -25305\n5555 3298\n167020 -78478\n43043 159283\n-36294 -4464\n", "output": ["3372.69804883320011867909\n"]}, {"input": "9 2\n10823 -45467\n-4448 29326\n32551 -23121\n20557 108902\n12 4973\n-14267 -25305\n5555 3298\n167020 -78478\n43043 159283\n-36294 -4464\n", "output": ["3371.93344355242152232677\n"]}, {"input": "10 2\n12008 -31631\n-15266 76232\n48594 -23121\n40822 36586\n8980 69456\n-12480 -30354\n8630 18573\n16353 -58755\n43043 214378\n-37028 -4464\n", "output": ["17931.22773880071326857433\n"]}, {"input": "10 4\n12008 -31631\n-15266 76232\n48594 -23121\n40822 36586\n8980 69456\n-12480 -30354\n8630 18573\n16353 -58755\n43043 214378\n-37028 -4464\n", "output": ["31835.80183471548298257403\n"]}, {"input": "10 1\n2217 -88524\n-22629 24717\n126387 -23121\n14074 71595\n8980 69456\n-12480 -40491\n18451 534\n78361 -78478\n20048 36992\n-6873 -3149\n", "output": ["3780.02414013458565023029\n"]}, {"input": "9 2\n10823 -45467\n-4448 1762\n18141 -23121\n20557 108902\n12 4973\n-2883 -25305\n5555 3298\n167020 -78478\n43043 159283\n-5362 -4464\n", "output": ["2952.75210033789653607528\n"]}, {"input": "10 4\n12008 -31631\n-15266 76232\n42500 -23121\n40822 36586\n8980 86691\n-12480 -30354\n8630 18573\n16353 -58755\n43043 341918\n-69112 -4464\n", "output": ["30773.25403042916514095850\n"]}, {"input": "10 2\n10823 -45568\n-15266 23738\n18377 -24316\n20557 7374\n14111 24878\n-15002 -40491\n3508 55449\n91260 -131450\n26783 116574\n-2207 -7943\n", "output": ["14301.16605015321329119615\n"]}, {"input": "9 2\n10823 -27196\n-4448 1762\n18141 -23121\n20557 108902\n6 4973\n-2883 -25305\n5555 3298\n167020 -78478\n43043 159283\n-5362 -2186\n", "output": ["2951.53934493033193575684\n"]}, {"input": "10 4\n12008 -4199\n-15266 11224\n42500 -23121\n40822 36586\n8980 86691\n-12480 -30354\n6149 18573\n259 -58755\n43043 341918\n-69112 -4464\n", "output": ["31532.14589491621882189065\n"]}, {"input": "10 4\n12008 -4199\n-15266 11224\n18632 -23121\n40822 36586\n8980 86691\n-12480 -30354\n6149 18573\n259 -58755\n43043 341918\n-69112 -4464\n", "output": ["29377.78542538573674391955\n"]}, {"input": "10 4\n20004 -45568\n-15266 23738\n18377 -24316\n20557 7374\n14111 24878\n-10389 -40491\n3508 100406\n91260 -131450\n26783 116574\n-2207 -8276\n", "output": ["24974.26753618317161453888\n"]}, {"input": "10 4\n12008 -11\n-15266 13646\n18632 -23121\n40822 36586\n8980 86691\n-12480 -30354\n6149 18573\n259 -58755\n43043 341918\n-69112 -6752\n", "output": ["29954.12439182540765614249\n"]}, {"input": "10 4\n20004 -45568\n-15266 23738\n18377 -24316\n20557 7374\n14111 24878\n-10389 -78233\n3508 100406\n156866 -131450\n26783 116574\n-2207 -8276\n", "output": ["26536.04484214025069377385\n"]}, {"input": "10 4\n20004 -45568\n-15266 23738\n18377 -24316\n20557 2946\n14111 24878\n-10389 -78233\n3508 100406\n156866 -131450\n26783 116574\n-2207 -8276\n", "output": ["25179.71848690727347275242\n"]}, {"input": "9 2\n10823 -27196\n-4448 1762\n33192 -42047\n20557 67570\n6 7543\n-2883 -25305\n5555 3298\n197627 -156486\n43043 252339\n-5362 -2186\n", "output": ["3923.53914758860628353432\n"]}, {"input": "10 4\n12008 -11\n-15266 13646\n62204 -23121\n40822 36586\n8980 86691\n-17395 -30354\n6149 21366\n259 -58755\n43043 341918\n-69112 -6752\n", "output": ["30485.36322992862915270962\n"]}, {"input": "9 2\n10823 -27196\n-1461 1762\n33192 -42047\n20557 67570\n6 7543\n-2883 -25305\n5555 3298\n197627 -156486\n43043 252339\n-5362 -2186\n", "output": ["3635.51653301161786657758\n"]}, {"input": "10 4\n20004 -45568\n-10034 37725\n18377 -24316\n20557 2946\n14111 24878\n-10389 -78233\n3508 27855\n156866 -131450\n26783 116574\n-2207 -8276\n", "output": ["23320.29094057705879095010\n"]}, {"input": "10 4\n12008 -11\n-15266 9583\n62204 -23121\n40822 36586\n9793 86691\n-17395 -30354\n6149 30660\n259 -58755\n43043 341918\n-69112 -6752\n", "output": ["32381.49301751569146290421\n"]}, {"input": "9 2\n10823 -27196\n-1461 1762\n33192 -42047\n20557 67570\n6 7543\n-2570 -25305\n5555 134\n197627 -132475\n43043 252339\n-5362 -2186\n", "output": ["3771.50119315903248207178\n"]}, {"input": "10 4\n9226 -45568\n-10034 71613\n18377 -24316\n20557 2946\n14111 24878\n-10389 -78233\n3508 27855\n156866 -131450\n35317 116574\n-2207 -8276\n", "output": ["24950.96658183584077050909\n"]}, {"input": "10 4\n12008 -11\n-15266 9583\n62204 -23121\n40822 36586\n9793 61661\n-17395 -30354\n6149 30660\n259 -58755\n43043 341918\n-69112 -6752\n", "output": ["31238.07799628526481683366\n"]}, {"input": "10 3\n9226 -45568\n-10034 71613\n18377 -24316\n20557 2946\n14111 24878\n-10389 -78233\n6547 27855\n156866 -131450\n35317 116574\n-2207 -8276\n", "output": ["15345.55687495320307789370\n"]}, {"input": "9 2\n10823 -27196\n-951 1762\n33192 -42047\n20557 67570\n6 7543\n-2570 -39000\n5555 134\n197627 -132475\n43043 252339\n-3386 -2186\n", "output": ["3762.66162435392470797524\n"]}, {"input": "10 3\n9226 -45568\n-4609 71613\n18377 -24316\n20557 2946\n14111 24878\n-10389 -78233\n1561 27855\n156866 -131450\n35317 116574\n-55 -8276\n", "output": ["15623.48163449716230388731\n"]}, {"input": "10 4\n12008 -11\n-5530 9583\n62204 -23121\n40822 36586\n9793 61661\n-17395 -19205\n6149 30660\n259 -58755\n65054 169825\n-69112 -11745\n", "output": ["27408.80825574159098323435\n"]}, {"input": "10 4\n12008 -11\n-5530 9583\n62204 -23121\n30048 36586\n9793 61661\n-17395 -19205\n6149 30660\n259 -58755\n65054 169825\n-69112 -11745\n", "output": ["23671.80654280538146849722\n"]}, {"input": "10 3\n9226 -48921\n-4609 71613\n18377 -24316\n20557 286\n14111 24878\n-10389 -78233\n1561 27855\n156866 -131450\n35317 116574\n-55 -8276\n", "output": ["15319.68214554311271058396\n"]}, {"input": "1 1\n-1 0\n", "output": ["0.50000000015870682546\n"]}, {"input": "2 1\n1133 22752\n864 -17916\n", "output": ["8968.41056152109013055451\n"]}, {"input": "4 2\n-100000 100000\n100000 100000\n-100000 -100000\n101100 -100000\n", "output": ["100000.00000000017462298274\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 4\n-3 0\n-4 4\n2 5\n2 2\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "8 4\n-3 0\n-4 4\n2 5\n3 2\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "2 1\n1299 22752\n935 -17916\n", "output": ["8970.19064736088694189675\n"]}, {"input": "8 4\n-3 0\n-4 4\n2 5\n3 0\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "2 1\n1299 31707\n935 -17916\n", "output": ["8970.19064736088694189675\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n44 69456\n-12480 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["14937.88147850256791571155\n"]}, {"input": "2 1\n1339 31707\n935 -17916\n", "output": ["8970.19064736088694189675\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n44 25288\n-12480 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12644.01913949839581619017\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n44 25288\n-11426 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12644.01913949839581619017\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n44 25288\n-11426 -40491\n5555 5734\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12644.01913949839581619017\n"]}, {"input": "10 2\n92740 -45467\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n78361 -88657\n43043 68859\n-43718 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 4\n-3 1\n-4 4\n1 5\n2 0\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "1 1\n0 -1\n", "output": ["0.50000000015870682546\n"]}, {"input": "4 2\n-100000 100000\n100000 100100\n-100000 -100000\n100100 -100000\n", "output": ["100000.00000000017462298274\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n18377 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n78361 -88657\n43043 68859\n-23309 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n78361 -58755\n43043 68859\n-23309 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 4\n-3 0\n-4 4\n3 5\n2 2\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n8952 71595\n8980 69456\n-12480 -40491\n9766 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["16196.07920191441553470213\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n5555 3298\n42998 -78478\n43043 68859\n-23309 -4464\n", "output": ["14937.88147850256791571155\n"]}, {"input": "8 4\n-3 0\n-4 4\n2 5\n3 0\n2 -2\n-2 -4\n-1 -2\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "2 1\n1299 58932\n935 -17916\n", "output": ["8970.19064736088694189675\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n44 69456\n-12480 -40491\n5555 3298\n60960 -78478\n43043 68859\n-23309 -4464\n", "output": ["14937.88147850256791571155\n"]}, {"input": "10 2\n10823 -45467\n-22104 24717\n29183 -23121\n20557 71595\n44 25288\n-12480 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12644.01913949839581619017\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n44 41577\n-11426 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["14937.88147850256791571155\n"]}, {"input": "10 2\n84471 -45467\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n78361 -88657\n43043 68859\n-43718 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "10 2\n10823 -45568\n-15266 24717\n18377 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n78361 -88657\n43043 68859\n-23309 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "10 2\n10823 -31631\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n78361 -58755\n43043 68859\n-23309 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 4\n-2 0\n-4 4\n3 5\n2 2\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "2 1\n490 22752\n354 -17916\n", "output": ["8959.74848977374495007098\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n8952 71595\n8980 69456\n-12480 -40491\n9766 3298\n78361 -78478\n43043 36992\n-23309 -4464\n", "output": ["16196.07920191441553470213\n"]}, {"input": "8 4\n-3 -1\n-8 4\n2 5\n3 2\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["2.85043856287359176349\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 125156\n8980 69456\n-12480 -40491\n5555 3298\n42998 -78478\n43043 68859\n-23309 -4464\n", "output": ["14937.88147850256791571155\n"]}, {"input": "8 4\n-3 0\n-4 4\n0 5\n3 0\n2 -2\n-2 -4\n-1 -2\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n87 69456\n-12480 -40491\n5555 3298\n60960 -78478\n43043 68859\n-23309 -4464\n", "output": ["14937.88147850256791571155\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n27 25288\n-12480 -40491\n1069 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12644.00720697373981238343\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n29183 -42957\n20557 71595\n44 25288\n-11426 -40491\n5555 444\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12766.32186774069487000816\n"]}, {"input": "10 2\n84471 -45467\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n151503 -88657\n43043 68859\n-43718 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 4\n-3 1\n-4 1\n1 5\n2 0\n2 0\n-2 -4\n-1 -1\n-6 0\n", "output": ["2.75826479718688233334\n"]}, {"input": "10 2\n10823 -45568\n-15266 24717\n18377 -23121\n20557 71595\n8980 69456\n-15002 -40491\n9766 18573\n78361 -88657\n43043 68859\n-23309 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "10 2\n10823 -31631\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -60094\n9766 18573\n78361 -58755\n43043 68859\n-23309 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 4\n-2 0\n-4 4\n3 3\n2 2\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "2 1\n703 22752\n354 -17916\n", "output": ["8959.74848977374495007098\n"]}, {"input": "8 4\n-3 -1\n-8 4\n2 5\n3 2\n2 -2\n-1 -4\n-1 -1\n-6 0\n", "output": ["2.85043856287359176349\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 125156\n8980 69456\n-12480 -40491\n5555 3298\n42998 -78478\n30816 68859\n-23309 -4464\n", "output": ["14937.88147850256791571155\n"]}, {"input": "8 4\n-3 0\n-4 4\n0 5\n3 0\n2 -3\n-2 -4\n-1 -2\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n20557 71595\n87 69456\n-12480 -40491\n5555 3298\n60960 -78478\n43043 68859\n-23309 -7997\n", "output": ["14937.88147850256791571155\n"]}, {"input": "10 2\n10823 -45467\n-22104 24717\n29183 -15151\n20557 71595\n44 30946\n-12480 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["15473.01564013956522103399\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n29183 -45742\n20557 71595\n27 25288\n-12480 -40491\n1069 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12644.00720697373981238343\n"]}, {"input": "9 2\n10823 -45467\n-4448 24717\n32551 -23121\n20557 71595\n44 41577\n-11426 -40491\n5555 3298\n78361 -78478\n43043 68859\n-23309 -4464\n", "output": ["12557.01788841605593916029\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n29183 -42957\n20557 71595\n44 25288\n-11426 -40491\n5555 444\n78361 -78478\n43043 68859\n-22217 -4464\n", "output": ["12766.32186774069487000816\n"]}, {"input": "10 2\n84471 -45467\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n151503 -88657\n43043 68859\n-52175 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 4\n-3 1\n-4 1\n1 5\n2 0\n2 1\n-2 -4\n-1 -1\n-6 0\n", "output": ["2.75826479718688233334\n"]}, {"input": "10 2\n10823 -45568\n-15266 24717\n18377 -24316\n20557 71595\n8980 69456\n-15002 -40491\n9766 18573\n78361 -88657\n43043 68859\n-23309 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "10 2\n10823 -31631\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -60094\n9766 18573\n78361 -58755\n43043 68859\n-37028 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 4\n-2 0\n-2 4\n3 3\n2 2\n2 -2\n-2 -4\n-1 -1\n-6 0\n", "output": ["3.16227766017362910134\n"]}, {"input": "2 1\n703 35995\n354 -17916\n", "output": ["8959.74848977374495007098\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -23121\n10378 71595\n8980 69456\n-12480 -40491\n9766 5466\n78361 -78478\n43043 36992\n-23309 -4464\n", "output": ["15803.87868269852333469316\n"]}, {"input": "8 2\n-3 -1\n-8 4\n2 5\n3 2\n2 -2\n-1 -4\n-1 -1\n-6 0\n", "output": ["1.58113883017563239264\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -30354\n20557 71595\n87 69456\n-12480 -40491\n5555 3298\n60960 -78478\n43043 68859\n-23309 -7997\n", "output": ["14937.88147850256791571155\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n29183 -45742\n20557 71595\n27 25288\n-12480 -40491\n1069 3298\n78361 -145504\n43043 68859\n-23309 -4464\n", "output": ["12644.00720697373981238343\n"]}, {"input": "9 2\n10823 -45467\n-15266 24717\n54460 -42957\n20557 71595\n44 25288\n-11426 -40491\n5555 444\n78361 -78478\n43043 68859\n-22217 -4464\n", "output": ["12766.32186774069487000816\n"]}, {"input": "10 2\n84471 -45467\n-15266 24717\n24210 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n151503 -88657\n43043 68859\n-52175 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "1 1\n-1 -4\n", "output": ["2.06155281290421044105\n"]}, {"input": "10 2\n10823 -31631\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -60094\n9766 18573\n78361 -58755\n43043 123380\n-37028 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 2\n-3 -1\n-8 4\n2 8\n3 2\n2 -2\n-1 -4\n-1 -1\n-6 0\n", "output": ["1.58113883017563239264\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -30354\n32456 71595\n87 69456\n-12480 -40491\n5555 3298\n60960 -78478\n43043 68859\n-23309 -7997\n", "output": ["14937.88147850256791571155\n"]}, {"input": "9 2\n10823 -45467\n-15266 10446\n54460 -42957\n20557 71595\n44 25288\n-11426 -40491\n5555 444\n78361 -78478\n43043 68859\n-22217 -4464\n", "output": ["12766.32186774069487000816\n"]}, {"input": "10 2\n84471 -45467\n-15266 24717\n24210 -23121\n20557 71595\n8980 69456\n-12480 -40491\n9766 18573\n280173 -88657\n43043 68859\n-52175 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 4\n-3 1\n-4 1\n1 5\n2 0\n0 1\n-2 -4\n-1 -1\n-6 -1\n", "output": ["2.06155281290421044105\n"]}, {"input": "1 1\n0 -4\n", "output": ["2.00000000010192025002\n"]}, {"input": "10 2\n12008 -31631\n-15266 24717\n29183 -23121\n20557 71595\n8980 69456\n-12480 -60094\n9766 18573\n78361 -58755\n43043 123380\n-37028 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 4\n-2 0\n-3 4\n3 3\n2 2\n2 -2\n-2 -2\n-1 -1\n-6 0\n", "output": ["3.00000000006406253306\n"]}, {"input": "10 2\n10823 -58635\n-15266 24717\n29183 -23121\n10378 71595\n8980 69456\n-12480 -40491\n9766 5466\n78361 -78478\n43043 36992\n-6873 -4464\n", "output": ["15185.93179194969343370758\n"]}, {"input": "10 2\n10823 -45467\n-18156 21388\n29183 -23121\n20557 125156\n8980 69456\n-12480 -40491\n5555 3298\n42998 -78478\n30816 68859\n-32211 -4464\n", "output": ["15125.03465252556998166256\n"]}, {"input": "10 2\n10823 -45467\n-15266 24717\n29183 -30354\n32456 13540\n87 69456\n-12480 -40491\n5555 3298\n60960 -78478\n43043 68859\n-23309 -7997\n", "output": ["14937.88147850256791571155\n"]}, {"input": "8 4\n-3 1\n-4 1\n1 5\n2 0\n0 1\n-2 -4\n-2 -1\n-6 -1\n", "output": ["2.06155281290421044105\n"]}, {"input": "10 2\n10823 -45568\n-15266 24717\n18377 -24316\n20557 7374\n8980 69456\n-15002 -40491\n2800 18573\n78361 -88657\n43043 116574\n-23309 -4464\n", "output": ["11922.41541813867661403492\n"]}, {"input": "10 2\n12008 -31631\n-15266 24717\n48594 -23121\n20557 71595\n8980 69456\n-12480 -60094\n9766 18573\n78361 -58755\n43043 123380\n-37028 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "8 4\n-2 0\n-3 4\n3 5\n2 2\n2 -2\n-2 -2\n-1 -1\n-6 0\n", "output": ["3.00000000006406253306\n"]}, {"input": "10 2\n1469 -58635\n-15266 24717\n29183 -23121\n10378 71595\n8980 69456\n-12480 -40491\n9766 5466\n78361 -78478\n43043 36992\n-6873 -4464\n", "output": ["15185.93179194969343370758\n"]}, {"input": "10 2\n10823 -45467\n-18156 21388\n29183 -23121\n20557 125156\n8980 69456\n-12480 -40491\n5555 3298\n42998 -78478\n17383 68859\n-32211 -4464\n", "output": ["15125.03465252556998166256\n"]}, {"input": "10 2\n7705 -45467\n-15266 24717\n29183 -30354\n32456 13540\n87 69456\n-12480 -40491\n5555 3298\n60960 -78478\n43043 68859\n-23309 -7997\n", "output": ["14937.88147850256791571155\n"]}, {"input": "9 2\n10823 -45467\n-4470 12442\n29183 -31133\n20557 71595\n27 25288\n-12480 -40491\n1069 3298\n78361 -145504\n43043 68859\n-23309 -4464\n", "output": ["6610.29999319246962841135\n"]}, {"input": "9 2\n10823 -45467\n-4448 16228\n32551 -23121\n20557 71595\n7 21599\n-11426 -40491\n5555 3298\n87026 -78478\n43043 68859\n-23309 -4464\n", "output": ["8476.98247887826983060222\n"]}, {"input": "8 4\n-3 1\n-4 1\n2 5\n2 0\n0 1\n-2 -4\n-2 -1\n-6 -1\n", "output": ["2.06155281290421044105\n"]}, {"input": "10 2\n12008 -31631\n-15266 24717\n48594 -23121\n20557 71595\n8980 69456\n-12480 -60094\n9766 18573\n45781 -58755\n43043 123380\n-37028 -4464\n", "output": ["14966.83208356479553913232\n"]}, {"input": "9 2\n10823 -45467\n-4448 16228\n32551 -23121\n20557 71595\n7 21599\n-11426 -25305\n5555 3298\n87026 -78478\n43043 68859\n-23309 -4464\n", "output": ["8476.98247887826983060222\n"]}, {"input": "8 4\n-3 1\n-4 1\n2 5\n2 1\n0 1\n-2 -4\n-2 -1\n-6 -1\n", "output": ["2.06155281290421044105\n"]}, {"input": "10 2\n1469 -58635\n-15266 24717\n42118 -23121\n10378 71595\n8980 69456\n-12480 -40491\n9766 5466\n78361 -78478\n43043 36992\n-6873 -3149\n", "output": ["14663.22140976625814801082\n"]}, {"input": "10 2\n7705 -45467\n-15266 24717\n29183 -30354\n32456 13540\n87 69456\n-12480 -40491\n1850 3298\n60960 -78478\n43043 68859\n-23309 -2587\n", "output": ["14525.67420982600015122443\n"]}, {"input": "10 2\n10823 -45568\n-15266 24717\n18377 -24316\n20557 7374\n8980 24878\n-15002 -40491\n2800 31316\n78361 -131450\n43043 116574\n-23309 -4464\n", "output": ["13614.54353922386508202180\n"]}, {"input": "10 2\n1469 -58635\n-15266 24717\n42118 -23121\n10378 71595\n8980 69456\n-12480 -40491\n9766 5466\n78361 -78478\n25013 36992\n-6873 -3149\n", "output": ["14663.22140976625814801082\n"]}, {"input": "10 4\n10823 -45467\n-18156 21843\n29183 -23121\n39290 125156\n8980 69456\n-12480 -40491\n5555 3298\n42998 -78478\n17383 68859\n-32211 -4464\n", "output": ["35269.77165742764191236347\n"]}, {"input": "10 2\n7705 -45467\n-15266 24717\n29183 -30354\n32456 13540\n87 69456\n-12480 -40491\n1850 3298\n60960 -78478\n61955 68859\n-23309 -2587\n", "output": ["14525.67420982600015122443\n"]}, {"input": "9 2\n10823 -45467\n-4448 10299\n32551 -23121\n20557 108902\n7 21599\n-11426 -25305\n5555 3298\n87026 -78478\n43043 68859\n-23309 -4464\n", "output": ["6155.21464110457782226149\n"]}, {"input": "10 2\n10823 -45568\n-15266 24717\n18377 -24316\n20557 7374\n8980 24878\n-15002 -40491\n3508 31316\n78361 -131450\n43043 116574\n-23309 -4464\n", "output": ["13614.54353922386508202180\n"]}, {"input": "10 2\n12008 -31631\n-15266 29391\n48594 -23121\n20557 71595\n8980 69456\n-12480 -33809\n12645 18573\n45781 -58755\n43043 123380\n-37028 -4464\n", "output": ["16999.46488250869515468366\n"]}], "source_codes": ["\nfn check(park_radius_sq: f64, k: usize, habitats: &Vec<(f64, f64)>) -> bool {\n    let mut count = 0;\n    for &(x, y) in habitats {\n        if x.powi(2) + y.powi(2) <= park_radius_sq {\n            count += 1;\n        }\n    }\n    count >= k\n}\n\nfn find_min_radius(n: usize, k: usize, habitats: &Vec<(f64, f64)>) -> f64 {\n    let mut low = 0.0;\n    let mut high = 2.0 * 10_f64.powi(5);\n\n    while low + 1e-6 < high {\n        let mid = low + (high - low) / 2.0;\n        if check(mid.powi(2), k, habitats) {\n            high = mid;\n        } else {\n            low = mid;\n        }\n    }\n\n    low\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut iter = input_line.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let k: usize = iter.next().unwrap().parse().unwrap();\n\n    let mut habitats = Vec::new();\n    for _ in 0..n {\n        input_line.clear();\n        std::io::stdin().read_line(&mut input_line).unwrap();\n        let mut iter = input_line.split_whitespace();\n        let x: f64 = iter.next().unwrap().parse().unwrap();\n        let y: f64 = iter.next().unwrap().parse().unwrap();\n        habitats.push((x, y));\n    }\n\n    let result = find_min_radius(n, k, &habitats);\n    println!(\"{:.10}\", result);\n}\n\n\n"], "responses": ["\nfn check(park_radius_sq: f64, k: usize, habitats: &Vec<(f64, f64)>) -> bool {\n    let mut count = 0;\n    for &(x, y) in habitats {\n        if x.powi(2) + y.powi(2) <= park_radius_sq {\n            count += 1;\n        }\n    }\n    count >= k\n}\n\nfn find_min_radius(n: usize, k: usize, habitats: &Vec<(f64, f64)>) -> f64 {\n    let mut low = 0.0;\n    let mut high = 2.0 * 10_f64.powi(5);\n\n    while low + 1e-6 < high {\n        let mid = low + (high - low) / 2.0;\n        if check(mid.powi(2), k, habitats) {\n            high = mid;\n        } else {\n            low = mid;\n        }\n    }\n\n    low\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut iter = input_line.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let k: usize = iter.next().unwrap().parse().unwrap();\n\n    let mut habitats = Vec::new();\n    for _ in 0..n {\n        input_line.clear();\n        std::io::stdin().read_line(&mut input_line).unwrap();\n        let mut iter = input_line.split_whitespace();\n        let x: f64 = iter.next().unwrap().parse().unwrap();\n        let y: f64 = iter.next().unwrap().parse().unwrap();\n        habitats.push((x, y));\n    }\n\n    let result = find_min_radius(n, k, &habitats);\n    println!(\"{:.10}\", result);\n}\n\n\n"], "prompt_tokens": [67327], "completion_tokens": [13733], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1575}
{"name": "1575_C. Cyclic Sum", "description": "Denote a cyclic sequence of size n as an array s such that s_n is adjacent to s_1. The segment s[r, l] where l < r is the concatenation of s[r, n] and s[1, l].\n\nYou are given an array a consisting of n integers. Define b as the cyclic sequence obtained from concatenating m copies of a. Note that b has size n \u22c5 m.\n\nYou are given an integer k where k = 1 or k is a prime number. Find the number of different segments in b where the sum of elements in the segment is divisible by k.\n\nTwo segments are considered different if the set of indices of the segments are different. For example, when n = 3 and m = 2, the set of indices for segment s[2, 5] is \\{2, 3, 4, 5\\}, and for segment s[5, 2] is \\{5, 6, 1, 2\\}. In particular, the segments s[1, 6], s[2,1], \u2026, s[6, 5] are considered as the same segment.\n\nOutput the answer modulo 10^9 + 7.\n\nInput\n\nThe first line contains three integers n, m, and k (1 \u2264 n, m, k \u2264 2 \u22c5 10^5, k = 1 or k is a prime number).\n\nThe second line contains n integers a_1, a_2, \u2026, a_n (0 \u2264 a_i \u2264 2 \u22c5 10^5).\n\nOutput\n\nOutput an integer denoting the number of different segments in b where the sum of elements in the segment is divisible by k, modulo 10^9 + 7.\n\nExamples\n\nInput\n\n\n5 1 5\n1 2 3 4 3\n\n\nOutput\n\n\n4\n\n\nInput\n\n\n5 1 5\n1 2 3 4 5\n\n\nOutput\n\n\n5\n\n\nInput\n\n\n5 4 5\n1 2 3 4 5\n\n\nOutput\n\n\n125\n\nNote\n\nIn the first example, all valid segments are [1,4], [2, 3], [3, 5], and [4, 2].\n\nIn the second example, one of the valid segments is [1, 5].", "tags": ["data structures", "fft", "number theory"], "difficulty": 9, "id": 1575, "sample_io": [{"input": "5 1 5\n1 2 3 4 3\n", "output": ["4\n"]}, {"input": "5 1 5\n1 2 3 4 5\n", "output": ["5\n"]}, {"input": "5 4 5\n1 2 3 4 5\n", "output": ["125\n"]}], "test_list": [{"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 2 5 1 2 1 4 4 1 5 1 4 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 4 3 3 1 2 2 2 1 3 2 1 1 5 1 1 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 2 5 3 4 4 2 3 3 2 1 2 3 2 3 5 1 5 5 5 4\n", "output": ["0\n"]}, {"input": "1 200000 103231\n3\n", "output": ["200000\n"]}, {"input": "1 1 3\n3\n", "output": ["1\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 2 5 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 4 3 3 1 2 2 2 1 3 2 1 1 5 1 1 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 2 5 3 4 4 2 3 3 2 1 2 3 2 3 5 1 5 5 5 4\n", "output": ["0\n"]}, {"input": "1 200000 122519\n3\n", "output": ["200000\n"]}, {"input": "6 1 5\n1 2 3 4 3\n", "output": ["7\n"]}, {"input": "5 1 4\n1 2 3 4 5\n", "output": ["4\n"]}, {"input": "5 4 7\n1 2 3 4 5\n", "output": ["44\n"]}, {"input": "1 200000 25003\n3\n", "output": ["1400000\n"]}, {"input": "6 1 5\n1 2 3 4 1\n", "output": ["8\n"]}, {"input": "5 1 4\n1 4 3 4 5\n", "output": ["6\n"]}, {"input": "5 4 7\n1 2 3 5 5\n", "output": ["48\n"]}, {"input": "1 157539 25003\n3\n", "output": ["945234\n"]}, {"input": "5 2 4\n1 4 3 4 5\n", "output": ["20\n"]}, {"input": "5 4 7\n1 2 1 5 5\n", "output": ["61\n"]}, {"input": "2 157539 25003\n1\n", "output": ["3938475\n"]}, {"input": "5 4 7\n1 2 1 7 5\n", "output": ["52\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 0 5 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 1 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 2 3 3 2 1 2 3 2 5 5 1 5 5 5 4\n", "output": ["100\n"]}, {"input": "2 157539 9896\n1\n", "output": ["9609879\n"]}, {"input": "5 4 2\n1 2 1 7 5\n", "output": ["189\n"]}, {"input": "2 11490 9896\n1\n", "output": ["57450\n"]}, {"input": "5 4 2\n1 2 1 7 0\n", "output": ["181\n"]}, {"input": "2 11490 3948\n1\n", "output": ["103410\n"]}, {"input": "1 4 2\n1 2 1 7 0\n", "output": ["5\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 0 5 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 0 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["200\n"]}, {"input": "1 8 2\n1 2 1 7 0\n", "output": ["25\n"]}, {"input": "2 13514 4655\n1\n", "output": ["121626\n"]}, {"input": "1 15 2\n1 2 1 7 0\n", "output": ["105\n"]}, {"input": "1 13514 4655\n1\n", "output": ["27028\n"]}, {"input": "1 13514 168\n1\n", "output": ["1081120\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 0 8 1 3 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 1 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 0 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["300\n"]}, {"input": "1 24185 168\n1\n", "output": ["3458455\n"]}, {"input": "1 24185 135\n1\n", "output": ["4329115\n"]}, {"input": "2 15 2\n1 1 2 12 0\n", "output": ["421\n"]}, {"input": "1 24185 237\n1\n", "output": ["2466870\n"]}, {"input": "2 15 2\n1 0 1 12 -1\n", "output": ["435\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 6 0 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["5800\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 12 0 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 0 2 1 4 4 3 2 7 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["5900\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 12 0 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 0 2 1 4 4 3 2 5 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["6000\n"]}, {"input": "5 1 2\n1 2 3 4 3\n", "output": ["10\n"]}, {"input": "6 4 5\n1 2 3 4 5\n", "output": ["201\n"]}, {"input": "1 200000 2888\n3\n", "output": ["13800000\n"]}, {"input": "5 1 4\n1 2 3 4 10\n", "output": ["3\n"]}, {"input": "5 4 7\n0 2 3 4 5\n", "output": ["125\n"]}, {"input": "6 1 2\n1 2 3 4 1\n", "output": ["15\n"]}, {"input": "1 53910 25003\n3\n", "output": ["107820\n"]}, {"input": "11 1 5\n1 1 3 4 1\n", "output": ["57\n"]}, {"input": "5 2 5\n1 4 3 4 5\n", "output": ["16\n"]}, {"input": "1 157539 44233\n1\n", "output": ["472617\n"]}, {"input": "4 1 5\n1 1 3 4 2\n", "output": ["2\n"]}, {"input": "2 157539 30107\n1\n", "output": ["3308319\n"]}, {"input": "5 4 7\n1 2 1 7 6\n", "output": ["40\n"]}, {"input": "2 157539 9896\n0\n", "output": ["273830314\n"]}, {"input": "2 4620 9896\n1\n", "output": ["4620\n"]}, {"input": "1 11490 3948\n1\n", "output": ["22980\n"]}, {"input": "2 11490 3200\n1\n", "output": ["149370\n"]}, {"input": "1 11 2\n1 2 1 7 0\n", "output": ["55\n"]}, {"input": "100 101 126611\n5 5 3 1 1 5 3 3 4 4 0 8 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 0 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["202\n"]}, {"input": "2 24163 4655\n1\n", "output": ["507423\n"]}, {"input": "1 23 2\n1 2 1 7 0\n", "output": ["253\n"]}, {"input": "1 10824 168\n1\n", "output": ["692736\n"]}, {"input": "1 41725 168\n1\n", "output": ["10347800\n"]}, {"input": "1 16270 135\n1\n", "output": ["1952400\n"]}, {"input": "1 24185 92\n1\n", "output": ["6336470\n"]}, {"input": "2 8 2\n1 1 1 12 -1\n", "output": ["113\n"]}, {"input": "2 15 2\n2 0 1 12 -1\n", "output": ["871\n"]}, {"input": "2 1 2\n1 0 1 1 -1\n", "output": ["1\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 12 0 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 0 2 1 4 4 3 2 5 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 0 1 1 2 3 2 1 5 1 5 5 10 2\n", "output": ["6100\n"]}, {"input": "6 4 5\n0 2 3 4 5\n", "output": ["80\n"]}, {"input": "1 97832 2888\n3\n", "output": ["3228456\n"]}, {"input": "1 239816 25003\n1\n", "output": ["2158344\n"]}, {"input": "5 2 5\n1 4 3 4 8\n", "output": ["19\n"]}, {"input": "8 4 7\n1 2 1 5 3\n", "output": ["116\n"]}, {"input": "2 157539 55161\n1\n", "output": ["1417851\n"]}, {"input": "5 7 2\n1 2 1 11 5\n", "output": ["603\n"]}, {"input": "2 4620 337\n1\n", "output": ["244860\n"]}, {"input": "1 11490 7563\n1\n", "output": ["11490\n"]}, {"input": "1 11 2\n0 2 1 7 0\n", "output": ["111\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 3 4 4 0 8 1 3 2 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 0 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["5700\n"]}, {"input": "1 16790 4901\n1\n", "output": ["50370\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 0 8 1 3 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 0 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 1 4 4 3 4 4 1 5 4 1 4 2 2 1 5 3 4 4 0 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["400\n"]}, {"input": "2 16270 135\n1\n", "output": ["7825870\n"]}, {"input": "1 24185 94\n1\n", "output": ["6215545\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 12 0 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 1 1 5 1 2 0 1 4 3 1 5 5 5 2 4 6 5 0 2 1 4 4 3 2 5 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 0 1 1 2 3 2 1 5 1 5 5 10 2\n", "output": ["6200\n"]}, {"input": "1 200000 128069\n0\n", "output": ["999799728\n"]}, {"input": "5 1 2\n1 0 3 5 3\n", "output": ["9\n"]}, {"input": "6 4 5\n0 2 3 4 6\n", "output": ["265\n"]}, {"input": "6 1 5\n2 0 3 0 3\n", "output": ["11\n"]}, {"input": "1 239816 11429\n1\n", "output": ["4796320\n"]}, {"input": "8 4 7\n1 2 2 5 3\n", "output": ["144\n"]}, {"input": "2 200474 55161\n1\n", "output": ["2606162\n"]}, {"input": "5 7 2\n2 2 1 11 5\n", "output": ["595\n"]}, {"input": "2 4620 389\n1\n", "output": ["207900\n"]}, {"input": "100 101 126611\n5 5 3 1 1 5 3 3 4 6 0 5 1 2 1 4 4 1 5 1 6 1 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 2 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["101\n"]}, {"input": "1 16790 9518\n1\n", "output": ["16790\n"]}, {"input": "1 29023 135\n1\n", "output": ["6210922\n"]}, {"input": "6 4 5\n0 2 3 2 6\n", "output": ["88\n"]}, {"input": "1 239816 18916\n1\n", "output": ["2877792\n"]}, {"input": "2 200474 55161\n0\n", "output": ["758896637\n"]}, {"input": "5 7 2\n2 2 2 11 5\n", "output": ["799\n"]}, {"input": "2 4620 151\n1\n", "output": ["559020\n"]}, {"input": "4 11490 7563\n1\n", "output": ["252780\n"]}, {"input": "1 16790 5777\n1\n", "output": ["33580\n"]}, {"input": "2 28 2\n0 1 3 12 0\n", "output": ["1513\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 4 0 8 1 3 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 0 4 1 4 3 1 5 5 0 2 4 4 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 4 4 -1 3 3 1 1 2 3 2 1 5 0 5 5 5 2\n", "output": ["500\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 5 0 10 1 3 1 4 6 0 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 1 1 5 1 2 0 1 4 3 1 5 5 5 2 4 6 5 0 2 1 4 4 3 2 5 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 0 1 1 2 3 2 1 5 1 5 5 10 2\n", "output": ["6300\n"]}, {"input": "1 171674 153195\n0\n", "output": ["471790400\n"]}, {"input": "6 4 4\n0 2 3 2 6\n", "output": ["121\n"]}, {"input": "2 135820 55161\n0\n", "output": ["788017450\n"]}, {"input": "2 3956 151\n1\n", "output": ["415380\n"]}, {"input": "7 11490 7563\n1\n", "output": ["804300\n"]}, {"input": "1 50 2\n1 5 0 12 0\n", "output": ["1201\n"]}, {"input": "2 38 2\n0 1 3 12 0\n", "output": ["2813\n"]}, {"input": "2 2 2\n2 0 1 26 -1\n", "output": ["13\n"]}, {"input": "100 100 126611\n7 5 3 1 1 5 3 4 4 3 0 8 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 0 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 7 2 2 3 5 0 3 4 -1 3 3 1 1 2 3 0 1 5 1 5 5 5 2\n", "output": ["600\n"]}, {"input": "6 4 4\n0 2 6 2 6\n", "output": ["297\n"]}, {"input": "5 2 4\n2 0 3 0 3\n", "output": ["27\n"]}, {"input": "2 135820 55161\n1\n", "output": ["1222380\n"]}, {"input": "1 3956 151\n1\n", "output": ["102856\n"]}, {"input": "3 38 2\n0 1 3 12 0\n", "output": ["7107\n"]}, {"input": "3 10 2\n1 1 2 8 -2\n", "output": ["471\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 5 0 10 1 3 1 4 6 0 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 1 1 5 1 2 0 0 4 3 1 5 5 5 2 4 6 5 0 2 1 4 4 3 2 5 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 0 1 1 2 3 2 1 5 1 5 5 8 2\n", "output": ["6500\n"]}, {"input": "6 2 4\n0 2 6 2 6\n", "output": ["69\n"]}, {"input": "1 3956 14\n1\n", "output": ["1115592\n"]}, {"input": "100 101 126611\n5 5 3 1 1 5 3 3 4 6 0 5 1 2 1 4 4 1 5 1 6 1 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 0 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 1 2 4 5 5 1 3 4 4 4 3 4 4 1 5 4 0 4 2 2 3 5 3 4 4 2 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["303\n"]}, {"input": "3 38 2\n0 0 3 12 0\n", "output": ["6385\n"]}, {"input": "1 10 2\n1 1 2 8 -2\n", "output": ["41\n"]}, {"input": "6 2 4\n0 2 6 2 3\n", "output": ["30\n"]}, {"input": "4 4 5\n2 2 2 1 6\n", "output": ["36\n"]}, {"input": "2 7 2\n2 1 2 19 5\n", "output": ["91\n"]}, {"input": "1 3956 24\n1\n", "output": ["648784\n"]}, {"input": "3 38 2\n0 0 6 12 0\n", "output": ["12883\n"]}, {"input": "110 100 126611\n5 10 3 1 1 5 3 4 4 5 0 10 1 3 1 4 6 0 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 0 1 5 1 2 0 0 4 3 1 5 5 5 2 4 6 5 0 2 1 4 4 3 2 5 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 0 1 1 2 3 2 1 5 1 5 5 8 2\n", "output": ["6600\n"]}, {"input": "2 9 2\n2 1 2 19 5\n", "output": ["153\n"]}, {"input": "1 7707 24\n1\n", "output": ["2473947\n"]}, {"input": "1 25 4\n1 4 2 12 1\n", "output": ["150\n"]}, {"input": "100 100 126611\n7 8 3 1 1 4 3 4 4 3 0 8 1 3 0 4 6 1 5 1 6 11 3 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 0 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 7 2 2 3 5 0 3 4 -1 3 3 1 1 2 3 0 1 5 1 5 5 5 2\n", "output": ["700\n"]}, {"input": "100 101 126611\n5 5 3 1 1 5 1 3 4 6 0 5 1 2 1 4 4 1 5 1 6 1 4 4 1 1 4 4 2 5 2 2 0 5 1 5 4 5 11 3 3 0 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 1 2 4 5 5 1 3 4 4 4 3 4 4 1 5 4 0 4 2 2 3 5 3 4 4 2 3 3 2 1 2 3 2 1 5 1 2 5 5 4\n", "output": ["404\n"]}, {"input": "110 100 126611\n5 10 3 1 1 5 3 4 4 5 0 10 1 3 1 4 6 0 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 0 1 5 1 2 0 0 4 3 1 5 5 5 2 4 6 5 0 2 1 4 4 3 0 5 1 5 1 1 4 2 2 3 5 3 4 4 -1 3 0 1 1 2 3 2 1 5 1 5 5 8 2\n", "output": ["6700\n"]}, {"input": "100 101 126611\n7 8 3 1 1 4 3 4 4 3 1 8 1 3 0 4 6 1 5 1 6 11 3 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 0 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 7 2 2 3 5 0 3 4 -1 3 3 1 1 2 3 -1 1 5 1 5 5 5 2\n", "output": ["606\n"]}, {"input": "100 101 126611\n7 8 3 1 1 4 3 4 4 3 1 8 1 3 1 4 6 1 5 1 6 11 3 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 0 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 7 2 2 3 5 0 3 4 -1 3 3 1 1 2 3 -1 1 5 1 5 5 5 2\n", "output": ["505\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 5 4 4 4 0 8 1 3 1 4 1 1 5 1 6 3 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 0 2 0 3 2 1 1 5 1 3 4 4 4 3 1 5 5 5 2 4 6 5 1 2 0 4 4 3 2 4 0 5 0 1 4 2 2 3 5 3 4 4 -1 3 3 2 1 2 3 2 1 0 1 2 5 0 2\n", "output": ["6400\n"]}, {"input": "100 100 126611\n4 5 3 1 1 5 3 4 4 4 0 8 0 3 0 4 7 1 5 1 6 3 4 4 1 1 4 1 1 5 0 2 1 5 1 6 7 5 11 0 3 0 2 2 2 1 3 2 1 1 5 1 2 4 1 6 3 0 3 5 5 2 4 5 5 1 2 1 4 4 3 0 4 1 5 4 1 1 2 2 3 5 3 4 4 1 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["800\n"]}, {"input": "110 101 126611\n5 5 3 1 1 5 5 4 4 4 0 8 1 3 1 4 1 1 5 1 6 5 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 0 2 0 3 2 1 1 5 1 3 4 4 4 3 1 5 5 5 2 4 6 5 1 2 0 4 4 3 2 4 0 5 0 1 4 2 2 3 5 3 4 4 -1 3 3 2 1 2 3 2 1 0 1 2 5 0 2\n", "output": ["6464\n"]}, {"input": "110 110 126611\n1 5 6 1 1 5 3 4 4 3 1 8 1 3 1 4 6 1 5 1 6 6 4 4 0 1 5 4 1 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 0 1 2 1 2 4 1 4 3 1 5 5 5 2 4 6 5 0 2 1 8 4 3 2 4 1 5 5 2 4 3 2 4 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 0 5 5 9 2\n", "output": ["6710\n"]}, {"input": "100 100 126611\n4 5 3 1 1 5 3 4 4 4 0 8 0 3 0 4 7 1 5 1 6 3 4 4 1 1 4 1 1 5 0 2 1 5 1 6 7 5 11 0 3 0 2 2 2 1 2 2 1 1 5 1 2 4 1 6 3 0 3 5 5 2 4 5 5 0 2 1 4 4 3 0 4 1 5 4 1 1 2 2 3 5 3 4 4 1 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["900\n"]}, {"input": "100 101 126611\n7 8 3 1 1 4 3 4 4 3 1 8 1 3 1 4 6 1 5 1 6 11 3 4 0 1 5 4 2 5 0 2 1 5 1 3 8 5 11 3 3 2 2 2 2 1 3 2 1 0 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 7 2 2 6 5 0 0 4 -1 3 3 1 1 2 3 -1 1 5 1 5 5 5 2\n", "output": ["707\n"]}, {"input": "110 101 126611\n5 5 3 1 1 5 5 4 4 4 0 7 1 3 1 4 1 1 5 1 6 5 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 0 2 0 3 2 1 1 5 1 3 4 4 4 3 1 5 5 5 2 0 6 5 1 2 0 4 4 3 2 4 0 5 0 2 4 2 2 3 5 3 4 4 -1 3 3 2 1 2 3 2 1 0 1 2 5 0 2\n", "output": ["6565\n"]}, {"input": "100 101 126611\n7 8 3 1 1 4 3 4 4 3 1 8 1 3 1 4 6 1 5 1 6 11 3 4 0 1 5 4 2 5 0 2 1 5 1 3 8 5 11 3 3 2 2 2 2 1 3 2 1 0 5 1 2 4 1 1 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 7 2 2 6 5 0 0 4 -1 3 2 0 1 2 3 -1 1 5 1 5 5 5 2\n", "output": ["808\n"]}, {"input": "110 110 126611\n1 5 6 1 1 5 3 4 4 3 1 8 1 3 1 4 6 1 5 1 6 6 4 4 0 1 5 4 1 5 -1 2 1 5 1 3 4 5 11 3 3 1 2 0 0 1 3 1 0 2 2 0 2 4 1 4 3 1 5 5 5 2 4 6 5 0 2 1 8 4 3 2 4 1 5 5 2 4 3 2 4 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 0 5 5 9 2\n", "output": ["6930\n"]}, {"input": "100 100 126611\n7 1 3 1 1 5 3 3 4 7 0 5 1 2 1 7 4 1 5 1 6 5 4 4 1 1 4 4 2 0 2 2 1 9 0 3 4 5 11 3 3 1 2 2 0 1 3 1 1 0 5 1 2 6 1 4 3 1 10 3 5 2 3 5 6 1 2 4 4 4 6 7 4 1 5 5 0 4 2 1 3 5 3 4 4 0 0 3 0 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["1000\n"]}, {"input": "110 100 126611\n5 6 3 1 1 4 2 4 -1 4 -1 15 1 3 1 4 4 0 5 1 6 3 4 4 2 2 4 4 2 5 1 4 1 5 1 1 4 5 11 3 1 1 2 2 2 2 3 2 1 1 5 1 2 5 1 4 3 1 5 5 5 2 4 5 5 1 2 -1 4 4 3 4 4 1 5 4 2 4 2 2 3 5 3 4 4 -1 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["5600\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 2 5 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 4 3 3 1 2 2 2 1 3 2 1 1 5 1 1 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 2 3 3 2 1 2 3 2 3 5 1 5 5 5 4\n", "output": ["0\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 2 5 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 8 3 3 1 2 2 2 1 3 2 1 1 5 1 1 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 2 3 3 2 1 2 3 2 3 5 1 5 5 5 4\n", "output": ["0\n"]}, {"input": "6 1 5\n1 1 3 4 1\n", "output": ["7\n"]}, {"input": "5 4 7\n1 2 5 5 5\n", "output": ["44\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 2 5 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 8 3 3 1 2 2 2 1 3 2 1 1 5 1 1 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 2 3 3 2 1 2 3 2 5 5 1 5 5 5 4\n", "output": ["0\n"]}, {"input": "1 157539 25003\n1\n", "output": ["945234\n"]}, {"input": "6 1 5\n1 1 3 4 2\n", "output": ["6\n"]}, {"input": "5 2 4\n1 4 3 4 9\n", "output": ["20\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 2 5 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 1 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 2 3 3 2 1 2 3 2 5 5 1 5 5 5 4\n", "output": ["0\n"]}, {"input": "6 1 5\n2 1 3 4 2\n", "output": ["6\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 0 5 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 1 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 2 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["100\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 0 5 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 2 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["100\n"]}, {"input": "2 11490 4655\n1\n", "output": ["103410\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 0 8 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 0 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["200\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 0 8 1 3 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 0 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["200\n"]}, {"input": "1 15 2\n1 2 1 12 0\n", "output": ["105\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 0 8 1 3 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 1 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 0 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["200\n"]}, {"input": "1 15 2\n1 2 2 12 0\n", "output": ["105\n"]}, {"input": "1 15 2\n1 1 2 12 0\n", "output": ["105\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 4 0 8 1 3 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 1 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 0 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["300\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 4 0 8 1 3 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 1 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 -1 3 3 2 1 2 3 2 1 5 1 5 5 5 4\n", "output": ["200\n"]}, {"input": "2 15 2\n1 1 2 12 -1\n", "output": ["421\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 4 0 8 1 3 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 1 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 -1 3 3 2 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["200\n"]}, {"input": "2 15 2\n1 1 1 12 -1\n", "output": ["421\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 4 0 8 1 3 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 5 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 4 4 -1 3 3 2 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["200\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 4 0 8 1 3 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 4 4 -1 3 3 2 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["200\n"]}, {"input": "2 15 2\n1 0 1 1 -1\n", "output": ["435\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 4 0 8 1 3 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 4 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["200\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 4 0 8 1 3 1 4 6 1 5 1 6 3 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 4 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["200\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 4 0 8 1 3 1 4 6 1 5 1 6 6 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 4 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["200\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 3 0 8 1 3 1 4 6 1 5 1 6 6 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 4 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["200\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 3 0 8 1 3 1 4 6 1 5 1 6 6 4 4 1 1 4 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["200\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 3 0 8 1 3 1 4 6 1 5 1 6 6 4 4 1 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["200\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 3 0 8 1 3 1 4 6 1 5 1 6 6 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["300\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 3 0 8 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["300\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 6 0 8 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["300\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 4 4 6 0 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 4 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["300\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 6 0 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 7 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["5800\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 12 0 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 1 2 1 4 4 3 2 7 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["5800\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 12 0 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 2 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 0 2 1 4 4 3 2 5 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 5 2\n", "output": ["5900\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 12 0 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 0 2 1 4 4 3 2 5 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 10 2\n", "output": ["6000\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 12 1 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 0 2 1 4 4 3 2 5 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 10 2\n", "output": ["5900\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 12 1 10 1 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 0 2 1 8 4 3 2 5 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 10 2\n", "output": ["5900\n"]}, {"input": "110 100 126611\n5 5 3 1 1 5 3 4 4 12 1 10 2 3 1 4 6 1 5 1 6 11 4 4 0 1 5 4 2 5 0 2 1 5 1 3 4 5 11 3 3 1 2 2 0 1 3 2 1 1 5 1 2 4 1 4 3 1 5 5 5 2 4 6 5 0 2 1 8 4 3 2 5 1 5 4 1 4 2 2 3 5 3 3 4 -1 3 3 1 1 2 3 2 1 5 1 5 5 10 2\n", "output": ["5900\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 2 5 1 2 1 4 4 1 5 1 4 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 4 3 3 1 2 2 2 1 3 2 1 1 5 1 1 4 1 4 3 1 5 5 5 3 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 2 5 3 4 4 2 3 3 2 1 2 3 2 3 5 1 5 5 5 4\n", "output": ["0\n"]}, {"input": "1 200000 103231\n5\n", "output": ["200000\n"]}, {"input": "1 1 6\n3\n", "output": ["0\n"]}, {"input": "5 1 5\n1 2 3 5 5\n", "output": ["6\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 2 5 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 5 4 3 3 1 2 2 2 1 3 2 1 1 5 1 1 4 1 4 3 1 5 5 5 1 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 2 5 3 4 4 2 3 3 2 1 2 3 2 3 5 1 5 5 5 4\n", "output": ["0\n"]}, {"input": "6 1 5\n1 2 3 0 3\n", "output": ["4\n"]}, {"input": "100 100 126611\n5 5 3 1 1 5 3 3 4 4 2 5 1 2 1 4 4 1 5 1 6 3 4 4 1 1 4 4 2 5 2 2 1 5 1 3 4 0 4 3 3 1 2 2 2 1 3 2 1 1 5 1 1 4 1 4 3 1 5 5 5 2 4 5 5 1 2 4 4 4 3 4 4 1 5 4 1 4 2 2 3 5 3 4 4 2 3 3 2 1 2 3 2 3 5 1 5 5 5 4\n", "output": ["100\n"]}], "source_codes": ["\nfn count_segments(n: i32, m: i32, k: i32, a: Vec<i32>) -> i32 {\n    let mut prefix_sum = vec![0];\n    for &num in a.iter() {\n        prefix_sum.push((prefix_sum.last().unwrap() + num) % k);\n    }\n\n    let mut count = std::collections::HashMap::new();\n    let mut total_count = 0;\n    for &num in prefix_sum.iter() {\n        let complement = (num - m) % k;\n        total_count += *count.get(&complement).unwrap_or(&0);\n        *count.entry(num).or_insert(0) += 1;\n    }\n\n    total_count % (10_i32.pow(9) + 7)\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut input_iter = input_line.split_whitespace();\n    let n: i32 = input_iter.next().unwrap().parse().unwrap();\n    let m: i32 = input_iter.next().unwrap().parse().unwrap();\n    let k: i32 = input_iter.next().unwrap().parse().unwrap();\n\n    let mut a = String::new();\n    std::io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<i32> = a.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    println!(\"{}\", count_segments(n, m, k, a));\n}\n\n\n"], "responses": ["\nfn count_segments(n: i32, m: i32, k: i32, a: Vec<i32>) -> i32 {\n    let mut prefix_sum = vec![0];\n    for &num in a.iter() {\n        prefix_sum.push((prefix_sum.last().unwrap() + num) % k);\n    }\n\n    let mut count = std::collections::HashMap::new();\n    let mut total_count = 0;\n    for &num in prefix_sum.iter() {\n        let complement = (num - m) % k;\n        total_count += *count.get(&complement).unwrap_or(&0);\n        *count.entry(num).or_insert(0) += 1;\n    }\n\n    total_count % (10_i32.pow(9) + 7)\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut input_iter = input_line.split_whitespace();\n    let n: i32 = input_iter.next().unwrap().parse().unwrap();\n    let m: i32 = input_iter.next().unwrap().parse().unwrap();\n    let k: i32 = input_iter.next().unwrap().parse().unwrap();\n\n    let mut a = String::new();\n    std::io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<i32> = a.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    println!(\"{}\", count_segments(n, m, k, a));\n}\n\n\n"], "prompt_tokens": [54277], "completion_tokens": [10348], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1575}
{"name": "1575_D. Divisible by Twenty-Five", "description": "Mr. Chanek has an integer represented by a string s. Zero or more digits have been erased and are denoted by the character _. There are also zero or more digits marked by the character X, meaning they're the same digit.\n\nMr. Chanek wants to count the number of possible integer s, where s is divisible by 25. Of course, s must not contain any leading zero. He can replace the character _ with any digit. He can also replace the character X with any digit, but it must be the same for every character X.\n\nAs a note, a leading zero is any 0 digit that comes before the first nonzero digit in a number string in positional notation. For example, 0025 has two leading zeroes. An exception is the integer zero, (0 has no leading zero, but 0000 has three leading zeroes).\n\nInput\n\nOne line containing the string s (1 \u2264 |s| \u2264 8). The string s consists of the characters 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, _, and X.\n\nOutput\n\nOutput an integer denoting the number of possible integer s.\n\nExamples\n\nInput\n\n\n25\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n_00\n\n\nOutput\n\n\n9\n\n\nInput\n\n\n_XX\n\n\nOutput\n\n\n9\n\n\nInput\n\n\n0\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n0_25\n\n\nOutput\n\n\n0\n\nNote\n\nIn the first example, the only possible s is 25.\n\nIn the second and third example, s \u2208 \\{100, 200,300,400,500,600,700,800,900\\}.\n\nIn the fifth example, all possible s will have at least one leading zero.", "tags": ["brute force", "dfs and similar", "dp"], "difficulty": 10, "id": 1575, "sample_io": [{"input": "0\n", "output": ["1\n"]}, {"input": "_XX\n", "output": ["9\n"]}, {"input": "_00\n", "output": ["9\n"]}, {"input": "0_25\n", "output": ["0\n"]}, {"input": "25\n", "output": ["1\n"]}], "test_list": [{"input": "X\n", "output": ["1\n"]}, {"input": "6X\n", "output": ["0\n"]}, {"input": "585X27X5\n", "output": ["2\n"]}, {"input": "XX_X_3_X\n", "output": ["200\n"]}, {"input": "_5\n", "output": ["2\n"]}, {"input": "050\n", "output": ["0\n"]}, {"input": "0X5\n", "output": ["0\n"]}, {"input": "XX5_\n", "output": ["9\n"]}, {"input": "X1_9_0X5\n", "output": ["200\n"]}, {"input": "___X_X25\n", "output": ["90000\n"]}, {"input": "0_5\n", "output": ["0\n"]}, {"input": "5537___5\n", "output": ["200\n"]}, {"input": "85X1X525\n", "output": ["10\n"]}, {"input": "__X___X_\n", "output": ["360000\n"]}, {"input": "_3472XXX\n", "output": ["9\n"]}, {"input": "_X_X_3_X\n", "output": ["3600\n"]}, {"input": "79XX_925\n", "output": ["100\n"]}, {"input": "_4_7XXXX\n", "output": ["90\n"]}, {"input": "X_1X56_5\n", "output": ["180\n"]}, {"input": "_X0\n", "output": ["18\n"]}, {"input": "X2XXX9X_\n", "output": ["3\n"]}, {"input": "8_XX2_00\n", "output": ["1000\n"]}, {"input": "_\n", "output": ["1\n"]}, {"input": "5\n", "output": ["0\n"]}, {"input": "_X_X_X__\n", "output": ["36000\n"]}, {"input": "_87_8XXX\n", "output": ["90\n"]}, {"input": "0025\n", "output": ["0\n"]}, {"input": "0_____\n", "output": ["0\n"]}, {"input": "__\n", "output": ["3\n"]}, {"input": "0___\n", "output": ["0\n"]}, {"input": "0____\n", "output": ["0\n"]}, {"input": "X2\n", "output": ["0\n"]}, {"input": "58994_00\n", "output": ["10\n"]}, {"input": "________\n", "output": ["3600000\n"]}, {"input": "0__\n", "output": ["0\n"]}, {"input": "XX\n", "output": ["0\n"]}, {"input": "_____X__\n", "output": ["3600000\n"]}, {"input": "_11X__XX\n", "output": ["900\n"]}, {"input": "X5\n", "output": ["2\n"]}, {"input": "X6\n", "output": ["0\n"]}, {"input": "6_76_000\n", "output": ["100\n"]}, {"input": "_206_2_X\n", "output": ["360\n"]}, {"input": "_X8__725\n", "output": ["9000\n"]}, {"input": "X_\n", "output": ["3\n"]}, {"input": "53X_94_X\n", "output": ["40\n"]}, {"input": "X14___X5\n", "output": ["2000\n"]}, {"input": "__X__X__\n", "output": ["360000\n"]}, {"input": "1XXX9___\n", "output": ["400\n"]}, {"input": "362__6__\n", "output": ["400\n"]}, {"input": "_7XX16X_\n", "output": ["36\n"]}, {"input": "0075\n", "output": ["0\n"]}, {"input": "00\n", "output": ["0\n"]}, {"input": "XX_2\n", "output": ["0\n"]}, {"input": "X_X2___5\n", "output": ["18000\n"]}, {"input": "2X3X7___\n", "output": ["400\n"]}, {"input": "X01_X___\n", "output": ["3600\n"]}, {"input": "4_3X__00\n", "output": ["10000\n"]}, {"input": "XXXX3XXX\n", "output": ["0\n"]}, {"input": "_XXXXXX\n", "output": ["9\n"]}, {"input": "_X\n", "output": ["3\n"]}, {"input": "X_______\n", "output": ["3600000\n"]}, {"input": "92_6X8X5\n", "output": ["20\n"]}, {"input": "XX9_X_X_\n", "output": ["300\n"]}, {"input": "1_07XXX_\n", "output": ["40\n"]}, {"input": "_______X\n", "output": ["3600000\n"]}, {"input": "XX_289_X\n", "output": ["20\n"]}, {"input": "2___2__X\n", "output": ["40000\n"]}, {"input": "_X_X_X_X\n", "output": ["3600\n"]}, {"input": "X5__X1_5\n", "output": ["1800\n"]}, {"input": "558X27X5\n", "output": ["2\n"]}, {"input": "_4\n", "output": ["0\n"]}, {"input": "_5XX\n", "output": ["9\n"]}, {"input": "52X_X___\n", "output": ["4000\n"]}, {"input": "85X5X125\n", "output": ["10\n"]}, {"input": "_X___X__\n", "output": ["360000\n"]}, {"input": "X_3_X_X_\n", "output": ["3000\n"]}, {"input": "_4_8XXXX\n", "output": ["90\n"]}, {"input": "5_65X1_X\n", "output": ["40\n"]}, {"input": "__X_X_X_\n", "output": ["36000\n"]}, {"input": "___0\n", "output": ["180\n"]}, {"input": "____0\n", "output": ["1800\n"]}, {"input": "_11_X_XX\n", "output": ["900\n"]}, {"input": "_20_62_X\n", "output": ["360\n"]}, {"input": "527__8X_\n", "output": ["400\n"]}, {"input": "X13___X5\n", "output": ["2000\n"]}, {"input": "_76X1XX_\n", "output": ["36\n"]}, {"input": "X_X1___5\n", "output": ["18000\n"]}, {"input": "92_6X7X5\n", "output": ["20\n"]}, {"input": "1___2__X\n", "output": ["40000\n"]}, {"input": "79XX_825\n", "output": ["100\n"]}, {"input": "1X_\n", "output": ["4\n"]}, {"input": "11__X_XX\n", "output": ["1000\n"]}, {"input": "5437___5\n", "output": ["200\n"]}, {"input": "__X_____\n", "output": ["3600000\n"]}, {"input": "_X7__725\n", "output": ["9000\n"]}, {"input": "_01_X__X\n", "output": ["3600\n"]}, {"input": "5_3X__00\n", "output": ["10000\n"]}, {"input": "XXXXXX_\n", "output": ["3\n"]}, {"input": "XX_289X_\n", "output": ["30\n"]}, {"input": "X__1__X5\n", "output": ["20000\n"]}, {"input": "558X562X\n", "output": ["1\n"]}, {"input": "3\n", "output": ["0\n"]}, {"input": "_3X72XX4\n", "output": ["0\n"]}, {"input": "529_XX97\n", "output": ["0\n"]}, {"input": "_X1\n", "output": ["0\n"]}, {"input": "00_2XX_8\n", "output": ["0\n"]}, {"input": "4\n", "output": ["0\n"]}, {"input": "_88_8XXX\n", "output": ["90\n"]}, {"input": "7\n", "output": ["0\n"]}, {"input": "5248156\n", "output": ["0\n"]}, {"input": "X4\n", "output": ["0\n"]}, {"input": "1169683\n", "output": ["0\n"]}, {"input": "53X_84_X\n", "output": ["40\n"]}, {"input": "263__6__\n", "output": ["400\n"]}, {"input": "___7X3X2\n", "output": ["0\n"]}, {"input": "XXX3XXXX\n", "output": ["0\n"]}, {"input": "_X_X_9XX\n", "output": ["900\n"]}, {"input": "X_982_XX\n", "output": ["0\n"]}, {"input": "1\n", "output": ["0\n"]}, {"input": "00_\n", "output": ["0\n"]}, {"input": "558X57X2\n", "output": ["0\n"]}, {"input": "4_\n", "output": ["0\n"]}, {"input": "_6XX\n", "output": ["9\n"]}, {"input": "6\n", "output": ["0\n"]}, {"input": "85XX5125\n", "output": ["10\n"]}, {"input": "_4X72XX3\n", "output": ["0\n"]}, {"input": "X_1X46_5\n", "output": ["180\n"]}, {"input": "00_28X_X\n", "output": ["0\n"]}, {"input": "4771318\n", "output": ["0\n"]}, {"input": "1023497\n", "output": ["0\n"]}, {"input": "220_6__X\n", "output": ["400\n"]}, {"input": "572__8X_\n", "output": ["400\n"]}, {"input": "53X_83_X\n", "output": ["40\n"]}, {"input": "5X___41X\n", "output": ["0\n"]}, {"input": "263__7__\n", "output": ["400\n"]}, {"input": "5___1X_X\n", "output": ["4000\n"]}, {"input": "__7_X3X2\n", "output": ["0\n"]}, {"input": "5X7X6_29\n", "output": ["0\n"]}, {"input": "XX_28X_9\n", "output": ["0\n"]}, {"input": "X__2___1\n", "output": ["0\n"]}, {"input": "01_\n", "output": ["0\n"]}, {"input": "2X75X855\n", "output": ["0\n"]}, {"input": "XX6_\n", "output": ["0\n"]}, {"input": "79XX_826\n", "output": ["0\n"]}, {"input": "X_X82_00\n", "output": ["900\n"]}, {"input": "702531\n", "output": ["0\n"]}, {"input": "1334765\n", "output": ["0\n"]}, {"input": "120_6__X\n", "output": ["400\n"]}, {"input": "572__8_X\n", "output": ["400\n"]}, {"input": "54___X1X\n", "output": ["0\n"]}, {"input": "X_X0___5\n", "output": ["18000\n"]}, {"input": "2X3X_7__\n", "output": ["400\n"]}, {"input": "XX_2X8_9\n", "output": ["0\n"]}, {"input": "X__3___1\n", "output": ["0\n"]}, {"input": "_10\n", "output": ["0\n"]}, {"input": "2X75X585\n", "output": ["0\n"]}, {"input": "6XX_\n", "output": ["4\n"]}, {"input": "79XX8_26\n", "output": ["0\n"]}, {"input": "10_28X_X\n", "output": ["40\n"]}, {"input": "602812\n", "output": ["0\n"]}, {"input": "1406466\n", "output": ["0\n"]}, {"input": "X20_6__1\n", "output": ["0\n"]}, {"input": "54_X__1X\n", "output": ["0\n"]}, {"input": "_X_2X8X9\n", "output": ["0\n"]}, {"input": "X__3___2\n", "output": ["0\n"]}, {"input": "_20\n", "output": ["0\n"]}, {"input": "2X85X575\n", "output": ["10\n"]}, {"input": "7XX_\n", "output": ["4\n"]}, {"input": "X_X82_01\n", "output": ["0\n"]}, {"input": "819438\n", "output": ["0\n"]}, {"input": "484022\n", "output": ["0\n"]}, {"input": "1__6_02X\n", "output": ["1000\n"]}, {"input": "2___3__X\n", "output": ["40000\n"]}, {"input": "_11\n", "output": ["0\n"]}, {"input": "2X85X585\n", "output": ["0\n"]}, {"input": "_XX7\n", "output": ["0\n"]}, {"input": "X_X82_10\n", "output": ["0\n"]}, {"input": "121160\n", "output": ["0\n"]}, {"input": "294762\n", "output": ["0\n"]}, {"input": "11_\n", "output": ["0\n"]}, {"input": "585X58X2\n", "output": ["0\n"]}, {"input": "8_XX2_10\n", "output": ["0\n"]}, {"input": "145508\n", "output": ["0\n"]}, {"input": "226338\n", "output": ["0\n"]}, {"input": "_12\n", "output": ["0\n"]}, {"input": "3X85X585\n", "output": ["0\n"]}, {"input": "188263\n", "output": ["0\n"]}, {"input": "30022\n", "output": ["0\n"]}, {"input": "21_\n", "output": ["0\n"]}, {"input": "16703\n", "output": ["0\n"]}, {"input": "48343\n", "output": ["0\n"]}, {"input": "1_1\n", "output": ["0\n"]}, {"input": "5832\n", "output": ["0\n"]}, {"input": "92233\n", "output": ["0\n"]}, {"input": "2\n", "output": ["0\n"]}, {"input": "1702\n", "output": ["0\n"]}, {"input": "65640\n", "output": ["0\n"]}, {"input": "8\n", "output": ["0\n"]}, {"input": "721\n", "output": ["0\n"]}, {"input": "48110\n", "output": ["0\n"]}, {"input": "9\n", "output": ["0\n"]}, {"input": "669\n", "output": ["0\n"]}, {"input": "11043\n", "output": ["0\n"]}, {"input": "19913\n", "output": ["0\n"]}, {"input": "1199\n", "output": ["0\n"]}, {"input": "1962\n", "output": ["0\n"]}, {"input": "1503\n", "output": ["0\n"]}, {"input": "1555\n", "output": ["0\n"]}, {"input": "1337\n", "output": ["0\n"]}, {"input": "253\n", "output": ["0\n"]}, {"input": "193\n", "output": ["0\n"]}, {"input": "X7\n", "output": ["0\n"]}, {"input": "585X27X6\n", "output": ["0\n"]}, {"input": "X_3_X_XX\n", "output": ["0\n"]}, {"input": "1X5\n", "output": ["2\n"]}, {"input": "5X0_9_1X\n", "output": ["0\n"]}, {"input": "___X_X24\n", "output": ["0\n"]}, {"input": "_X4723XX\n", "output": ["9\n"]}, {"input": "X_X_3_X_\n", "output": ["3000\n"]}, {"input": "79XX592_\n", "output": ["10\n"]}, {"input": "_7_4XXXX\n", "output": ["90\n"]}, {"input": "_86_8XXX\n", "output": ["90\n"]}, {"input": "_____0\n", "output": ["18000\n"]}, {"input": "_0__\n", "output": ["36\n"]}, {"input": "2126256\n", "output": ["0\n"]}, {"input": "_11XX__X\n", "output": ["360\n"]}, {"input": "468093\n", "output": ["0\n"]}, {"input": "35X_94_X\n", "output": ["40\n"]}, {"input": "__X____X\n", "output": ["360000\n"]}, {"input": "1XXX__9_\n", "output": ["0\n"]}, {"input": "361__6__\n", "output": ["400\n"]}, {"input": "_X______\n", "output": ["3600000\n"]}, {"input": "5X8X6_29\n", "output": ["0\n"]}, {"input": "558X37X5\n", "output": ["2\n"]}, {"input": "_3X82XX4\n", "output": ["0\n"]}, {"input": "429_XX97\n", "output": ["0\n"]}, {"input": "5_55X1_X\n", "output": ["40\n"]}, {"input": "_1X\n", "output": ["0\n"]}, {"input": "0X_20X_8\n", "output": ["0\n"]}, {"input": "_78_8XXX\n", "output": ["90\n"]}, {"input": "_0___\n", "output": ["360\n"]}, {"input": "8574389\n", "output": ["0\n"]}, {"input": "X3\n", "output": ["0\n"]}, {"input": "2115087\n", "output": ["0\n"]}, {"input": "_20_63_X\n", "output": ["360\n"]}, {"input": "63X_84_X\n", "output": ["40\n"]}, {"input": "5X___31X\n", "output": ["0\n"]}, {"input": "___6X3X2\n", "output": ["0\n"]}, {"input": "92_6X7X4\n", "output": ["0\n"]}, {"input": "X_98_2XX\n", "output": ["0\n"]}, {"input": "0_0\n", "output": ["0\n"]}, {"input": "558X56X2\n", "output": ["0\n"]}, {"input": "3_\n", "output": ["0\n"]}, {"input": "X6_X\n", "output": ["2\n"]}, {"input": "5215XX58\n", "output": ["0\n"]}, {"input": "79XX_725\n", "output": ["100\n"]}, {"input": "5_64X1_X\n", "output": ["40\n"]}, {"input": "1_X\n", "output": ["4\n"]}, {"input": "2822368\n", "output": ["0\n"]}, {"input": "XX_X__11\n", "output": ["0\n"]}, {"input": "324362\n", "output": ["0\n"]}, {"input": "_X8__275\n", "output": ["9000\n"]}, {"input": "__7__362\n", "output": ["0\n"]}, {"input": "__7_X3X3\n", "output": ["0\n"]}, {"input": "6X7X6_29\n", "output": ["0\n"]}, {"input": "9_X82_XX\n", "output": ["100\n"]}, {"input": "555X87X2\n", "output": ["0\n"]}, {"input": "X_6X\n", "output": ["0\n"]}, {"input": "628_XX97\n", "output": ["0\n"]}], "source_codes": ["\nfn count_divisible_by_25(s: &str) -> i32 {\n    let mut count = 0;\n\n    for i in 0..100 {\n        let num = format!(\"{:0>width$}\", i, width = s.len()).replace(\"X\", &i.to_string()[i.to_string().len()-1..]);\n        if num.len() == s.len() && num.parse::<i32>().unwrap() % 25 == 0 {\n            let mut valid = true;\n            for (j, c) in num.chars().enumerate() {\n                if s.chars().nth(j) != Some('_') && s.chars().nth(j) != Some('X') && s.chars().nth(j) != Some(c) {\n                    valid = false;\n                    break;\n                }\n            }\n            if valid {\n                count += 1;\n            }\n        }\n    }\n\n    count\n}\n\nfn main() {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n    s = s.trim().to_string();\n    println!(\"{}\", count_divisible_by_25(&s));\n}\n\n\n"], "responses": ["\nfn count_divisible_by_25(s: &str) -> i32 {\n    let mut count = 0;\n\n    for i in 0..100 {\n        let num = format!(\"{:0>width$}\", i, width = s.len()).replace(\"X\", &i.to_string()[i.to_string().len()-1..]);\n        if num.len() == s.len() && num.parse::<i32>().unwrap() % 25 == 0 {\n            let mut valid = true;\n            for (j, c) in num.chars().enumerate() {\n                if s.chars().nth(j) != Some('_') && s.chars().nth(j) != Some('X') && s.chars().nth(j) != Some(c) {\n                    valid = false;\n                    break;\n                }\n            }\n            if valid {\n                count += 1;\n            }\n        }\n    }\n\n    count\n}\n\nfn main() {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n    s = s.trim().to_string();\n    println!(\"{}\", count_divisible_by_25(&s));\n}\n\n\n"], "prompt_tokens": [48514], "completion_tokens": [8944], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1575}
{"name": "1575_E. Eye-Pleasing City Park Tour", "description": "There is a city park represented as a tree with n attractions as its vertices and n - 1 rails as its edges. The i-th attraction has happiness value a_i.\n\nEach rail has a color. It is either black if t_i = 0, or white if t_i = 1. Black trains only operate on a black rail track, and white trains only operate on a white rail track. If you are previously on a black train and want to ride a white train, or you are previously on a white train and want to ride a black train, you need to use 1 ticket.\n\nThe path of a tour must be a simple path \u2014 it must not visit an attraction more than once. You do not need a ticket the first time you board a train. You only have k tickets, meaning you can only switch train types at most k times. In particular, you do not need a ticket to go through a path consisting of one rail color.\n\nDefine f(u, v) as the sum of happiness values of the attractions in the tour (u, v), which is a simple path that starts at the u-th attraction and ends at the v-th attraction. Find the sum of f(u,v) for all valid tours (u, v) (1 \u2264 u \u2264 v \u2264 n) that does not need more than k tickets, modulo 10^9 + 7.\n\nInput\n\nThe first line contains two integers n and k (2 \u2264 n \u2264 2 \u22c5 10^5, 0 \u2264 k \u2264 n-1) \u2014 the number of attractions in the city park and the number of tickets you have.\n\nThe second line contains n integers a_1, a_2,\u2026, a_n (0 \u2264 a_i \u2264 10^9) \u2014 the happiness value of each attraction.\n\nThe i-th of the next n - 1 lines contains three integers u_i, v_i, and t_i (1 \u2264 u_i, v_i \u2264 n, 0 \u2264 t_i \u2264 1) \u2014 an edge between vertices u_i and v_i with color t_i. The given edges form a tree.\n\nOutput\n\nOutput an integer denoting the total happiness value for all valid tours (u, v) (1 \u2264 u \u2264 v \u2264 n), modulo 10^9 + 7.\n\nExamples\n\nInput\n\n\n5 0\n1 3 2 6 4\n1 2 1\n1 4 0\n3 2 1\n2 5 0\n\n\nOutput\n\n\n45\n\n\nInput\n\n\n3 1\n1 1 1\n1 2 1\n3 2 0\n\n\nOutput\n\n\n10", "tags": ["data structures", "trees"], "difficulty": 11, "id": 1575, "sample_io": [{"input": "5 0\n1 3 2 6 4\n1 2 1\n1 4 0\n3 2 1\n2 5 0\n", "output": ["45"]}, {"input": "3 1\n1 1 1\n1 2 1\n3 2 0\n", "output": ["10"]}], "test_list": [{"input": "2 1\n1000000000 0\n2 1 0\n", "output": ["999999993"]}, {"input": "4 0\n589284011 636562059 767928733 906523440\n4 1 0\n4 2 0\n3 2 0\n", "output": ["687363872"]}, {"input": "2 1\n1000000010 0\n2 1 0\n", "output": ["6\n"]}, {"input": "3 2\n1 1 1\n1 2 1\n3 2 0\n", "output": ["10\n"]}, {"input": "2 1\n1000000010 1\n2 1 0\n", "output": ["8\n"]}, {"input": "5 0\n1 3 4 6 4\n1 2 1\n1 4 0\n3 2 1\n2 5 0\n", "output": ["51\n"]}, {"input": "2 1\n1000010010 0\n2 1 0\n", "output": ["20006\n"]}, {"input": "3 2\n1 1 0\n1 2 1\n3 2 0\n", "output": ["7\n"]}, {"input": "5 0\n1 0 4 6 4\n1 2 1\n1 4 0\n3 2 1\n2 5 0\n", "output": ["36\n"]}, {"input": "3 2\n1 1 -1\n1 2 1\n3 2 0\n", "output": ["4\n"]}, {"input": "5 0\n1 0 4 6 4\n1 2 1\n1 4 0\n3 2 1\n2 5 1\n", "output": ["49\n"]}, {"input": "4 0\n589284011 636562059 1246248614 906523440\n4 1 0\n4 2 0\n3 2 0\n", "output": ["600643382\n"]}, {"input": "3 1\n1 1 2\n1 2 1\n3 2 0\n", "output": ["13\n"]}, {"input": "2 1\n1000011010 0\n2 1 0\n", "output": ["22006\n"]}, {"input": "5 0\n0 0 4 6 4\n1 2 1\n1 4 0\n3 2 1\n2 5 0\n", "output": ["32\n"]}, {"input": "5 0\n1 0 4 6 4\n1 2 0\n1 4 0\n3 2 1\n2 5 1\n", "output": ["46\n"]}, {"input": "3 2\n0 1 -1\n1 2 1\n3 2 0\n", "output": ["1\n"]}, {"input": "5 0\n1 0 4 6 1\n1 2 0\n1 4 0\n3 2 1\n2 5 1\n", "output": ["37\n"]}, {"input": "5 0\n1 0 4 6 1\n1 2 0\n1 4 0\n3 2 1\n1 5 1\n", "output": ["33\n"]}, {"input": "5 0\n1 0 7 6 1\n1 2 0\n1 4 0\n3 2 1\n1 5 1\n", "output": ["39\n"]}, {"input": "5 0\n1 0 7 3 1\n1 2 0\n1 4 0\n3 2 1\n1 5 1\n", "output": ["30\n"]}, {"input": "4 0\n589284011 636562059 1491116421 906523440\n4 1 0\n4 2 0\n3 2 0\n", "output": ["580114603\n"]}, {"input": "2 1\n1010000010 0\n2 1 0\n", "output": ["20000006\n"]}, {"input": "3 0\n1 1 2\n1 2 1\n3 2 0\n", "output": ["9\n"]}, {"input": "2 1\n1000000011 2\n2 1 0\n", "output": ["12\n"]}, {"input": "5 1\n0 0 4 6 4\n1 2 1\n1 4 0\n3 2 1\n2 5 0\n", "output": ["60\n"]}, {"input": "5 0\n1 0 7 6 1\n1 2 0\n2 4 0\n3 2 1\n1 5 1\n", "output": ["38\n"]}, {"input": "5 0\n1 0 9 3 1\n1 2 0\n1 4 0\n3 2 1\n1 5 1\n", "output": ["34\n"]}, {"input": "3 0\n0 1 1\n1 2 1\n3 2 0\n", "output": ["5\n"]}, {"input": "5 0\n1 0 7 8 1\n1 2 0\n2 4 0\n3 2 1\n1 5 1\n", "output": ["44\n"]}, {"input": "2 1\n1000100011 0\n2 1 0\n", "output": ["200008\n"]}, {"input": "2 1\n1000101011 0\n2 1 0\n", "output": ["202008\n"]}, {"input": "5 0\n1 0 7 8 1\n1 2 0\n2 4 0\n3 2 0\n2 5 1\n", "output": ["66\n"]}, {"input": "5 0\n1 0 7 8 1\n1 2 0\n2 4 0\n3 2 0\n3 5 1\n", "output": ["73\n"]}, {"input": "1 2\n1000101011 0\n2 1 0\n", "output": ["101004\n"]}, {"input": "1 2\n0000101011 0\n2 1 0\n", "output": ["101011\n"]}, {"input": "1 2\n0000001011 0\n3 0 0\n", "output": ["1011\n"]}, {"input": "1 1\n0000001001 1\n3 -1 0\n", "output": ["1001\n"]}, {"input": "2 1\n1000000000 0\n2 1 1\n", "output": ["999999993\n"]}, {"input": "5 0\n1 3 2 1 4\n1 2 1\n1 4 0\n3 2 1\n2 5 0\n", "output": ["35\n"]}, {"input": "5 0\n1 0 4 6 4\n1 3 1\n1 4 0\n3 2 1\n2 5 0\n", "output": ["40\n"]}, {"input": "3 1\n1 0 -1\n1 2 1\n3 2 0\n", "output": ["0\n"]}, {"input": "2 1\n1000011000 0\n2 1 0\n", "output": ["21986\n"]}, {"input": "5 0\n2 0 4 6 1\n1 2 0\n1 4 0\n3 2 1\n2 5 1\n", "output": ["41\n"]}, {"input": "5 0\n1 0 1 3 1\n1 2 0\n1 4 0\n3 2 1\n1 5 1\n", "output": ["18\n"]}, {"input": "3 1\n2 0 -1\n1 2 1\n3 2 0\n", "output": ["3\n"]}, {"input": "5 0\n1 0 7 6 1\n1 2 0\n2 4 0\n3 1 1\n1 5 1\n", "output": ["48\n"]}, {"input": "3 2\n0 2 -2\n1 2 1\n3 2 0\n", "output": ["2\n"]}, {"input": "2 1\n1100101011 0\n2 1 0\n", "output": ["200202008\n"]}, {"input": "1 3\n0000001010 0\n3 0 0\n", "output": ["1010\n"]}, {"input": "1 3\n1000001011 0\n3 -1 0\n", "output": ["1004\n"]}, {"input": "1 0\n0010001001 1\n3 -1 0\n", "output": ["10001001\n"]}, {"input": "5 0\n1 3 2 1 4\n1 2 1\n1 4 0\n3 2 1\n2 5 1\n", "output": ["52\n"]}, {"input": "5 0\n2 0 4 6 1\n1 2 0\n1 4 0\n3 4 1\n2 5 1\n", "output": ["42\n"]}, {"input": "1 2\n0000001111 0\n3 1 0\n", "output": ["1111\n"]}, {"input": "1 0\n0001001011 0\n1 -1 0\n", "output": ["1001011\n"]}, {"input": "5 0\n1 3 5 6 4\n1 2 1\n1 4 1\n3 4 1\n2 5 0\n", "output": ["85\n"]}, {"input": "5 0\n1 3 5 6 4\n1 2 1\n1 4 1\n3 4 0\n2 5 0\n", "output": ["58\n"]}, {"input": "1 2\n0000001101 0\n3 1 1\n", "output": ["1101\n"]}, {"input": "1 2\n0000101001 -1\n1 2 -1\n", "output": ["101001\n"]}, {"input": "1 4\n0000101111 0\n6 0 0\n", "output": ["101111\n"]}, {"input": "1 0\n0011001011 0\n2 -1 -1\n", "output": ["11001011\n"]}, {"input": "1 1\n0000100001 1\n5 -2 -1\n", "output": ["100001\n"]}, {"input": "1 1\n0100000001 2\n10 -1 -1\n", "output": ["100000001\n"]}, {"input": "1 1\n0001101001 -1\n2 1 0\n", "output": ["1101001\n"]}, {"input": "1 0\n0001100001 -1\n1 1 0\n", "output": ["1100001\n"]}, {"input": "1 1\n0010100001 -1\n0 1 0\n", "output": ["10100001\n"]}, {"input": "1 0\n0010101001 -1\n-2 2 0\n", "output": ["10101001\n"]}, {"input": "4 0\n589284011 636562059 767928733 906523440\n4 1 1\n4 2 0\n3 2 0\n", "output": ["654696154\n"]}, {"input": "3 2\n1 2 1\n1 2 1\n3 2 0\n", "output": ["14\n"]}, {"input": "5 0\n2 3 4 6 4\n1 2 1\n1 4 0\n3 2 1\n2 5 0\n", "output": ["55\n"]}, {"input": "2 1\n1000010010 1\n2 1 0\n", "output": ["20008\n"]}, {"input": "3 1\n1 2 2\n1 2 1\n3 2 0\n", "output": ["17\n"]}, {"input": "5 0\n1 0 7 2 1\n1 2 0\n1 4 0\n3 2 1\n1 5 1\n", "output": ["27\n"]}, {"input": "2 1\n1000000111 0\n2 1 0\n", "output": ["208\n"]}, {"input": "5 0\n1 0 7 16 1\n1 2 0\n2 4 0\n3 2 1\n1 5 1\n", "output": ["68\n"]}, {"input": "5 0\n1 1 7 8 1\n1 2 0\n2 4 0\n3 2 0\n3 5 1\n", "output": ["80\n"]}, {"input": "1 2\n1001101011 0\n2 1 0\n", "output": ["1101004\n"]}, {"input": "1 2\n0001101011 0\n2 1 0\n", "output": ["1101011\n"]}, {"input": "2 2\n0000101011 0\n2 1 0\n", "output": ["202022\n"]}, {"input": "2 1\n1000100010 2\n2 1 0\n", "output": ["200010\n"]}, {"input": "5 0\n0 3 4 6 4\n1 2 1\n1 4 0\n3 4 1\n2 5 0\n", "output": ["43\n"]}, {"input": "2 1\n1000011000 1\n2 1 0\n", "output": ["21988\n"]}, {"input": "5 0\n2 0 4 6 1\n1 2 0\n1 4 0\n3 2 0\n2 5 1\n", "output": ["54\n"]}, {"input": "3 0\n1 2 2\n1 2 1\n3 1 0\n", "output": ["11\n"]}, {"input": "2 2\n0000000011 0\n2 1 0\n", "output": ["22\n"]}, {"input": "3 0\n1 1 4\n1 2 1\n3 2 1\n", "output": ["19\n"]}, {"input": "1 2\n0000101010 0\n1 1 -1\n", "output": ["101010\n"]}, {"input": "5 0\n1 0 5 6 4\n1 2 1\n1 4 1\n3 4 1\n2 5 0\n", "output": ["70\n"]}, {"input": "1 3\n0001001010 -1\n0 0 0\n", "output": ["1001010\n"]}, {"input": "1 3\n1000001010 0\n4 -1 -1\n", "output": ["1003\n"]}, {"input": "1 0\n0010011001 2\n3 -2 0\n", "output": ["10011001\n"]}, {"input": "5 0\n2 3 5 6 4\n1 2 1\n1 4 1\n3 4 0\n2 5 0\n", "output": ["62\n"]}, {"input": "1 0\n0001011011 0\n2 -1 -1\n", "output": ["1011011\n"]}, {"input": "1 0\n0110001001 2\n3 0 0\n", "output": ["110001001\n"]}, {"input": "1 0\n0111001011 0\n2 -2 0\n", "output": ["111001011\n"]}, {"input": "1 1\n0101000001 1\n14 -1 -1\n", "output": ["101000001\n"]}, {"input": "1 1\n0000111001 -1\n2 0 0\n", "output": ["111001\n"]}, {"input": "1 1\n1100000001 1\n14 -1 -4\n", "output": ["99999994\n"]}, {"input": "1 1\n0100001001 1\n27 -1 -4\n", "output": ["100001001\n"]}, {"input": "1 1\n0001001001 -1\n2 1 0\n", "output": ["1001001\n"]}, {"input": "1 0\n0001100000 -1\n1 1 0\n", "output": ["1100000\n"]}, {"input": "1 0\n0010100000 -1\n-2 1 0\n", "output": ["10100000\n"]}, {"input": "1 0\n0010110001 -1\n-2 2 0\n", "output": ["10110001\n"]}, {"input": "4 0\n589284011 636562059 767928733 938443548\n4 1 1\n4 2 0\n3 2 0\n", "output": ["782376586\n"]}, {"input": "5 0\n2 3 4 6 6\n1 2 1\n1 4 0\n3 2 1\n2 5 0\n", "output": ["59\n"]}, {"input": "2 1\n1000110010 1\n2 1 0\n", "output": ["220008\n"]}, {"input": "2 1\n1000101111 0\n2 1 1\n", "output": ["202208\n"]}, {"input": "1 2\n0011101011 0\n2 1 0\n", "output": ["11101011\n"]}, {"input": "2 1\n1001100010 2\n2 1 0\n", "output": ["2200010\n"]}, {"input": "2 1\n1000011000 2\n2 1 0\n", "output": ["21990\n"]}, {"input": "3 0\n1 2 2\n1 2 0\n3 1 0\n", "output": ["16\n"]}, {"input": "1 0\n0000100011 0\n1 1 -1\n", "output": ["100011\n"]}, {"input": "1 3\n1000001001 0\n4 0 -1\n", "output": ["994\n"]}, {"input": "1 1\n0101100001 1\n14 -1 -1\n", "output": ["101100001\n"]}, {"input": "1 1\n0100111001 -1\n2 0 0\n", "output": ["100111001\n"]}, {"input": "1 0\n0001110001 -1\n2 1 0\n", "output": ["1110001\n"]}, {"input": "1 0\n1001100000 -1\n1 1 0\n", "output": ["1099993\n"]}, {"input": "5 0\n1 0 4 6 0\n1 2 0\n1 4 0\n3 2 0\n1 5 1\n", "output": ["47\n"]}, {"input": "3 2\n2 1 -1\n1 2 1\n3 2 0\n", "output": ["7\n"]}, {"input": "2 1\n1000000011 1\n2 1 0\n", "output": ["10\n"]}, {"input": "3 2\n0 1 0\n1 2 1\n3 2 0\n", "output": ["4\n"]}, {"input": "3 1\n0 1 -1\n1 2 1\n3 2 0\n", "output": ["1\n"]}, {"input": "3 0\n0 1 -1\n1 2 1\n3 2 0\n", "output": ["1\n"]}, {"input": "3 2\n0 1 1\n1 2 1\n3 2 0\n", "output": ["7\n"]}, {"input": "2 2\n1000000010 1\n2 1 0\n", "output": ["8\n"]}, {"input": "3 2\n1 1 -2\n1 2 1\n3 2 0\n", "output": ["1\n"]}, {"input": "3 2\n2 1 -2\n1 2 1\n3 2 0\n", "output": ["4\n"]}, {"input": "3 1\n1 1 -1\n1 2 1\n3 2 0\n", "output": ["4\n"]}, {"input": "3 2\n1 2 -2\n1 2 1\n3 2 0\n", "output": ["5\n"]}, {"input": "2 1\n1000000011 0\n2 1 0\n", "output": ["8\n"]}, {"input": "5 0\n1 0 7 8 1\n1 2 0\n2 4 0\n3 2 1\n2 5 1\n", "output": ["51\n"]}, {"input": "2 2\n1000101011 0\n2 1 0\n", "output": ["202008\n"]}, {"input": "1 2\n0000101011 0\n3 1 0\n", "output": ["101011\n"]}, {"input": "1 2\n0000101011 0\n3 0 0\n", "output": ["101011\n"]}, {"input": "1 3\n0000001011 0\n3 0 0\n", "output": ["1011\n"]}, {"input": "1 3\n0000001011 0\n3 -1 0\n", "output": ["1011\n"]}, {"input": "1 0\n0000001011 0\n3 -1 0\n", "output": ["1011\n"]}, {"input": "1 0\n0000001011 1\n3 -1 0\n", "output": ["1011\n"]}, {"input": "1 1\n0000001011 1\n3 -1 0\n", "output": ["1011\n"]}, {"input": "1 0\n0000001001 1\n3 -1 0\n", "output": ["1001\n"]}, {"input": "1 0\n0000001001 2\n3 -1 0\n", "output": ["1001\n"]}, {"input": "3 1\n1 1 1\n1 2 0\n3 2 0\n", "output": ["10\n"]}, {"input": "3 2\n2 1 1\n1 2 1\n3 2 0\n", "output": ["13\n"]}, {"input": "2 1\n1000000010 2\n2 1 0\n", "output": ["10\n"]}, {"input": "5 0\n1 3 4 6 4\n1 2 1\n1 4 0\n3 4 1\n2 5 0\n", "output": ["46\n"]}, {"input": "2 1\n1000010010 0\n2 1 1\n", "output": ["20006\n"]}, {"input": "3 2\n0 1 0\n1 2 0\n3 2 0\n", "output": ["4\n"]}, {"input": "3 2\n0 2 -1\n1 2 1\n3 2 0\n", "output": ["5\n"]}, {"input": "3 0\n1 1 -2\n1 2 1\n3 2 0\n", "output": ["1\n"]}, {"input": "3 2\n2 1 0\n1 2 1\n3 2 0\n", "output": ["10\n"]}, {"input": "3 0\n1 2 2\n1 2 1\n3 2 0\n", "output": ["12\n"]}, {"input": "5 0\n2 0 9 3 1\n1 2 0\n1 4 0\n3 2 1\n1 5 1\n", "output": ["39\n"]}, {"input": "2 2\n1000000011 0\n2 1 0\n", "output": ["8\n"]}, {"input": "2 1\n1000100011 0\n2 1 1\n", "output": ["200008\n"]}, {"input": "1 2\n1000101011 0\n1 1 0\n", "output": ["101004\n"]}, {"input": "1 2\n0000101011 0\n1 1 0\n", "output": ["101011\n"]}, {"input": "1 3\n0000101011 0\n3 0 0\n", "output": ["101011\n"]}, {"input": "1 2\n0000001011 0\n3 1 0\n", "output": ["1011\n"]}, {"input": "1 0\n0000001011 0\n1 -1 0\n", "output": ["1011\n"]}, {"input": "1 1\n0000001001 1\n3 -2 0\n", "output": ["1001\n"]}, {"input": "1 0\n0000001001 0\n3 -1 0\n", "output": ["1001\n"]}, {"input": "2 2\n1000000000 0\n2 1 1\n", "output": ["999999993\n"]}, {"input": "3 1\n2 1 1\n1 2 1\n3 2 0\n", "output": ["13\n"]}, {"input": "5 0\n1 3 5 6 4\n1 2 1\n1 4 0\n3 4 1\n2 5 0\n", "output": ["48\n"]}, {"input": "3 0\n1 1 4\n1 2 1\n3 2 0\n", "output": ["13\n"]}, {"input": "1 3\n1000101011 0\n1 1 0\n", "output": ["101004\n"]}, {"input": "1 2\n0000101011 0\n1 1 -1\n", "output": ["101011\n"]}, {"input": "1 3\n0000101011 0\n6 0 0\n", "output": ["101011\n"]}, {"input": "1 3\n0000001010 0\n0 0 0\n", "output": ["1010\n"]}, {"input": "1 3\n1000001011 0\n3 -1 -1\n", "output": ["1004\n"]}, {"input": "1 1\n0000001001 1\n3 -2 -1\n", "output": ["1001\n"]}, {"input": "1 0\n0010001001 2\n3 -1 0\n", "output": ["10001001\n"]}, {"input": "1 0\n0000001001 0\n3 -2 0\n", "output": ["1001\n"]}, {"input": "2 2\n1000000000 0\n2 1 0\n", "output": ["999999993\n"]}, {"input": "5 0\n2 0 5 6 1\n1 2 0\n1 4 0\n3 4 1\n2 5 1\n", "output": ["44\n"]}, {"input": "1 2\n0000101011 -1\n1 1 -1\n", "output": ["101011\n"]}, {"input": "1 4\n0000101011 0\n6 0 0\n", "output": ["101011\n"]}, {"input": "1 2\n0000001111 0\n3 1 1\n", "output": ["1111\n"]}, {"input": "1 3\n0000001010 -1\n0 0 0\n", "output": ["1010\n"]}, {"input": "1 3\n1000001011 0\n4 -1 -1\n", "output": ["1004\n"]}, {"input": "1 0\n0001001011 0\n1 -1 -1\n", "output": ["1001011\n"]}, {"input": "1 1\n0000000001 1\n3 -2 -1\n", "output": ["1\n"]}, {"input": "1 0\n0010001001 2\n3 -2 0\n", "output": ["10001001\n"]}, {"input": "1 2\n0000101011 -1\n1 2 -1\n", "output": ["101011\n"]}, {"input": "1 4\n0000101011 0\n3 0 0\n", "output": ["101011\n"]}, {"input": "1 3\n1000001011 0\n4 0 -1\n", "output": ["1004\n"]}, {"input": "1 0\n0001001011 0\n2 -1 -1\n", "output": ["1001011\n"]}, {"input": "1 1\n0000000001 1\n5 -2 -1\n", "output": ["1\n"]}, {"input": "1 0\n0010001001 2\n3 0 0\n", "output": ["10001001\n"]}, {"input": "1 0\n0010001001 3\n3 0 0\n", "output": ["10001001\n"]}, {"input": "1 2\n0000101001 -1\n1 0 -1\n", "output": ["101001\n"]}, {"input": "1 0\n0011001011 0\n2 -1 0\n", "output": ["11001011\n"]}, {"input": "1 1\n0000000001 1\n10 -2 -1\n", "output": ["1\n"]}, {"input": "1 0\n0000001001 3\n3 0 0\n", "output": ["1001\n"]}, {"input": "1 2\n0000101001 -1\n1 -1 -1\n", "output": ["101001\n"]}, {"input": "1 0\n0011001011 0\n2 -2 0\n", "output": ["11001011\n"]}, {"input": "1 1\n0000000001 1\n10 -1 -1\n", "output": ["1\n"]}, {"input": "1 0\n0000001011 3\n3 0 0\n", "output": ["1011\n"]}, {"input": "1 2\n0000101001 -1\n2 -1 -1\n", "output": ["101001\n"]}, {"input": "1 1\n0000000001 2\n10 -1 -1\n", "output": ["1\n"]}, {"input": "1 0\n0000001011 3\n1 0 0\n", "output": ["1011\n"]}], "source_codes": ["\nconst MOD: i64 = 1_000_000_007;\n\nfn dfs(node: usize, parent: usize, k: usize, dp: &mut Vec<Vec<i64>>, graph: &Vec<Vec<(usize, i64)>>, happiness: &Vec<i64>) {\n    dp[node][0] = happiness[node];\n    for (child, color) in &graph[node] {\n        if *child == parent {\n            continue;\n        }\n        dfs(*child, node, k, dp, graph, happiness);\n        for i in 0..=k {\n            dp[node][i] = (dp[node][i] + dp[*child][i]) % MOD;\n            if i > 0 {\n                dp[node][i] = (dp[node][i] + dp[*child][i-1]) % MOD;\n            }\n        }\n        dp[node][0] = (dp[node][0] + dp[*child][k]) % MOD;\n    }\n}\n\nfn solve() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let k: usize = iter.next().unwrap().parse().unwrap();\n\n    input.clear();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let happiness: Vec<i64> = vec![0].into_iter().chain(input.split_whitespace().map(|x| x.parse().unwrap())).collect();\n\n    let mut graph: Vec<Vec<(usize, i64)>> = vec![Vec::new(); n+1];\n    for _ in 0..n-1 {\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let mut iter = input.split_whitespace();\n        let u: usize = iter.next().unwrap().parse().unwrap();\n        let v: usize = iter.next().unwrap().parse().unwrap();\n        let t: i64 = iter.next().unwrap().parse().unwrap();\n        graph[u].push((v, t));\n        graph[v].push((u, t));\n    }\n\n    let mut dp: Vec<Vec<i64>> = vec![vec![0; k+1]; n+1];\n    dfs(1, 0, k, &mut dp, &graph, &happiness);\n\n    let mut result = 0;\n    for i in 1..=n {\n        for j in 0..=k {\n            result = (result + dp[i][j]) % MOD;\n        }\n    }\n\n    println!(\"{}\", result);\n}\n\nfn main() {\n    solve();\n}\n\n\n"], "responses": ["\nconst MOD: i64 = 1_000_000_007;\n\nfn dfs(node: usize, parent: usize, k: usize, dp: &mut Vec<Vec<i64>>, graph: &Vec<Vec<(usize, i64)>>, happiness: &Vec<i64>) {\n    dp[node][0] = happiness[node];\n    for (child, color) in &graph[node] {\n        if *child == parent {\n            continue;\n        }\n        dfs(*child, node, k, dp, graph, happiness);\n        for i in 0..=k {\n            dp[node][i] = (dp[node][i] + dp[*child][i]) % MOD;\n            if i > 0 {\n                dp[node][i] = (dp[node][i] + dp[*child][i-1]) % MOD;\n            }\n        }\n        dp[node][0] = (dp[node][0] + dp[*child][k]) % MOD;\n    }\n}\n\nfn solve() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let k: usize = iter.next().unwrap().parse().unwrap();\n\n    input.clear();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let happiness: Vec<i64> = vec![0].into_iter().chain(input.split_whitespace().map(|x| x.parse().unwrap())).collect();\n\n    let mut graph: Vec<Vec<(usize, i64)>> = vec![Vec::new(); n+1];\n    for _ in 0..n-1 {\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let mut iter = input.split_whitespace();\n        let u: usize = iter.next().unwrap().parse().unwrap();\n        let v: usize = iter.next().unwrap().parse().unwrap();\n        let t: i64 = iter.next().unwrap().parse().unwrap();\n        graph[u].push((v, t));\n        graph[v].push((u, t));\n    }\n\n    let mut dp: Vec<Vec<i64>> = vec![vec![0; k+1]; n+1];\n    dfs(1, 0, k, &mut dp, &graph, &happiness);\n\n    let mut result = 0;\n    for i in 1..=n {\n        for j in 0..=k {\n            result = (result + dp[i][j]) % MOD;\n        }\n    }\n\n    println!(\"{}\", result);\n}\n\nfn main() {\n    solve();\n}\n\n\n"], "prompt_tokens": [72428], "completion_tokens": [18039], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1575}
{"name": "1575_F. Finding Expected Value", "description": "Mr. Chanek opened a letter from his fellow, who is currently studying at Singanesia. Here is what it says.\n\nDefine an array b (0 \u2264 b_i < k) with n integers. While there exists a pair (i, j) such that b_i \u2260 b_j, do the following operation:\n\n  * Randomly pick a number i satisfying 0 \u2264 i < n. Note that each number i has a probability of 1/n to be picked. \n  * Randomly Pick a number j satisfying 0 \u2264 j < k. \n  * Change the value of b_i to j. It is possible for b_i to be changed to the same value. \n\n\n\nDenote f(b) as the expected number of operations done to b until all elements of b are equal. \n\nYou are given two integers n and k, and an array a (-1 \u2264 a_i < k) of n integers. \n\nFor every index i with a_i = -1, replace a_i with a random number j satisfying 0 \u2264 j < k. Let c be the number of occurrences of -1 in a. There are k^c possibilites of a after the replacement, each with equal probability of being the final array.\n\nFind the expected value of f(a) modulo 10^9 + 7. \n\nFormally, let M = 10^9 + 7. It can be shown that the answer can be expressed as an irreducible fraction p/q, where p and q are integers and q not \u2261 0 \\pmod{M}. Output the integer equal to p \u22c5 q^{-1} mod M. In other words, output such an integer x that 0 \u2264 x < M and x \u22c5 q \u2261 p \\pmod{M}.\n\nAfter reading the letter, Mr. Chanek gave the task to you. Solve it for the sake of their friendship!\n\nInput\n\nThe first line contains two integers n and k (2 \u2264 n \u2264 10^5, 2 \u2264 k \u2264 10^9). \n\nThe second line contains n integers a_1, a_2, \u2026, a_n (-1 \u2264 a_i < k).\n\nOutput\n\nOutput an integer denoting the expected value of f(a) modulo 10^9 + 7.\n\nExamples\n\nInput\n\n\n2 2\n0 1\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n2 2\n0 -1\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n3 3\n0 1 1\n\n\nOutput\n\n\n12\n\n\nInput\n\n\n3 3\n-1 -1 -1\n\n\nOutput\n\n\n11\n\n\nInput\n\n\n10 9\n-1 0 -1 1 1 2 2 3 3 3\n\n\nOutput\n\n\n652419213", "tags": ["math"], "difficulty": 12, "id": 1575, "sample_io": [{"input": "10 9\n-1 0 -1 1 1 2 2 3 3 3\n", "output": ["652419213\n"]}, {"input": "3 3\n-1 -1 -1\n", "output": ["11\n"]}, {"input": "2 2\n0 -1\n", "output": ["1\n"]}, {"input": "3 3\n0 1 1\n", "output": ["12\n"]}, {"input": "2 2\n0 1\n", "output": ["2\n"]}], "test_list": [{"input": "2 1684\n-1 -1\n", "output": ["1683\n"]}, {"input": "2 2000\n1486 -1\n", "output": ["1999\n"]}, {"input": "2 2000\n-1 1990\n", "output": ["1999\n"]}, {"input": "2 1973\n818 208\n", "output": ["1973\n"]}, {"input": "2 1105\n-1 -1\n", "output": ["1104\n"]}, {"input": "2 551\n-1 -1\n", "output": ["550\n"]}, {"input": "2 2\n1 1\n", "output": ["0\n"]}, {"input": "2 434\n424 377\n", "output": ["434\n"]}, {"input": "2 63\n23 52\n", "output": ["63\n"]}, {"input": "2 927\n852 -1\n", "output": ["926\n"]}, {"input": "2 33\n2 27\n", "output": ["33\n"]}, {"input": "2 1626\n1312 -1\n", "output": ["1625\n"]}, {"input": "2 838\n-1 753\n", "output": ["837\n"]}, {"input": "2 2\n-1 -1\n", "output": ["1\n"]}, {"input": "2 2\n-1 0\n", "output": ["1\n"]}, {"input": "2 1421\n326 -1\n", "output": ["1420\n"]}, {"input": "2 1059\n616 151\n", "output": ["1059\n"]}, {"input": "2 2\n0 0\n", "output": ["0\n"]}, {"input": "2 1408\n-1 566\n", "output": ["1407\n"]}, {"input": "2 2000\n-1 -1\n", "output": ["1999\n"]}, {"input": "2 900\n468 702\n", "output": ["900\n"]}, {"input": "2 2000\n33 -1\n", "output": ["1999\n"]}, {"input": "2 660\n-1 -1\n", "output": ["659\n"]}, {"input": "2 6\n3 3\n", "output": ["0\n"]}, {"input": "2 68\n-1 -1\n", "output": ["67\n"]}, {"input": "2 2000\n1280 -1\n", "output": ["1999\n"]}, {"input": "1 2000\n-1 1990\n", "output": ["0\n"]}, {"input": "2 1973\n818 260\n", "output": ["1973\n"]}, {"input": "2 2128\n-1 -1\n", "output": ["2127\n"]}, {"input": "2 434\n845 377\n", "output": ["434\n"]}, {"input": "2 63\n23 60\n", "output": ["63\n"]}, {"input": "2 32\n2 27\n", "output": ["32\n"]}, {"input": "2 1626\n2014 -1\n", "output": ["1625\n"]}, {"input": "2 838\n-1 366\n", "output": ["837\n"]}, {"input": "2 4\n-1 0\n", "output": ["3\n"]}, {"input": "2 1421\n554 -1\n", "output": ["1420\n"]}, {"input": "2 1059\n23 151\n", "output": ["1059\n"]}, {"input": "2 4\n0 1\n", "output": ["4\n"]}, {"input": "2 1408\n-1 357\n", "output": ["1407\n"]}, {"input": "2 275\n-1 -1\n", "output": ["274\n"]}, {"input": "2 6\n2 3\n", "output": ["6\n"]}, {"input": "10 9\n-1 0 -1 1 1 2 2 3 4 3\n", "output": ["688133507\n"]}, {"input": "2 2\n1 -1\n", "output": ["1\n"]}, {"input": "3 3\n0 1 0\n", "output": ["12\n"]}, {"input": "2 109\n-1 -1\n", "output": ["108\n"]}, {"input": "2 311\n2014 -1\n", "output": ["310\n"]}, {"input": "2 449\n554 -1\n", "output": ["448\n"]}, {"input": "2 1250\n23 151\n", "output": ["1250\n"]}, {"input": "2 10\n2 3\n", "output": ["10\n"]}, {"input": "3 3\n0 1 -1\n", "output": ["500000016\n"]}, {"input": "2 3\n-1 1\n", "output": ["2\n"]}, {"input": "10 9\n-1 0 -1 1 0 2 2 3 4 5\n", "output": ["295276363\n"]}, {"input": "3 4\n0 1 0\n", "output": ["20\n"]}, {"input": "3 9\n-1 0 -1 1 0 2 2 3 4 5\n", "output": ["92\n"]}, {"input": "3 6\n0 1 0\n", "output": ["42\n"]}, {"input": "2 772\n337 -1\n", "output": ["771\n"]}, {"input": "2 18\n2 3\n", "output": ["18\n"]}, {"input": "2 1231\n15 110\n", "output": ["1231\n"]}, {"input": "2 1783\n15 110\n", "output": ["1783\n"]}, {"input": "2 507\n247 214\n", "output": ["507\n"]}, {"input": "2 8\n1 5\n", "output": ["8\n"]}, {"input": "2 9\n1 5\n", "output": ["9\n"]}, {"input": "2 328\n-1 -1\n", "output": ["327\n"]}, {"input": "2 1282\n-1 -1\n", "output": ["1281\n"]}, {"input": "2 523\n852 -1\n", "output": ["522\n"]}, {"input": "2 33\n4 27\n", "output": ["33\n"]}, {"input": "2 900\n221 702\n", "output": ["900\n"]}, {"input": "2 1396\n33 -1\n", "output": ["1395\n"]}, {"input": "10 4\n-1 0 -1 1 1 2 2 3 3 3\n", "output": ["571792314\n"]}, {"input": "3 3\n0 2 1\n", "output": ["500000017\n"]}, {"input": "2 240\n1280 -1\n", "output": ["239\n"]}, {"input": "2 378\n818 260\n", "output": ["378\n"]}, {"input": "2 29\n2 27\n", "output": ["29\n"]}, {"input": "2 1347\n-1 366\n", "output": ["1346\n"]}, {"input": "2 1551\n-1 357\n", "output": ["1550\n"]}, {"input": "10 9\n-1 0 -1 1 1 1 2 3 4 3\n", "output": ["259562069\n"]}, {"input": "2 311\n2014 0\n", "output": ["311\n"]}, {"input": "2 75\n554 -1\n", "output": ["74\n"]}, {"input": "3 3\n-1 1 -1\n", "output": ["11\n"]}, {"input": "2 84\n24 114\n", "output": ["84\n"]}, {"input": "10 13\n-1 0 -1 1 0 2 2 3 4 5\n", "output": ["799260863\n"]}, {"input": "2 111\n337 -1\n", "output": ["110\n"]}, {"input": "3 9\n-1 0 0 -1 -1 2 2 3 4 5\n", "output": ["80\n"]}, {"input": "2 512\n-1 -1\n", "output": ["511\n"]}, {"input": "2 757\n852 -1\n", "output": ["756\n"]}, {"input": "2 1626\n1972 0\n", "output": ["1626\n"]}, {"input": "2 83\n-1 337\n", "output": ["82\n"]}, {"input": "2 238\n1280 -1\n", "output": ["237\n"]}, {"input": "2 1347\n0 366\n", "output": ["1347\n"]}, {"input": "2 59\n-1 0\n", "output": ["58\n"]}, {"input": "2 130\n554 -1\n", "output": ["129\n"]}, {"input": "3 4\n-1 1 -1\n", "output": ["500000023\n"]}, {"input": "10 13\n-1 0 0 1 0 2 2 3 4 5\n", "output": ["624657679\n"]}, {"input": "2 22\n24 114\n", "output": ["22\n"]}, {"input": "2 1148\n116 -1\n", "output": ["1147\n"]}, {"input": "2 1264\n15 111\n", "output": ["1264\n"]}, {"input": "2 483\n15 111\n", "output": ["483\n"]}, {"input": "3 14\n-1 0 -1 -1 -1 2 4 1 4 5\n", "output": ["500000218\n"]}, {"input": "2 2829\n-1 -1\n", "output": ["2828\n"]}, {"input": "2 1267\n306 702\n", "output": ["1267\n"]}, {"input": "2 463\n1280 -1\n", "output": ["462\n"]}, {"input": "2 53\n1230 260\n", "output": ["53\n"]}, {"input": "2 18\n-1 0\n", "output": ["17\n"]}, {"input": "3 5\n-1 1 -1\n", "output": ["30\n"]}, {"input": "2 2000\n85 0\n", "output": ["2000\n"]}, {"input": "2 62\n18 114\n", "output": ["62\n"]}, {"input": "2 1604\n23 110\n", "output": ["1604\n"]}, {"input": "2 762\n266 107\n", "output": ["762\n"]}, {"input": "2 1148\n116 0\n", "output": ["1148\n"]}, {"input": "2 318\n15 111\n", "output": ["318\n"]}, {"input": "2 24\n1 3\n", "output": ["24\n"]}, {"input": "2 754\n290 218\n", "output": ["754\n"]}, {"input": "2 113\n1557 0\n", "output": ["113\n"]}, {"input": "2 1672\n306 702\n", "output": ["1672\n"]}, {"input": "2 729\n1280 -1\n", "output": ["728\n"]}, {"input": "2 86\n731 -1\n", "output": ["85\n"]}, {"input": "3 6\n-1 1 -1\n", "output": ["500000046\n"]}, {"input": "2 3078\n85 0\n", "output": ["3078\n"]}, {"input": "2 887\n3 -1\n", "output": ["886\n"]}, {"input": "2 117\n266 107\n", "output": ["117\n"]}, {"input": "3 9\n0 2 0\n", "output": ["90\n"]}, {"input": "2 78\n1326 0\n", "output": ["78\n"]}, {"input": "2 667\n247 2\n", "output": ["667\n"]}, {"input": "5 14\n-1 1 -1 -1 -1 2 4 1 4 5\n", "output": ["250042203\n"]}, {"input": "2 2166\n-1 584\n", "output": ["2165\n"]}, {"input": "2 3078\n85 -1\n", "output": ["3077\n"]}, {"input": "2 115\n266 107\n", "output": ["115\n"]}, {"input": "2 499\n8 001\n", "output": ["499\n"]}, {"input": "2 78\n1326 -1\n", "output": ["77\n"]}, {"input": "10 9\n-1 0 -1 0 2 0 2 4 4 5\n", "output": ["652419213\n"]}, {"input": "2 260\n19 011\n", "output": ["260\n"]}, {"input": "2 6178\n1408 0\n", "output": ["6178\n"]}, {"input": "2 5\n1 0\n", "output": ["5\n"]}, {"input": "2 7\n2126 260\n", "output": ["7\n"]}, {"input": "10 9\n-1 0 -1 0 2 0 0 4 4 5\n", "output": ["938133457\n"]}, {"input": "2 20\n-1 1\n", "output": ["19\n"]}, {"input": "2 1113\n16 1\n", "output": ["1113\n"]}, {"input": "2 205\n15 001\n", "output": ["205\n"]}, {"input": "2 99\n833 -1\n", "output": ["98\n"]}, {"input": "2 1215\n1 -1\n", "output": ["1214\n"]}, {"input": "2 2094\n-1 518\n", "output": ["2093\n"]}, {"input": "2 1679\n16 1\n", "output": ["1679\n"]}, {"input": "2 940\n0 011\n", "output": ["940\n"]}, {"input": "2 1219\n163 272\n", "output": ["1219\n"]}, {"input": "2 15\n1 0\n", "output": ["15\n"]}, {"input": "2 1921\n74 315\n", "output": ["1921\n"]}, {"input": "2 2234\n16 1\n", "output": ["2234\n"]}, {"input": "2 267\n15 011\n", "output": ["267\n"]}, {"input": "2 23\n833 0\n", "output": ["23\n"]}, {"input": "2 820\n247 2\n", "output": ["820\n"]}, {"input": "3 14\n0 1 0 -1 -1 2 4 12 2 0\n", "output": ["210\n"]}, {"input": "2 1215\n2 0\n", "output": ["1215\n"]}, {"input": "2 2773\n16 1\n", "output": ["2773\n"]}, {"input": "2 170\n30 53\n", "output": ["170\n"]}, {"input": "2 5348\n6436 0\n", "output": ["5348\n"]}, {"input": "2 21\n2444 260\n", "output": ["21\n"]}, {"input": "2 3357\n70 0\n", "output": ["3357\n"]}, {"input": "2 6331\n6436 0\n", "output": ["6331\n"]}, {"input": "2 2262\n74 978\n", "output": ["2262\n"]}, {"input": "2 437\n27 010\n", "output": ["437\n"]}, {"input": "2 1802\n2435 0\n", "output": ["1802\n"]}, {"input": "2 6331\n6436 -1\n", "output": ["6330\n"]}, {"input": "2 3473\n74 978\n", "output": ["3473\n"]}, {"input": "2 2094\n0 2\n", "output": ["2094\n"]}, {"input": "2 340\n13 102\n", "output": ["340\n"]}, {"input": "2 3200\n10928 -1\n", "output": ["3199\n"]}, {"input": "2 119\n27 111\n", "output": ["119\n"]}, {"input": "2 3200\n10928 0\n", "output": ["3200\n"]}, {"input": "2 172\n27 111\n", "output": ["172\n"]}, {"input": "2 36\n8 110\n", "output": ["36\n"]}, {"input": "2 45\n8 111\n", "output": ["45\n"]}, {"input": "2 49\n3 111\n", "output": ["49\n"]}, {"input": "2 1381\n-1 1990\n", "output": ["1380\n"]}, {"input": "2 1038\n818 208\n", "output": ["1038\n"]}, {"input": "2 126\n852 -1\n", "output": ["125\n"]}, {"input": "2 54\n4 27\n", "output": ["54\n"]}, {"input": "2 1629\n-1 753\n", "output": ["1628\n"]}, {"input": "2 1421\n326 0\n", "output": ["1421\n"]}, {"input": "2 825\n616 151\n", "output": ["825\n"]}, {"input": "2 1236\n-1 566\n", "output": ["1235\n"]}, {"input": "6 9\n-1 0 -1 1 1 2 2 3 3 3\n", "output": ["68198\n"]}, {"input": "2 816\n845 377\n", "output": ["816\n"]}, {"input": "2 412\n-1 -1\n", "output": ["411\n"]}, {"input": "2 35\n142 108\n", "output": ["35\n"]}, {"input": "2 31\n2 3\n", "output": ["31\n"]}, {"input": "3 8\n0 1 0\n", "output": ["72\n"]}, {"input": "2 486\n337 -1\n", "output": ["485\n"]}, {"input": "3 8\n-1 0 -1 0 0 2 2 3 4 5\n", "output": ["500000077\n"]}, {"input": "2 1216\n15 110\n", "output": ["1216\n"]}, {"input": "2 1465\n15 110\n", "output": ["1465\n"]}, {"input": "2 2\n-1 1\n", "output": ["1\n"]}, {"input": "1 2000\n1280 -1\n", "output": ["0\n"]}, {"input": "1 2000\n-2 1990\n", "output": ["0\n"]}, {"input": "1 2128\n-1 -1\n", "output": ["0\n"]}, {"input": "2 434\n142 377\n", "output": ["434\n"]}, {"input": "2 63\n23 114\n", "output": ["63\n"]}, {"input": "1 838\n-1 366\n", "output": ["0\n"]}, {"input": "2 4\n-1 1\n", "output": ["3\n"]}, {"input": "10 9\n-1 0 -1 1 0 2 2 3 4 3\n", "output": ["688133507\n"]}, {"input": "2 2\n2 -1\n", "output": ["1\n"]}, {"input": "1 2000\n1280 0\n", "output": ["0\n"]}, {"input": "1 1986\n-2 1990\n", "output": ["0\n"]}, {"input": "2 434\n142 67\n", "output": ["434\n"]}, {"input": "2 63\n24 114\n", "output": ["63\n"]}, {"input": "2 311\n3222 -1\n", "output": ["310\n"]}, {"input": "2 449\n678 -1\n", "output": ["448\n"]}, {"input": "2 1250\n23 181\n", "output": ["1250\n"]}, {"input": "2 10\n3 3\n", "output": ["0\n"]}, {"input": "2 2\n2 0\n", "output": ["2\n"]}, {"input": "1 1588\n1280 0\n", "output": ["0\n"]}, {"input": "2 434\n142 108\n", "output": ["434\n"]}, {"input": "1 63\n24 114\n", "output": ["0\n"]}, {"input": "2 3\n-1 0\n", "output": ["2\n"]}, {"input": "2 449\n337 -1\n", "output": ["448\n"]}, {"input": "2 1250\n23 110\n", "output": ["1250\n"]}, {"input": "2 18\n3 3\n", "output": ["0\n"]}, {"input": "2 2\n2 1\n", "output": ["2\n"]}, {"input": "1 1588\n1280 -1\n", "output": ["0\n"]}, {"input": "2 434\n277 108\n", "output": ["434\n"]}, {"input": "2 1250\n15 110\n", "output": ["1250\n"]}, {"input": "3 9\n-1 0 -1 0 0 2 2 3 4 5\n", "output": ["92\n"]}, {"input": "2 2\n3 1\n", "output": ["2\n"]}, {"input": "1 1588\n1326 -1\n", "output": ["0\n"]}, {"input": "2 434\n277 214\n", "output": ["434\n"]}], "source_codes": ["\nconst MOD: i64 = 1_000_000_007;\n\nfn solve(n: usize, k: i64, a: Vec<i64>) -> i64 {\n    let cnt = a.iter().filter(|&x| *x == -1).count();\n    let mut dp = vec![0; cnt + 1];\n    dp[0] = 1;\n    for i in 1..=cnt {\n        dp[i] = (dp[i - 1] * k) % MOD;\n    }\n    let mut ans = 0;\n    for i in 0..n {\n        for j in i + 1..n {\n            if a[i] != -1 && a[j] != -1 && a[i] != a[j] {\n                ans += dp[cnt];\n                ans %= MOD;\n            }\n        }\n    }\n    ans\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut iter = input_line.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let k: i64 = iter.next().unwrap().parse().unwrap();\n\n    input_line.clear();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let a: Vec<i64> = input_line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    println!(\"{}\", solve(n, k, a));\n}\n\n\n"], "responses": ["\nconst MOD: i64 = 1_000_000_007;\n\nfn solve(n: usize, k: i64, a: Vec<i64>) -> i64 {\n    let cnt = a.iter().filter(|&x| *x == -1).count();\n    let mut dp = vec![0; cnt + 1];\n    dp[0] = 1;\n    for i in 1..=cnt {\n        dp[i] = (dp[i - 1] * k) % MOD;\n    }\n    let mut ans = 0;\n    for i in 0..n {\n        for j in i + 1..n {\n            if a[i] != -1 && a[j] != -1 && a[i] != a[j] {\n                ans += dp[cnt];\n                ans %= MOD;\n            }\n        }\n    }\n    ans\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut iter = input_line.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let k: i64 = iter.next().unwrap().parse().unwrap();\n\n    input_line.clear();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let a: Vec<i64> = input_line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    println!(\"{}\", solve(n, k, a));\n}\n\n\n"], "prompt_tokens": [69250], "completion_tokens": [14168], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1575}
{"name": "1575_G. GCD Festival", "description": "Mr. Chanek has an array a of n integers. The prettiness value of a is denoted as:\n\n$$$\u2211_{i=1}^{n} {\u2211_{j=1}^{n} {\\gcd(a_i, a_j) \u22c5 \\gcd(i, j)}}$$$\n\nwhere \\gcd(x, y) denotes the greatest common divisor (GCD) of integers x and y.\n\nIn other words, the prettiness value of an array a is the total sum of \\gcd(a_i, a_j) \u22c5 \\gcd(i, j) for all pairs (i, j).\n\nHelp Mr. Chanek find the prettiness value of a, and output the result modulo 10^9 + 7!\n\nInput\n\nThe first line contains an integer n (2 \u2264 n \u2264 10^5).\n\nThe second line contains n integers a_1, a_2, \u2026, a_n (1 \u2264 a_i \u2264 10^5).\n\nOutput\n\nOutput an integer denoting the prettiness value of a modulo 10^9 + 7.\n\nExample\n\nInput\n\n\n5\n3 6 2 1 4\n\n\nOutput\n\n\n77", "tags": ["math", "number theory"], "difficulty": 13, "id": 1575, "sample_io": [{"input": "5\n3 6 2 1 4\n", "output": ["77\n"]}], "test_list": [{"input": "5\n54883 59286 71521 84428 60278\n", "output": ["1027150\n"]}, {"input": "2\n83160 83160\n", "output": ["415800\n"]}, {"input": "5\n54883 59286 14742 84428 60278\n", "output": ["856827\n"]}, {"input": "5\n3 3 2 1 4\n", "output": ["67\n"]}, {"input": "5\n54883 59286 17269 84428 60278\n", "output": ["864394\n"]}, {"input": "5\n54883 68768 17269 84428 60278\n", "output": ["883378\n"]}, {"input": "5\n3 5 1 1 4\n", "output": ["62\n"]}, {"input": "5\n54883 92651 71521 84428 60278\n", "output": ["1093874\n"]}, {"input": "2\n83160 1006\n", "output": ["85176\n"]}, {"input": "5\n3 11 2 1 4\n", "output": ["79\n"]}, {"input": "5\n54883 11471 14742 84428 60278\n", "output": ["761181\n"]}, {"input": "5\n3 2 2 1 4\n", "output": ["65\n"]}, {"input": "5\n54883 59286 18015 84428 60278\n", "output": ["866636\n"]}, {"input": "5\n6 5 2 1 4\n", "output": ["74\n"]}, {"input": "5\n54883 68768 17269 84428 20399\n", "output": ["683979\n"]}, {"input": "2\n83160 674\n", "output": ["84512\n"]}, {"input": "5\n58138 11471 14742 84428 60278\n", "output": ["764442\n"]}, {"input": "5\n3 2 2 2 4\n", "output": ["77\n"]}, {"input": "5\n54883 68768 17269 52463 20399\n", "output": ["556107\n"]}, {"input": "2\n83160 1153\n", "output": ["85468\n"]}, {"input": "5\n58138 11471 14742 91222 60278\n", "output": ["791618\n"]}, {"input": "5\n54883 133 17269 52463 20399\n", "output": ["418837\n"]}, {"input": "2\n83160 973\n", "output": ["85120\n"]}, {"input": "5\n58138 11471 2840 91222 60278\n", "output": ["755912\n"]}, {"input": "5\n99534 133 17269 52463 20399\n", "output": ["463488\n"]}, {"input": "2\n83160 1163\n", "output": ["85488\n"]}, {"input": "5\n99534 147 17269 52463 20399\n", "output": ["463520\n"]}, {"input": "2\n83160 1049\n", "output": ["85260\n"]}, {"input": "5\n99534 147 17269 52463 20125\n", "output": ["462218\n"]}, {"input": "2\n79842 1049\n", "output": ["81942\n"]}, {"input": "5\n99534 147 17269 58616 20125\n", "output": ["486788\n"]}, {"input": "2\n79842 214\n", "output": ["80274\n"]}, {"input": "5\n99534 147 17269 58616 3805\n", "output": ["405164\n"]}, {"input": "5\n99534 151 17269 58616 3805\n", "output": ["405156\n"]}, {"input": "5\n99534 151 27204 58616 3805\n", "output": ["434977\n"]}, {"input": "5\n99534 151 27204 58616 5917\n", "output": ["445537\n"]}, {"input": "5\n99534 151 27204 58616 10100\n", "output": ["466466\n"]}, {"input": "5\n99534 151 27204 37060 10100\n", "output": ["380274\n"]}, {"input": "5\n99534 151 37520 37060 10100\n", "output": ["411278\n"]}, {"input": "5\n99534 151 37520 37866 10100\n", "output": ["414438\n"]}, {"input": "5\n99534 151 37520 37866 10110\n", "output": ["414484\n"]}, {"input": "5\n99534 151 37520 19505 10110\n", "output": ["341034\n"]}, {"input": "5\n99534 63 37520 19505 10110\n", "output": ["340878\n"]}, {"input": "5\n99534 65 37520 19505 10110\n", "output": ["340894\n"]}, {"input": "5\n99534 57 37520 19505 10110\n", "output": ["340854\n"]}, {"input": "5\n99534 57 37520 19505 10100\n", "output": ["340812\n"]}, {"input": "5\n54245 57 37520 19505 10100\n", "output": ["295575\n"]}, {"input": "5\n54245 57 37520 19505 10101\n", "output": ["295542\n"]}, {"input": "5\n47612 57 37520 19505 10101\n", "output": ["288863\n"]}, {"input": "5\n47612 57 37520 19505 10100\n", "output": ["288894\n"]}, {"input": "5\n47612 57 33910 19505 10100\n", "output": ["278040\n"]}, {"input": "5\n47612 57 4731 19505 10100\n", "output": ["190751\n"]}, {"input": "5\n47612 57 3570 19505 10100\n", "output": ["187024\n"]}, {"input": "5\n49368 57 3570 19505 10100\n", "output": ["188984\n"]}, {"input": "5\n49368 57 3564 19505 10100\n", "output": ["189006\n"]}, {"input": "5\n49368 57 1389 19505 10100\n", "output": ["182217\n"]}, {"input": "5\n49368 57 816 19505 10100\n", "output": ["181314\n"]}, {"input": "5\n49368 57 816 9769 10100\n", "output": ["142362\n"]}, {"input": "5\n40531 59286 71521 84428 60278\n", "output": ["1012798\n"]}, {"input": "2\n83160 30588\n", "output": ["144360\n"]}, {"input": "5\n3 6 2 2 4\n", "output": ["89\n"]}, {"input": "5\n3 3 2 1 2\n", "output": ["57\n"]}, {"input": "5\n54883 59286 17269 18865 60278\n", "output": ["602148\n"]}, {"input": "5\n3 5 2 1 8\n", "output": ["87\n"]}, {"input": "5\n54883 68768 12907 84428 60278\n", "output": ["870280\n"]}, {"input": "5\n54883 92651 71521 41670 60278\n", "output": ["922842\n"]}, {"input": "2\n83160 1472\n", "output": ["86120\n"]}, {"input": "5\n3 4 2 1 4\n", "output": ["73\n"]}, {"input": "5\n54883 19021 14742 84428 60278\n", "output": ["776281\n"]}, {"input": "5\n3 1 2 1 4\n", "output": ["59\n"]}, {"input": "5\n54883 59286 18015 84428 41705\n", "output": ["773775\n"]}, {"input": "5\n54883 1289 17269 84428 20399\n", "output": ["548997\n"]}, {"input": "5\n54883 68768 30171 52463 20399\n", "output": ["594801\n"]}, {"input": "2\n62932 1153\n", "output": ["65240\n"]}, {"input": "5\n58138 11471 14742 91222 43001\n", "output": ["705239\n"]}, {"input": "5\n16135 133 17269 52463 20399\n", "output": ["380113\n"]}, {"input": "2\n83160 1103\n", "output": ["85368\n"]}, {"input": "5\n99534 133 21279 52463 20399\n", "output": ["475510\n"]}, {"input": "2\n83160 2042\n", "output": ["87248\n"]}, {"input": "5\n99534 147 17269 22062 20399\n", "output": ["341934\n"]}, {"input": "2\n79842 1488\n", "output": ["82830\n"]}, {"input": "5\n99534 147 17185 58616 3805\n", "output": ["404920\n"]}, {"input": "5\n99534 151 33935 58616 3805\n", "output": ["455162\n"]}, {"input": "5\n99534 151 27204 58616 3362\n", "output": ["432768\n"]}, {"input": "5\n99534 151 27204 85241 5917\n", "output": ["552029\n"]}, {"input": "5\n99534 151 1014 58616 10100\n", "output": ["387888\n"]}, {"input": "5\n99534 151 27204 12835 10100\n", "output": ["283936\n"]}, {"input": "5\n99534 151 37520 38479 10100\n", "output": ["416888\n"]}, {"input": "5\n99534 151 37520 25362 10100\n", "output": ["364422\n"]}, {"input": "5\n79997 151 37520 19505 10110\n", "output": ["321485\n"]}, {"input": "5\n99534 87 37520 19505 10110\n", "output": ["340914\n"]}, {"input": "5\n99534 57 71829 19505 10110\n", "output": ["443765\n"]}, {"input": "5\n99534 57 37520 5150 10100\n", "output": ["283494\n"]}, {"input": "5\n54245 57 2106 19505 10100\n", "output": ["189285\n"]}, {"input": "5\n54245 57 74457 19505 10101\n", "output": ["406333\n"]}, {"input": "5\n7132 57 37520 19505 10101\n", "output": ["248383\n"]}, {"input": "5\n47612 114 37520 19505 10100\n", "output": ["289014\n"]}, {"input": "5\n88338 57 33910 19505 10100\n", "output": ["318766\n"]}, {"input": "5\n80407 57 4731 19505 10100\n", "output": ["223540\n"]}, {"input": "5\n47612 47 3570 19505 10100\n", "output": ["187184\n"]}, {"input": "5\n49368 57 3570 19505 10101\n", "output": ["189005\n"]}, {"input": "5\n49368 57 3564 19505 10000\n", "output": ["188514\n"]}, {"input": "5\n49368 57 1389 29577 10100\n", "output": ["222513\n"]}, {"input": "5\n49368 23 816 19505 10100\n", "output": ["181238\n"]}, {"input": "5\n49368 8 816 9769 10100\n", "output": ["142290\n"]}, {"input": "5\n40531 59286 87177 84428 60278\n", "output": ["1059770\n"]}, {"input": "2\n83160 15866\n", "output": ["114896\n"]}, {"input": "5\n3 6 2 4 4\n", "output": ["101\n"]}, {"input": "5\n3 3 2 1 3\n", "output": ["68\n"]}, {"input": "5\n54883 59286 17269 18865 22967\n", "output": ["415615\n"]}, {"input": "5\n3 7 2 1 4\n", "output": ["71\n"]}, {"input": "5\n54883 68768 12907 84428 59145\n", "output": ["864611\n"]}, {"input": "5\n33608 92651 71521 41670 60278\n", "output": ["901571\n"]}, {"input": "5\n3 4 1 1 4\n", "output": ["66\n"]}, {"input": "5\n54883 19021 14742 84428 2563\n", "output": ["487702\n"]}, {"input": "5\n54883 59286 18015 84428 79925\n", "output": ["964875\n"]}, {"input": "5\n54883 1289 17269 84428 27581\n", "output": ["584907\n"]}, {"input": "5\n54883 68768 30171 52463 11349\n", "output": ["549555\n"]}, {"input": "2\n62932 1299\n", "output": ["65532\n"]}, {"input": "5\n58138 11471 14742 91222 49893\n", "output": ["739691\n"]}, {"input": "5\n16135 223 17269 52463 20399\n", "output": ["380269\n"]}, {"input": "2\n83160 1741\n", "output": ["86644\n"]}, {"input": "2\n6544 2042\n", "output": ["10632\n"]}, {"input": "5\n37726 147 17269 22062 20399\n", "output": ["280114\n"]}, {"input": "2\n57413 1488\n", "output": ["60391\n"]}, {"input": "5\n82514 147 17185 58616 3805\n", "output": ["387896\n"]}, {"input": "5\n99534 151 33935 58616 1780\n", "output": ["445045\n"]}, {"input": "5\n99534 151 27204 85241 4386\n", "output": ["544394\n"]}, {"input": "5\n99534 287 1014 58616 10100\n", "output": ["388160\n"]}, {"input": "5\n43041 151 27204 12835 10100\n", "output": ["227435\n"]}, {"input": "5\n99534 151 37520 74526 10100\n", "output": ["561078\n"]}, {"input": "5\n99534 151 37520 25362 11100\n", "output": ["369438\n"]}, {"input": "5\n79997 151 42796 19505 10110\n", "output": ["337289\n"]}, {"input": "5\n99534 87 37520 19505 10100\n", "output": ["340872\n"]}, {"input": "5\n99534 57 71829 8304 10110\n", "output": ["398985\n"]}, {"input": "5\n99534 30 37520 5150 10100\n", "output": ["283518\n"]}, {"input": "5\n54245 57 2106 20283 10100\n", "output": ["192393\n"]}, {"input": "5\n30546 57 74457 19505 10101\n", "output": ["382614\n"]}, {"input": "5\n7132 2 37520 19505 10101\n", "output": ["248273\n"]}, {"input": "5\n47612 114 37520 19505 10101\n", "output": ["288981\n"]}, {"input": "5\n88338 57 33910 19505 11100\n", "output": ["323778\n"]}, {"input": "5\n80407 57 4731 37120 10100\n", "output": ["293866\n"]}, {"input": "5\n47612 47 3570 14707 10100\n", "output": ["167804\n"]}, {"input": "5\n49368 57 3570 19505 11101\n", "output": ["194021\n"]}, {"input": "5\n49368 57 3564 19505 10010\n", "output": ["188628\n"]}, {"input": "5\n49368 105 1389 29577 10100\n", "output": ["222617\n"]}, {"input": "5\n49368 23 816 7771 10100\n", "output": ["134294\n"]}, {"input": "5\n49368 8 816 9769 10101\n", "output": ["142285\n"]}, {"input": "2\n83160 4632\n", "output": ["92472\n"]}, {"input": "5\n3 6 2 4 8\n", "output": ["121\n"]}, {"input": "5\n46756 59286 17269 18865 22967\n", "output": ["407490\n"]}, {"input": "5\n54883 11112 12907 84428 59145\n", "output": ["749303\n"]}, {"input": "5\n33608 20002 71521 41670 60278\n", "output": ["756281\n"]}, {"input": "5\n54883 19021 2640 84428 2563\n", "output": ["451420\n"]}, {"input": "5\n54883 59286 26328 84428 79925\n", "output": ["989818\n"]}, {"input": "5\n6 3 1 1 5\n", "output": ["70\n"]}, {"input": "5\n54883 1289 2325 84428 27581\n", "output": ["540075\n"]}, {"input": "5\n54883 68768 26666 52463 11349\n", "output": ["539038\n"]}, {"input": "2\n62932 2102\n", "output": ["67140\n"]}, {"input": "5\n58138 11471 14742 91222 87478\n", "output": ["927618\n"]}, {"input": "5\n10896 223 17269 52463 20399\n", "output": ["375018\n"]}, {"input": "2\n83160 2871\n", "output": ["89100\n"]}, {"input": "2\n3822 2042\n", "output": ["7910\n"]}, {"input": "5\n42322 147 17269 22062 20399\n", "output": ["284734\n"]}, {"input": "2\n57413 2443\n", "output": ["62301\n"]}, {"input": "5\n82514 240 17185 58616 3805\n", "output": ["388116\n"]}, {"input": "5\n99534 278 33935 58616 1780\n", "output": ["445307\n"]}, {"input": "5\n99534 151 27204 85241 4150\n", "output": ["543362\n"]}, {"input": "5\n99534 287 1127 58616 10100\n", "output": ["388497\n"]}, {"input": "5\n43041 151 27204 12835 10000\n", "output": ["226935\n"]}, {"input": "5\n99534 151 37520 13048 10100\n", "output": ["315270\n"]}, {"input": "5\n99534 151 37520 16767 11100\n", "output": ["335044\n"]}, {"input": "5\n87375 87 37520 19505 10100\n", "output": ["328773\n"]}, {"input": "5\n30546 25 74457 19505 10101\n", "output": ["382554\n"]}, {"input": "5\n4905 2 37520 19505 10101\n", "output": ["246058\n"]}, {"input": "5\n6731 114 37520 19505 10101\n", "output": ["248092\n"]}, {"input": "5\n80407 57 4731 2545 10100\n", "output": ["155536\n"]}, {"input": "5\n47612 47 3570 1504 10100\n", "output": ["115178\n"]}, {"input": "5\n49368 57 3570 33856 11101\n", "output": ["251433\n"]}, {"input": "5\n49368 57 3564 34542 10010\n", "output": ["249038\n"]}, {"input": "5\n93014 105 1389 29577 10100\n", "output": ["266247\n"]}, {"input": "5\n49368 23 816 7771 10110\n", "output": ["134352\n"]}, {"input": "5\n49368 8 816 8329 10101\n", "output": ["136525\n"]}, {"input": "5\n3 6 4 4 8\n", "output": ["135\n"]}, {"input": "5\n46756 59286 17269 18865 38821\n", "output": ["486736\n"]}, {"input": "5\n54883 11112 12907 84428 36812\n", "output": ["637646\n"]}, {"input": "5\n33608 20002 71521 41670 52727\n", "output": ["718520\n"]}, {"input": "5\n42107 19021 2640 84428 2563\n", "output": ["438644\n"]}, {"input": "5\n11997 59286 26328 84428 79925\n", "output": ["946940\n"]}, {"input": "5\n6 6 1 1 5\n", "output": ["82\n"]}, {"input": "5\n92694 1289 2325 84428 27581\n", "output": ["577892\n"]}, {"input": "5\n54883 20390 26666 52463 11349\n", "output": ["442282\n"]}, {"input": "2\n62932 1165\n", "output": ["65264\n"]}, {"input": "5\n7110 11471 14742 91222 87478\n", "output": ["876622\n"]}, {"input": "5\n10896 223 17269 52463 6753\n", "output": ["306792\n"]}, {"input": "2\n3822 409\n", "output": ["4642\n"]}, {"input": "5\n42322 147 17269 33420 20399\n", "output": ["330166\n"]}, {"input": "2\n57413 3595\n", "output": ["64605\n"]}, {"input": "5\n99534 278 33935 51005 1780\n", "output": ["414867\n"]}, {"input": "5\n99534 93 27204 85241 4150\n", "output": ["543254\n"]}, {"input": "5\n99534 287 1127 67249 10100\n", "output": ["423057\n"]}, {"input": "5\n43041 151 27204 9606 10000\n", "output": ["213427\n"]}], "source_codes": ["\nuse std::cmp::min;\n\nfn prettiness_value(n: usize, a: &Vec<i32>) -> i32 {\n    let MOD = 1_000_000_007;\n    let mut prettiness = 0;\n    for i in 0..n {\n        for j in 0..n {\n            prettiness += gcd(a[i], a[j]) * gcd((i + 1) as i32, (j + 1) as i32);\n        }\n    }\n    prettiness % MOD\n}\n\nfn gcd(mut a: i32, mut b: i32) -> i32 {\n    while b != 0 {\n        let temp = b;\n        b = a % b;\n        a = temp;\n    }\n    a\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let n: usize = input.trim().parse().unwrap();\n\n    input.clear();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let a: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    println!(\"{}\", prettiness_value(n, &a));\n}\n\n\n"], "responses": ["\nuse std::cmp::min;\n\nfn prettiness_value(n: usize, a: &Vec<i32>) -> i32 {\n    let MOD = 1_000_000_007;\n    let mut prettiness = 0;\n    for i in 0..n {\n        for j in 0..n {\n            prettiness += gcd(a[i], a[j]) * gcd((i + 1) as i32, (j + 1) as i32);\n        }\n    }\n    prettiness % MOD\n}\n\nfn gcd(mut a: i32, mut b: i32) -> i32 {\n    while b != 0 {\n        let temp = b;\n        b = a % b;\n        a = temp;\n    }\n    a\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let n: usize = input.trim().parse().unwrap();\n\n    input.clear();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let a: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    println!(\"{}\", prettiness_value(n, &a));\n}\n\n\n"], "prompt_tokens": [4202], "completion_tokens": [1686], "no_of_try": 1, "api_calls": 9, "is_solved": true, "language": "Rust", "task_id": 1575}
{"name": "1575_H. Holiday Wall Ornaments", "description": "The Winter holiday will be here soon. Mr. Chanek wants to decorate his house's wall with ornaments. The wall can be represented as a binary string a of length n. His favorite nephew has another binary string b of length m (m \u2264 n).\n\nMr. Chanek's nephew loves the non-negative integer k. His nephew wants exactly k occurrences of b as substrings in a. \n\nHowever, Mr. Chanek does not know the value of k. So, for each k (0 \u2264 k \u2264 n - m + 1), find the minimum number of elements in a that have to be changed such that there are exactly k occurrences of b in a.\n\nA string s occurs exactly k times in t if there are exactly k different pairs (p,q) such that we can obtain s by deleting p characters from the beginning and q characters from the end of t.\n\nInput\n\nThe first line contains two integers n and m (1 \u2264 m \u2264 n \u2264 500) \u2014 size of the binary string a and b respectively.\n\nThe second line contains a binary string a of length n.\n\nThe third line contains a binary string b of length m.\n\nOutput\n\nOutput n - m + 2 integers \u2014 the (k+1)-th integer denotes the minimal number of elements in a that have to be changed so there are exactly k occurrences of b as a substring in a.\n\nExample\n\nInput\n\n\n9 3\n100101011\n101\n\n\nOutput\n\n\n1 1 0 1 6 -1 -1 -1\n\nNote\n\nFor k = 0, to make the string a have no occurrence of 101, you can do one character change as follows.\n\n100101011 \u2192 100100011\n\nFor k = 1, you can also change a single character.\n\n100101011 \u2192 100001011\n\nFor k = 2, no changes are needed.", "tags": ["dp", "strings"], "difficulty": 14, "id": 1575, "sample_io": [{"input": "9 3\n100101011\n101\n", "output": ["1 1 0 1 6 -1 -1 -1 \n"]}], "test_list": [{"input": "300 9\n101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010\n101010101\n", "output": ["30 29 29 29 29 29 28 28 28 28 28 27 27 27 27 27 26 26 26 26 26 25 25 25 25 25 24 24 24 24 24 23 23 23 23 23 22 22 22 22 22 21 21 21 21 21 20 20 20 20 20 19 19 19 19 19 18 18 18 18 18 17 17 17 17 17 16 16 16 16 16 15 15 15 15 15 14 14 14 14 14 13 13 13 13 13 12 12 12 12 12 11 11 11 11 11 10 10 10 10 10 9 9 9 9 9 8 8 8 8 8 7 7 7 7 7 6 6 6 6 6 5 5 5 5 5 4 4 4 4 4 3 3 3 3 3 2 2 2 2 2 1 1 1 1 1 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "45 30\n000101011011111101011110100101100000111001000\n001100101001011111000101111110\n", "output": ["0 11 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "383 106\n00111001001000111101111001010110011011011110011011101101110000100010000001011010100010011011101100001110001100010011010101111000100100100100011001011111110111110000011111001010100010010010000111010101011110011000000001111100101010111000101001010010011010001110100101100111010000101000101000111101000101000000101001111110100000110001111001101011101100110100011110101101000000101010011\n1110010000101000000000000011110100111010000011111111011101010100110110100001110010110000001101000110000011\n", "output": ["0 37 80 128 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 20\n111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n11111011110011000001\n", "output": ["15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "96 38\n100010000100011000011010101001010111000111110001100001100001111110001000111111001110100101101000\n11011110100011001111111101000001000001\n", "output": ["0 12 27 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "1 1\n1\n1\n", "output": ["1 0 \n"]}, {"input": "300 11\n010101000011000001000101101011110001010100110110101100010010000110111011110010110011111010001010011110110101111100110010000010001010010001101011101100010111001110010001000100100001101011111011010101101000101001111110111010110111011000111101011110111000011100000000111001101110110000110101101010100010\n11011011010\n", "output": ["0 1 2 4 6 8 10 12 14 17 20 23 26 29 32 35 38 41 45 49 53 57 61 68 75 85 97 131 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 10\n110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001\n1101001001\n", "output": ["30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 45 90 135 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 1\n111111110110001010001110101100010011101110110111011101111000001100100010101011100101100111100001010010011101010111000001000110010101100111011101101010000100000101010011110111011010001101110000110010001101101001101111011100111001100110101111111110100110000110001101000010111011100010000110111000101011\n0\n", "output": ["141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 \n"]}, {"input": "300 11\n010011001010111110001010111000110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111010001110011110010111101000110111\n00100100101\n", "output": ["0 1 2 4 6 8 10 13 16 19 22 25 28 31 35 39 43 47 51 55 59 64 69 74 80 88 101 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001010101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010010010010010010\n", "output": ["0 6 5 6 8 10 11 13 15 16 19 20 21 22 24 25 26 27 29 30 31 32 34 35 36 37 39 40 42 44 46 47 49 50 52 53 55 56 58 59 60 62 62 63 65 67 69 71 72 73 75 77 79 81 83 84 86 86 88 89 91 92 93 94 96 97 99 101 103 104 106 107 109 110 112 114 115 117 117 119 121 123 124 126 127 129 131 132 133 135 137 139 141 142 143 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 1\n111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n0\n", "output": ["0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 \n"]}, {"input": "1 1\n1\n0\n", "output": ["0 1 \n"]}, {"input": "262 14\n1101101101001010011111001111101110001101010001110010000001010111011010000000110101010100010100000110101000011101100011000110011111001001110001101001000110101111001000001100100110110000001101010001100111101111101010101101010100010010011010110010100111000100011100\n01101100111001\n", "output": ["0 3 6 9 12 15 19 23 27 31 35 40 45 50 55 60 65 71 78 85 95 109 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "247 209\n1100000000001001111000110111111000100101100001011101111100011011110011101101010001101101001011000011011001110100010000111010011010110111110110000000101000111100011100000110110101010011001000111100011101111100101111100111001100010101100101001101000\n01101011000111100110101000001111110001100010001001000111001101011001001011110101111110011100010000001111000101001111100011101101000001011010100010001011010011110101111010010000000111010000100011001001010000010\n", "output": ["0 94 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 24\n100000010101111000000101001111101110101011101000110011100001011000101100100001111001110011111100000010101100000100011111101111111010011100000101100110110001110010111001110001010110110110001111100111001001011001011111010111101101000010101000000001111010110011000110001000111011110000110100011100010010\n111000111000111000111000\n", "output": ["0 4 7 10 13 15 17 21 24 27 30 33 36 39 42 45 48 51 53 55 58 61 65 68 71 74 77 80 84 87 90 93 96 98 102 105 107 109 111 115 118 122 125 129 132 135 138 141 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 1\n111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n1\n", "output": ["300 299 298 297 296 295 294 293 292 291 290 289 288 287 286 285 284 283 282 281 280 279 278 277 276 275 274 273 272 271 270 269 268 267 266 265 264 263 262 261 260 259 258 257 256 255 254 253 252 251 250 249 248 247 246 245 244 243 242 241 240 239 238 237 236 235 234 233 232 231 230 229 228 227 226 225 224 223 222 221 220 219 218 217 216 215 214 213 212 211 210 209 208 207 206 205 204 203 202 201 200 199 198 197 196 195 194 193 192 191 190 189 188 187 186 185 184 183 182 181 180 179 178 177 176 175 174 173 172 171 170 169 168 167 166 165 164 163 162 161 160 159 158 157 156 155 154 153 152 151 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \n"]}, {"input": "300 1\n110011001111010000110001010101001011100100000001001011111010110110110111111110100000011100101000000011101010101100111111000110000110101101110100011011010011011000110010001010000111101100011001100000001101110100111101000010001101111011001011111001001101110111001101101010111010010000010001001001110111\n0\n", "output": ["148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 \n"]}, {"input": "246 18\n110111101111011001110110001000011101100010111001011011010011100010010000100011111000101111001110011001110010100010110011111000010100111011001111101111000000011110000010011001001110111011110111011010011101101010011100111010001111110000111100001001\n000000000110110010\n", "output": ["0 4 8 12 16 22 28 34 41 48 55 63 71 86 102 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 30\n111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000\n111111100101110111000100011000\n", "output": ["10 9 8 7 6 5 4 3 2 1 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00111001100111001010\n", "output": ["0 4 8 12 16 20 24 31 38 45 52 59 70 83 98 113 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 5\n101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110101101011010110\n10110\n", "output": ["60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 6 7 13 14 20 21 27 28 34 35 41 42 48 49 55 56 62 63 69 70 76 77 83 84 90 91 97 98 104 105 111 112 118 119 125 126 132 133 139 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 8\n111111001011010110101011100011100010010100100100000000101001011011011100110100111011100111101101010010101111111110000101101011010010011010011000111001010010101011110001001001010110110001001011101101111111110111111110110101110010010010001001101111010101001100111111101011100001000111110000101001101001\n10101001\n", "output": ["2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 18 20 22 24 26 28 30 32 34 36 39 42 45 48 51 54 57 60 64 70 76 83 93 103 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 20\n100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000\n01010001100110010001\n", "output": ["0 8 15 23 30 38 45 53 60 68 75 83 90 98 105 113 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 20\n000101110010111101001101000001000000000000010011100111100010111001010000100111000100101001110010001001101111100111100110000000010011111110011101010110011111011011111110110011001101010111011011111110111111010011101000001110101010010100100111110110001001111100001011011001010001010110010110110110000000\n11111111111111111111\n", "output": ["0 4 3 5 4 5 5 6 6 6 7 7 8 8 9 9 9 10 9 10 11 10 11 12 12 11 13 12 12 14 13 14 14 14 13 14 14 15 15 17 16 16 17 17 18 18 18 19 19 20 21 21 21 21 21 20 21 21 22 23 23 24 23 24 24 25 26 26 27 28 29 30 29 30 30 31 31 32 32 33 34 34 35 35 35 36 36 37 37 38 38 38 39 39 40 41 40 41 42 42 43 44 45 45 46 46 46 45 46 47 47 48 49 50 51 50 51 52 51 52 53 53 54 54 55 55 56 57 57 58 59 60 59 59 60 61 60 61 62 62 63 63 64 65 64 65 66 66 67 68 68 69 69 70 71 71 72 73 73 73 74 74 75 76 76 77 78 77 78 79 78 79 80 79 80 81 81 82 83 84 84 85 85 86 87 86 87 88 88 89 89 90 91 91 92 93 93 94 95 94 95 96 96 97 98 98 99 99 100 101 101 102 103 103 103 104 104 105 106 106 106 107 107 107 108 108 109 110 109 110 111 111 112 113 114 115 116 117 118 119 120 121 122 123 124 124 125 126 126 127 127 128 129 130 130 131 131 131 132 132 133 133 133 134 134 135 135 137 136 136 137 137 138 139 140 141 142 143 144 145 146 147 \n"]}, {"input": "191 63\n11000001001111101100110001001001101000011001010010000011001100101001101011100111001111111101011001000110111000110100000100110101011011011011101000100110010001001101011011101111000011100011110\n001011111010001011010001100001011110100001001100110010101010011\n", "output": ["0 23 48 89 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "300 20\n110001111010000100001100011110100001000011000111101000010000110001111010000100001100011110100001000011000111101000010000110001111010000100001100011110100001000011000111101000010000110001111010000100001100011110100001000011000111101000010000110001111010000100001100011110100001000011000111101000010000\n00110110001011001101\n", "output": ["0 8 12 19 24 31 36 43 48 55 60 67 72 79 84 93 102 110 119 128 137 152 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n"]}, {"input": "383 106\n00111001001000111101111001010110011011011110011011101101110000100010000001011010100010011011101100001110001100010011010101111000100100100100011001011111110111110000011111001010100010010010000111010101011110011000000001111100101010111000101001010010011010001110100101100111010000101000101000111101000101000000101001111110100000110001111001101011101100110100011110101101000000101010011\n1110010000101000000000000011110100111010000011111111011101010100110010100001110010110000001101000110000011\n", "output": ["0 36 80 125 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n11111011110011000001\n", "output": ["14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 10\n110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011001001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001\n1101001001\n", "output": ["29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 44 89 134 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 1\n111111110110001010001110101100010011101110110111011101111000001100100010101011100101100111100001010010011101010111000001000110010101100111011101101010000100000101010011110111011010001101110000110010001101101000101111011100111001100110101111111110100110000110001101000010111011100010000110111000101011\n0\n", "output": ["142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158\n"]}, {"input": "300 11\n010011001010111110001010111000110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111110001110011110010111101000110111\n00100100101\n", "output": ["0 1 2 4 6 8 10 13 16 19 22 25 28 31 35 39 43 47 51 55 59 64 69 75 81 89 102 123 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010010010010010010\n", "output": ["0 6 5 6 8 10 11 13 15 16 19 20 21 23 24 26 27 28 29 30 31 33 34 36 37 38 40 41 43 45 47 48 50 51 53 54 56 57 59 60 61 63 63 64 66 68 70 72 73 74 76 78 80 82 84 85 87 87 89 90 92 93 94 95 97 98 100 102 104 105 107 108 110 111 113 115 116 118 118 120 122 124 125 127 128 130 132 133 134 136 138 140 142 143 144 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010111100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00111001100111001010\n", "output": ["0 4 8 12 16 20 25 32 39 46 53 60 71 84 99 114 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 8\n111111001011010110101011100011100010010100100100000000101001011011011100110100111011100111101101010010101111111110000101101011010010011010011000111001010010101011110001001001010110110001001011101101111111110111111110110101110010010010001001101111010101001100111111101011100001000111110000101001101001\n00101001\n", "output": ["4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 58 60 63 65 68 70 73 76 79 81 84 87 90 94 99 110 115 128 144 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000101001000010000\n01010001100110010001\n", "output": ["0 7 14 22 29 37 44 52 59 67 74 82 89 97 104 112 121 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "191 63\n11000000001111101100110001001001101000011001010010000011001100101001101011100111001111111101011001000110111000110100000100110101011011011011101000100110010001001101011011101111000011100011110\n001011111010001011010001100001011110100001001100110010101010011\n", "output": ["0 23 47 90 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n11111011110011000001\n", "output": ["13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 10\n110100100111010010011101001001110100100111010010011101001001110100100111011010011101001001110100100111010010011101001001110100100111010010011001001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001\n1101001001\n", "output": ["28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 45 88 133 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111000110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111110001110011110010111101000110111\n00110100101\n", "output": ["0 1 2 4 6 8 10 12 14 16 19 22 25 28 31 34 38 42 46 50 54 59 65 72 80 88 98 129 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n11111011110111000001\n", "output": ["0 1 2 3 4 5 6 7 8 9 10 11 12 13 15 17 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111000110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 2 4 6 8 10 12 14 17 20 23 26 29 32 35 38 41 44 47 51 55 59 64 71 78 85 94 124 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n01111011110111000001\n", "output": ["0 2 4 6 8 10 12 14 16 18 20 22 24 26 29 32 98 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 1 3 5 7 9 11 13 16 19 22 25 28 31 34 37 40 43 46 50 54 58 63 70 77 84 93 123 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n01111011110111100001\n", "output": ["0 3 6 9 12 15 18 21 24 27 30 33 36 39 43 47 102 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011010010011001000001010010010001000111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 1 3 5 7 9 11 13 15 18 21 24 27 30 33 36 39 42 45 49 53 58 63 70 77 84 92 124 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101110010101101111101111010001111101000001101111100011110110001110001110010110111110110011010010011001000001010010010001000111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 1 3 5 7 9 11 13 15 18 21 24 27 30 33 36 39 42 45 49 53 58 63 69 76 83 91 123 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101110010101101111101111010001111101000001101111100011110110001110001110010110111110110011010010011001000001010010010001000111001010111110001110011110010111101000110111\n00111101101\n", "output": ["0 1 2 3 5 7 9 11 13 15 17 19 22 25 28 31 35 39 43 47 51 56 61 67 73 81 92 132 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "383 106\n00111001001000111101111001010110011010011110011011101101110000100010000001011010100010011011101100001110001100010011010101111000100100100100011001011111110111110000011111001010100010010010000111010101011110011000000001111100101010111000101001010010011010001110100101100111010000101000101000111101000101000000101001111110100000110001111001101011101100110100011110101101000000101010011\n1110010000101000000000000011110100111010000011111111011101010100110110100001110010110000001101000110000011\n", "output": ["0 37 80 129 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "96 38\n100010000100011000011010101001010111000111110001100001100001111110001000111111001110101101101000\n11011110100011001111111101000001000001\n", "output": ["0 12 28 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "1 1\n0\n1\n", "output": ["0 1\n"]}, {"input": "300 11\n010101000011000001000101101011110001010100110110101100010010000110111011110010110011111010001010011110110101111100110010000010001010010001101011101100010111001110010001000100100001101011111011010101101000101001111110111010110111011000111101011110111000011100000000111001101110110000110101101010100000\n11011011010\n", "output": ["0 1 2 4 6 8 10 12 14 17 20 23 26 29 32 35 38 41 45 49 53 57 61 68 75 85 97 132 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111000110100100111001010001001010010000000100111000001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111010001110011110010111101000110111\n00100100101\n", "output": ["0 1 3 5 7 9 11 14 17 20 23 26 29 32 36 40 44 48 52 56 60 65 70 75 81 89 100 121 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "262 14\n1101101101001010011111001111101110001101010001110010000001010111011010000000110101010100010100000110101000011101100011000110011111001001110001101001000110101111001000001100100110110000001101010001100111101111101010101101010100010010011010110010100111000100011100\n01101110111001\n", "output": ["0 3 6 9 13 17 21 25 29 33 37 41 46 51 56 61 66 72 80 89 100 114 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "247 209\n1100000000001001111000110111111000100101100001011101111100011011110011101101010001101101001011000011011001110100010000111010011010110111110110000000101000111100011100000110110101010011001000111100011101111100101111100111001100010101100101001101000\n01101011000111100110101000001111110001100010001001000111001101011001001011110100111110011100010000001111000101001111100011101101000001011010100010001011010011110101111010010000000111010000100011001001010000010\n", "output": ["0 93 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 1\n110011001111010000110001010101001011100100000001001011111010110110110111111110100000011100101000000011101010101100111111000110000110101101110100011011010011011000110010001010000111101100011001100000001101110100111101000010001101111011001011111001001101110111001101101010011010010000010001001001110111\n0\n", "output": ["149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151\n"]}, {"input": "246 18\n110111101111011001110110001000011101100010111001011011010011100010010000100011111000101111001110011001110010100010110011111000010100111011001111101111000000011110000010011001001110111011110111011010011101101010011100111010001111110000111100001001\n000000010110110010\n", "output": ["0 3 8 13 18 23 29 35 42 49 56 63 71 83 103 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 30\n111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000\n111111100111110111000100011000\n", "output": ["0 1 2 3 4 5 6 7 8 9 10 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 8\n111111001011010110101011100011100010010100100100000000101001011011011100110100111011100111101101010010101111111110000101101011010010011010011000111001010010101011110001001001010110110001001011101101111111110111111110110101110010010010001001101111010101001100111111101011100001000111110000101001101001\n10100001\n", "output": ["0 1 2 3 4 5 6 7 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 43 46 49 52 55 58 61 65 69 73 77 81 86 91 96 101 108 132 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001100010000100001000010000100001000010000100001000010000\n01010001100110010001\n", "output": ["0 7 14 22 29 37 44 52 59 67 74 82 89 97 104 112 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n000101110010111101001101000001000000000000010011100111100010111001010000100111000100101001110010001001101111100111100110000000010011111110011101010110011111011011111110110011001101010111011011111110111111010011101000001110101010010100100111110110001001111100001011011001010001010110010110110110000000\n11110111111111111111\n", "output": ["0 3 7 12 17 23 30 37 44 51 58 66 73 81 89 98 109 120 135 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "191 63\n11000001001111101100110001001001101000011001010010000011001100101001101111100111001111111101011001000110111000110100000100110101011011011011101000100110010001001101011011101111000011100011110\n001011111010001011010001100001011110100001001100110010101010011\n", "output": ["0 22 48 88 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "9 3\n100101011\n111\n", "output": ["0 1 1 3 2 3 5 4\n"]}, {"input": "383 106\n00111001001000111101111001010110011011011110011011101101110000100010000001011010100010011011101100001110001100010011010101111000100100100100011001011111110111110000011111001010100010010010000111010101011110011000000001111100101010111000101001010010011010001110100101100111010000101000101000111101000101000000101001111110100000110001111001101011101100110100011110101101000000101010011\n1110010000101000000000000011110100111010000001111111011101010100110010100001110010110000001101000110000011\n", "output": ["0 37 82 128 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010010010010000010\n", "output": ["0 4 9 14 19 25 30 36 42 48 55 62 69 77 84 92 100 109 119 134 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010111100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00111101100111001010\n", "output": ["0 3 6 9 12 15 19 25 31 37 43 49 61 77 95 118 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "191 63\n11000000001111101100110001001001101000011001010010000001001100101001101011100111001111111101011001000110111000110100000100110101011011011011101000100110010001001101011011101111000011100011110\n001011111010001011010001100001011110100001001100110010101010011\n", "output": ["0 22 48 91 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 10\n110100100111010010011101001001110100100111010010011101001001110100100111011010011101001001110100100111010010011101001001110100100111010010011001001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011100001001\n1101001001\n", "output": ["27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 46 89 134 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n000011001010111110001010111000110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 2 4 6 8 10 12 14 17 20 23 26 29 32 35 38 41 44 47 51 55 59 64 70 77 84 93 123 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100010111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n11111011110111000001\n", "output": ["0 1 2 3 4 5 6 7 8 9 10 11 12 14 16 18 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100010000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n01111011110111000001\n", "output": ["0 2 4 6 8 10 12 14 16 18 20 22 24 26 29 33 97 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111110001110011110010111101000110111\n00111101101\n", "output": ["0 1 2 3 5 7 9 11 13 15 17 19 22 25 28 31 34 38 42 46 50 54 59 65 73 81 93 131 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111000110100100111001010001001010010000000100111000001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111110001110011110010111101000110111\n00100100101\n", "output": ["0 1 3 5 7 9 11 14 17 20 23 26 29 32 36 40 44 48 52 56 60 65 70 76 82 90 101 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "262 14\n1101101101001010011111001111101110001101010001110010000001010111011010000000110101110100010100000110101000011101100011000110011111001001110001101001000110101111001000001100100110110000001101010001100111101111101010101101010100010010011010110010100111000100011100\n01101110111001\n", "output": ["0 3 6 10 14 18 22 26 30 34 38 42 47 52 57 62 67 73 81 90 100 115 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "247 209\n1100000000001001111000110111111000100101100001011101111100011011110011101101010001101101001011000011011001110100010000111010011010110111110110000000101000111100011100000110110101010011001000111100011101111100101111100111001100010101100101001101000\n01101011000111100110101000001111110001100010001001000111001101011001001011110100111110011100010000001111000101001111100011101101000001011010100010001011010011110101011010010000000111010000100011001001010000010\n", "output": ["0 94 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 1\n110011001111010000110001010101001011100100000001001011111010110110110101111110100000011100101000000011101010101100111111000110000110101101110100011011010011011000110010001010000111101100011001100000001101110100111101000010001101111011001011111001001101110111001101101010011010010000010001001001110111\n0\n", "output": ["150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150\n"]}, {"input": "246 18\n110111101111011001110110001000011101100010111001011011010011100010010000100011111000101111001110011001110010100010110011111000010100111011001111101111000000011110000010011001001110111011110111011010011101101010011100111010001111110000111100001001\n000000010110100010\n", "output": ["0 2 6 10 15 21 27 33 40 47 54 62 71 81 108 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 30\n111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111000101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000\n111111100111110111000100011000\n", "output": ["0 1 2 3 4 5 6 7 8 9 11 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 8\n111111001011010110101011100011100010010100100100000000101001010011011100110100111011100111101101010010101111111110000101101011010010011010011000111001010010101011110001001001010110110001001011101101111111110111111110110101110010010010001001101111010101001100111111101011100001000111110000101001101001\n10100001\n", "output": ["0 1 2 3 4 5 6 7 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 43 46 49 52 55 58 61 65 69 73 77 81 85 90 95 100 107 131 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "9 3\n100101011\n110\n", "output": ["0 1 2 5 -1 -1 -1 -1\n"]}, {"input": "383 106\n00111001001000111101111001010110011011011110011011101101110000100010000001011010100010011011101100001110001100010011010101111000100100100100011001011111110111110000011111001010100010010010000111010101011110011000000001111100101010111000101001010010011010001110100101100111010000101000101000111101000101000000101001111110100000110001111001101011101100110100011110101101000000101010011\n1110010000101000000000000011110100111010000001111111011101010100110010100001110010110000001101000111000011\n", "output": ["0 37 81 126 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010000010010000010\n", "output": ["0 5 8 12 17 20 25 29 32 37 40 45 49 53 57 61 65 69 74 78 82 86 89 94 98 103 107 110 115 120 127 132 149 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010111100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n10111101100111001010\n", "output": ["0 4 8 12 16 20 25 30 35 40 45 50 57 69 83 97 123 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "191 63\n11000000101111101100110001001001101000011001010010000001001100101001101011100111001111111101011001000110111000110100000100110101011011011011101000100110010001001101011011101111000011100011110\n001011111010001011010001100001011110100001001100110010101010011\n", "output": ["0 22 47 90 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n000011001010111110001010111000110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111110001110011110010111101000110111\n10110101101\n", "output": ["0 1 3 4 5 7 9 10 12 13 15 17 18 20 21 23 25 26 28 30 32 34 35 37 39 41 43 45 47 49 51 52 54 56 58 60 62 64 67 68 70 73 75 77 80 82 85 87 89 92 95 99 102 106 110 116 123 131 135 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "262 14\n1101101101001010011111001111101110001101010001110010000001010111011010000000110101110100010100000110101000011101100011000110011111001001110001101001000110101111001000001100100110110000001101010001100111101111101010101101010100010010011010110010100111000100011100\n01101110111011\n", "output": ["0 3 7 11 14 18 22 26 30 34 38 42 46 50 54 59 64 69 74 79 85 95 106 117 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 30\n111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111000101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011001111111100101110111000100011000\n111111100111110111000100011000\n", "output": ["0 1 2 3 4 5 6 7 8 10 12 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "9 3\n100101011\n011\n", "output": ["1 0 1 5 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010001010010000010\n", "output": ["0 4 9 14 19 25 31 37 43 49 55 61 68 74 81 88 96 104 113 124 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010001010010000000\n", "output": ["0 4 9 14 20 26 32 38 45 52 59 66 73 80 88 96 105 126 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 9\n101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010\n101010001\n", "output": ["0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "383 106\n00111001001000111101111001010110011011011110011011101101110000100010000001011010100010011011101100001110001100010011010101111000100100100100011001011111110111110000011111001010100010010010000111010101011110011000000001111100101010111000101001010010011010001110100101100111010000101000101000111101000101000000101001111110100000110001111001101011101100110100011110101101000000101010011\n1110010000101000000000001011110100111010000011111111011101010100110110100001110010110000001101000110000011\n", "output": ["0 36 80 127 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010101000011000001000101101011110001010100110110101100010010000110111011110010110011111010001010011110110101111100110010000010001010010001101011101100010111001110010001000100100001101011111011010101101000101001111110111010110111011000111101011110111000011100000000111001101110110000110101101010100010\n11111011010\n", "output": ["1 0 1 3 5 7 9 11 13 15 17 19 22 25 28 31 34 38 42 46 51 56 63 70 79 89 101 133 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 10\n110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001\n1101001101\n", "output": ["0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 39 41 50 52 61 63 72 74 83 85 94 96 105 107 116 118 127 129 138 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001010101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010010010000010010\n", "output": ["0 5 10 15 20 25 30 35 41 46 51 56 62 67 72 78 83 89 95 101 107 114 120 127 138 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00110001100111001010\n", "output": ["0 3 6 9 12 15 18 24 30 36 42 48 60 76 94 112 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n11101011110011000001\n", "output": ["0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010000010010010010\n", "output": ["0 5 10 16 21 27 33 39 45 51 57 63 70 77 84 92 100 108 120 133 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000110100010111100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00111001100111001010\n", "output": ["0 4 8 12 16 20 25 32 39 46 53 61 72 83 98 113 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 8\n111111001011010110101011100011100010010100100100000000101001011011011100110100111011100111101101010010101111111110000101101011010010011010011000111001010010101011100001001001010110110001001011101101111111110111111110110101110010010010001001101111010101001100111111101011100001000111110000101001101001\n00101001\n", "output": ["4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 55 57 60 62 65 67 70 73 76 78 81 84 87 90 94 99 109 114 127 143 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "191 63\n11000000001111101100110001001001101000011001010010000011001100101001101011100111000111111101011001000110111000110100000100110101011011011011101000100110010001001101011011101111000011100011110\n001011111010001011010001100001011110100001001100110010101010011\n", "output": ["0 23 47 91 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000111111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n11111011110011000001\n", "output": ["12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 10\n110100100111010010011101001001110100100111010010011101001001110100100111011010011101001001110100100111010010011101001001110100100111010010011001001001110100110111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001\n1101001001\n", "output": ["27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 44 87 132 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n01111010110111000001\n", "output": ["0 3 6 9 12 15 18 21 24 27 30 33 36 39 43 47 106 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101110010101101111101111010001111101000001101111100011110110001110001110010110111110110011011010011001000001010010010001000111001010111110001110011110010111101000110111\n00111101101\n", "output": ["0 1 2 3 5 7 9 11 13 15 17 19 22 25 28 31 35 39 43 47 51 55 60 66 72 80 92 131 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "383 106\n00111001001000111101111001010110011010011110011011101101110000100010000001011010100010011011101100001110001100010011010101111000100100100100011001011111110111110000011111001010100010010010000111010101011110011000000001111100101010111000101001010010011010001110100101100111010000101000101000111101000101000000101001111110100000110001111001101011101100110100011110101101000000101010011\n1110010000100000000000000011110100111010000011111111011101010100110110100001110010110000001101000110000011\n", "output": ["0 36 78 128 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "96 38\n100010000100011000011010101001010110000111110001100001100001111110001000111111001110101101101000\n11011110100011001111111101000001000001\n", "output": ["0 13 29 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001100010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001100010000100001000010000100001000010000100001000010000\n01010001100110010001\n", "output": ["0 7 14 21 28 36 43 51 58 66 73 81 88 96 103 111 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n000101110010111101001101000001000000000000010011100111100010111001010000100111000100101001110010001001101111100111100110000000010011111110011101010110011111011011111110110011001101010111011011111110111111010011101000001110101010010100100111110110001001111100001011011001000001010110010110110110000000\n11110111111111111111\n", "output": ["0 3 7 12 17 23 30 37 44 52 59 67 74 82 90 99 110 121 136 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101001011110000100100010111100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00111101100111001010\n", "output": ["0 3 6 9 12 15 19 24 30 36 42 48 60 78 96 118 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100010000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n01111011110101000001\n", "output": ["0 3 6 9 12 15 18 21 24 27 30 33 36 39 42 46 105 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "262 14\n1101101101001010011111001111101110001101010001110010000001010111011010000000110101110100010100000110101000011101100011000110011111001001110001101001000110101111001000001100100110110000001101010001100111101111101010101101010100010010011010110010100111000100011100\n00101110111001\n", "output": ["0 2 4 7 10 13 16 19 22 26 29 33 37 41 46 51 56 61 66 71 77 86 100 118 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 1\n110011001111010000110001010101001011100100000001001011111010010110110101111110100000011100101000000011101010101100111111000110000110101101110100011011010011011000110010001010000111101100011001100000001101110100111101000010001101111011001011111001001101110111001101101010011010010000010001001001110111\n0\n", "output": ["151 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149\n"]}, {"input": "9 3\n100101010\n110\n", "output": ["0 1 2 4 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110001010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010000010010000010\n", "output": ["0 5 8 12 17 20 25 29 32 37 40 45 49 53 56 61 65 68 73 77 81 85 88 93 97 102 106 109 114 119 126 131 148 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010111100011011010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n10111101100111001010\n", "output": ["0 4 8 12 16 20 25 30 35 40 45 51 58 70 84 98 124 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 30\n111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111000101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011001111111100101110111000100011000\n111101100111110111000100011000\n", "output": ["0 2 4 6 8 10 12 14 16 19 22 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "9 3\n100101011\n010\n", "output": ["1 1 0 1 3 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010001010010000110\n", "output": ["0 4 9 14 19 24 30 36 42 48 54 61 68 77 86 99 115 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010001000010000000\n", "output": ["0 3 8 13 18 23 29 35 42 49 57 65 73 82 90 99 109 127 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 9\n101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010\n100010001\n", "output": ["0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010101000011000001000101101011110001010100110110101100010010000110111011110010110011111010001010011110110101111100110010000010001010010001101011101100010111001110010001000100100001101011111011010101101000101001111110111010110111011000111101011110111000011100000000111001101111110000110101101010100010\n11111011010\n", "output": ["1 0 1 3 5 7 9 11 13 15 17 20 23 26 29 32 35 39 43 47 52 57 63 70 79 89 101 132 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 10\n110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001\n1101000101\n", "output": ["0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 87 114 141 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 1\n111110110110001010001110101100010011101110110111011101111000001100100010101011100101100111100001010010011101010111000001000110010101100111011101101010000100000101010011110111011010001101110000110010001101101001101111011100111001100110101111111110100110000110001101000010111011100010000110111000101011\n1\n", "output": ["158 157 156 155 154 153 152 151 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001010101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010010010100010010\n", "output": ["0 4 9 14 18 22 27 32 37 42 47 52 57 62 68 73 79 84 90 96 102 110 116 126 141 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00110001101111001010\n", "output": ["0 4 8 12 16 20 24 29 34 39 44 49 60 73 88 105 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000110100010111100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001010101011000110010101001011010110100001\n00111001100111001010\n", "output": ["0 4 8 12 16 21 26 33 40 47 54 62 73 84 99 114 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "191 63\n11000000001111101100110001001001101000011001010010000011001100101001101011100111000111111101011001000110111000110101000100110101011011011011101000100110010001001101011011101111000011100011110\n001011111010001011010001100001011110100001001100110010101010011\n", "output": ["0 23 46 92 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110001011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n01111010110111000001\n", "output": ["0 3 6 9 12 15 18 21 24 27 30 33 36 40 44 48 107 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000101101101000000111111101011101101110010101101111101111010001111101000001101111100011110110001110001110010110111110110011011010011001000001010010010001000111001010111110001110011110010111101000110111\n00111101101\n", "output": ["0 1 2 3 4 6 8 10 12 14 16 18 21 24 27 30 34 38 42 46 50 54 59 65 71 79 91 130 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "383 106\n00111001001000111101111001010110011010011110011011101101110000100010000001011010100010011011101100001110001100010011010101111000100100100100011001011111110111110000011111001010100010010010000111010101011110011000000001111100101010111000101001010010011010001110100101100111010000101000101000111101000101000000101001111110100000110001111001101011101100110100011110101101000000101010011\n1110010000100100000000000011110100111010000011111111011101010100110110100001110010110000001101000110000011\n", "output": ["0 35 78 125 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101001011110000100100010111100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00111101100111001011\n", "output": ["0 4 8 12 16 20 25 31 38 45 52 59 72 88 111 166 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "262 14\n1101101101001010011111001111101110001101010101110010000001010111011010000000110101110100010100000110101000011101100011000110011111001001110001101001000110101111001000001100100110110000001101010001100111101111101010101101010100010010011010110010100111000100011100\n00101110111001\n", "output": ["0 2 4 6 9 12 15 18 21 25 28 32 36 40 45 50 55 60 65 70 76 85 99 117 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "9 3\n100101010\n100\n", "output": ["1 0 1 3 -1 -1 -1 -1\n"]}, {"input": "9 3\n000101011\n010\n", "output": ["1 1 0 1 2 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010011000010000000\n", "output": ["0 2 6 11 17 23 29 35 41 48 55 62 69 76 85 96 108 121 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 9\n101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100010101010\n100010001\n", "output": ["0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010101000011000001000101101011110001010100110110101100010010000110111011110010110011111010001010011110110101111100110010000010001010010001101011101100010111001110010001000100100001101011111011010101101000101001111110111010110111011000111101011110111000011100000000111001101111110000110101101010100010\n11111001010\n", "output": ["0 1 2 4 6 8 10 12 14 16 18 21 24 27 30 33 36 40 44 48 52 56 61 67 76 86 99 134 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 1\n111110110110001010001110101100010011101110110111011101111000001100100010101011100101100111100001010010011101010111000001000110010101100111011101101010000100000101010011110111011010001101110000110010001101101001101111011100111001100110101111110110100110000110001101000010111011100010000110111000101011\n1\n", "output": ["157 156 155 154 153 152 151 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110100101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00110001101111001010\n", "output": ["0 4 8 12 16 20 24 29 34 39 44 50 61 74 88 106 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000110100010111100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000101100001001010101011000110010101001011010110100001\n00111001100111001010\n", "output": ["0 4 8 12 16 21 26 33 40 47 54 62 73 84 99 115 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000101101101000000111111101011101101110010101101111101111010001111101000001101111100011110110001110001110010110111110110011011010011001000001010010010001000111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 1 3 5 7 9 11 13 15 18 21 24 27 30 33 36 39 42 46 50 54 59 64 69 76 84 93 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "9 3\n000101011\n110\n", "output": ["0 1 3 6 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011111001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010011000010000000\n", "output": ["0 2 6 10 16 22 28 34 40 47 54 61 68 75 84 95 107 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110000100101010010110100101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00110001101111001010\n", "output": ["0 4 8 12 16 20 25 30 35 40 45 51 62 75 88 107 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000101101101000000111111101011101101110010101101111101111010001111101000001101111100011110110001110001110010110111110110011011010011001000001011010010001000111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 1 3 5 7 9 11 13 15 17 20 23 26 29 32 35 38 41 45 49 53 58 63 68 75 83 92 121 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011111001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010111000010000000\n", "output": ["0 3 6 9 14 20 26 32 38 45 51 58 65 73 81 90 102 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010101100011001010000101101011010000111100001001000101011000110010101001011010110100001111000010010001010110000100101010010110100101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00110001101111001010\n", "output": ["0 4 8 12 16 20 25 30 35 40 45 51 62 75 88 106 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000101101101000000111111101011101101110010101101111101111010001111101000001101111100011110110001110001110010110111110110011011010011001000001011010010001000111001010111110001110011110010111101000110111\n00110101001\n", "output": ["0 1 3 5 7 9 11 13 16 18 21 23 26 29 32 35 38 41 44 47 50 53 57 60 63 67 70 74 78 82 86 91 96 101 109 119 130 150 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010101100011001010000101101011010000111100001001000101011000110010101001011010110100001111000010010001010110000100101010010110100101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00010001101111001010\n", "output": ["0 3 6 9 12 15 19 24 30 36 42 48 58 71 86 106 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n100000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011111001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010111000010000010\n", "output": ["0 4 8 12 18 24 30 36 42 48 54 61 67 74 81 88 96 104 112 126 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "45 30\n000101011011111101011110100101100000111001000\n001100101001111111000101111110\n", "output": ["0 12 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "383 106\n00111001001000111101111001010110011011011110011011101101110000100010000001011010100010011011101100001110001100010011010101111000100100100100011001011111110111110000011111001010100010010010000111010101011110011000000001111100101010111000101001010010011010001110100101100111010000101000101000111101000101000000101001111110100000110001111001101011101100110100011110101101100000101010011\n1110010000101000000000000011110100111010000011111111011101010100110110100001110010110000001101000110000011\n", "output": ["0 37 80 128 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n10111011110011000001\n", "output": ["0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010101000011000001000101101011110001010100110110101100010010000110111011110010110011111010001010011110110101111100110010000010001010010001101011101100010111001110010001000100100001101011111011010101101000101001111110101010110111011000111101011110111000011100000000111001101110110000110101101010100010\n11011011010\n", "output": ["0 1 2 4 6 8 10 12 14 17 20 23 26 29 32 35 38 41 45 49 53 57 61 68 75 86 98 132 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 1\n111111110110001010001110101100010011101110110111011101111000001100100010101011100101100111100001010010011101010111000001000110010101100111011101101010000100000101010011110111011010001101110000110010001101101001101111011100111001100110101111111110110110000110001101000010111011100010000110111000101011\n0\n", "output": ["140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160\n"]}, {"input": "300 11\n010011001010111110001010101000110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111010001110011110010111101000110111\n00100100101\n", "output": ["0 1 2 4 6 8 10 13 16 19 22 25 28 31 35 39 43 47 51 55 59 64 69 74 80 88 102 123 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 24\n100000010101111000000101001111101110101011101000110011100001011000101100100001111001110011111100000010101100000100011111101111111010011100000101100110110001110010111001110001010110110110001111100111001001011001011111010111101101000010101000000001111010110011000110001000111011110000110100011100010010\n111000111000101000111000\n", "output": ["0 5 10 16 23 30 37 44 52 60 68 77 87 96 107 121 138 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 1\n110011001111010000110001010101001011100100000001001011111010110110110111111110100000011100101000000011101010101100111111000110000110101101110100011011010011011000110010001010000111101100011001100000001101110100111101000010001101111011001011111001001101110111001101101010111010010000010001001001110111\n1\n", "output": ["152 151 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148\n"]}, {"input": "246 18\n110111101111011001110110001000011101100010111001011011010011100010010000100011111000101111001110011001110010100010110011111000010100111011001111101111000000011110000010011001001110111011110111011010011101101010011100111010001111110000111100001001\n000000000110110011\n", "output": ["0 3 6 9 13 18 24 31 38 45 53 61 70 95 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 30\n111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101010111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000\n111111100101110111000100011000\n", "output": ["9 8 7 6 5 4 3 2 1 0 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 8\n111111001011010110101011100011100010010100100100000000101001011011011100110100111011100111101101010010101111111110000101101011010010011010011000111001010010101011110001001001010110110001001011101101111111110111111110110101110010010010001001101111010101001100111111101011100001000111110000101001101001\n10111001\n", "output": ["3 2 1 0 1 2 3 4 5 6 7 8 9 11 12 14 16 18 20 22 24 26 28 30 32 34 36 39 41 44 47 50 53 56 60 65 70 76 82 89 96 107 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 8\n111111001011010110101011100011100010010100100100000000101001011011011100110100111011100111101101010010101111111110000101101011010010011010011000111001010010101011110001001001010110110001001011101101111111110111111110110101110010010010001001101111010101001100111111101011100001000111110000101001101001\n00101101\n", "output": ["3 2 1 0 1 2 3 4 5 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 37 40 43 46 49 53 57 61 66 72 78 85 94 111 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "191 63\n11000000001111101100110001001001101000011001010010000011001100101001101011100111001111111101011001000110111000110100000100110101011011011011101000100110010001001101011011101111000011100011110\n001010111010001011010001100001011110100001001100110010101010011\n", "output": ["0 24 49 91 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000011111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n11111011110011000001\n", "output": ["13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010101000110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 2 4 6 8 10 12 14 17 20 23 26 29 32 35 38 41 44 48 52 56 60 65 72 79 86 95 125 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n01101011110111100001\n", "output": ["0 4 8 12 16 20 24 28 32 36 40 44 48 52 57 62 110 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001000010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011010010011001000001010010010001000111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 1 3 5 7 9 11 13 16 19 22 25 28 31 34 37 40 43 46 50 54 59 64 71 78 85 93 125 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010101000011000001000101101011110001010100110110101100010010000110111011110010110011111010001010011110110101111100110010000010001010010001101011101100010111001110010001000100100001101011111011010101101000101001111111111010110111011000111101011110111000011100000000111001101110110000110101101010100000\n11011011010\n", "output": ["0 1 2 4 6 8 10 12 14 16 19 22 25 28 31 34 37 40 44 48 52 56 60 67 74 84 96 131 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111000110100100111001010001001010010000000100111000001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001001001010010010001000111001010111010001110011110010111101000110111\n00100100101\n", "output": ["1 0 2 4 6 8 10 13 16 19 22 25 28 31 35 39 43 47 51 55 59 64 69 74 80 88 99 120 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "247 209\n1100000000001001111000110111111000100101100001011101111100011011110011101101010001101101001011000011011001110100010000111010011010110111110110000000101000111100011100000110110101010011001000111100011101111100101111100111001100010101100101001101000\n01101011000111100110101000011111110001100010001001000111001101011001001011110100111110011100010000001111000101001111100011101101000001011010100010001011010011110101111010010000000111010000100011001001010000010\n", "output": ["0 92 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "246 18\n110111101111011001110110001000011101100010111001011011010011100010010000100011111000101111001110011001110010100010110011111100010100111011001111101111000000011110000010011001001110111011110111011010011101101010011100111010001111110000111100001001\n000000010110110010\n", "output": ["0 3 8 13 18 23 29 35 42 49 56 63 71 82 103 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n000101110010111101001101000001000000000000010011100111100010111001010000100111000100101001110010001001101111100111100110000000010111111110011101010110011111011011111110110011001101010111011011111110111111010011101000001110101010010100100111110110001001111100001011011001010001010110010110110110000000\n11110111111111111111\n", "output": ["0 3 7 12 17 23 30 37 44 51 58 65 72 80 88 97 108 119 134 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "9 3\n101101011\n011\n", "output": ["2 1 0 4 -1 -1 -1 -1\n"]}, {"input": "383 106\n00111001001000111101111001010110011011011110011011101101110000100010000011011010100010011011101100001110001100010011010101111000100100100100011001011111110111110000011111001010100010010010000111010101011110011000000001111100101010111000101001010010011010001110100101100111010000101000101000111101000101000000101001111110100000110001111001101011101100110100011110101101000000101010011\n1110010000101000000000000011110100111010000001111111011101010100110010100001110010110000001101000110000011\n", "output": ["0 37 81 127 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001001101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010010010010000010\n", "output": ["0 4 9 14 19 24 29 35 41 47 54 61 68 76 84 92 101 110 120 135 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010111100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000001110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00111101100111001010\n", "output": ["0 3 6 9 12 15 19 24 30 36 42 48 60 76 95 117 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 10\n110100100111010010011101001001110100100111010010011101001001110100100111011010011101001001110100100111010010011101001001110100100111010010011001001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011100001001\n1001001001\n", "output": ["1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 33 35 37 38 39 41 43 45 47 49 50 51 53 55 57 59 61 62 63 65 67 69 71 73 74 75 77 79 81 83 85 86 87 89 91 93 95 97 98 99 101 103 105 107 109 110 111 113 115 117 119 121 122 123 125 127 129 131 133 135 136 137 140 141 145 147 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "262 14\n1101101101001010001111001111101110001101010001110010000001010111011010000000110101110100010100000110101000011101100011000110011111001001110001101001000110101111001000001100100110110000001101010001100111101111101010101101010100010010011010110010100111000100011100\n01101110111001\n", "output": ["0 3 6 10 14 18 22 26 30 34 38 42 46 51 56 61 66 72 80 89 99 116 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "9 3\n110101011\n110\n", "output": ["1 0 1 4 -1 -1 -1 -1\n"]}, {"input": "191 63\n11000000101111101100110001001000101000011001010010000001001100101001101011100111001111111101011001000110111000110100000100110101011011011011101000100110010001001101011011101111000011100011110\n001011111010001011010001100001011110100001001100110010101010011\n", "output": ["0 22 46 90 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n000011001010111110001010111000110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111110001110011110010111101000110111\n10110100101\n", "output": ["0 2 3 5 7 9 11 13 16 18 21 23 26 29 31 34 37 40 42 45 48 51 54 57 60 63 66 69 72 75 78 81 86 90 97 108 125 144 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "262 14\n1101101101001010011111001111101110001101010001110010000001010111011010000000110101110100010100000110101000011101100011000110011011001001110001101001000110101111001000001100100110110000001101010001100111101111101010101101010100010010011010110010100111000100011100\n01101110111011\n", "output": ["0 3 6 10 14 17 21 25 29 33 37 41 45 49 53 58 63 68 73 78 84 94 105 116 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "9 3\n000101011\n000\n", "output": ["1 0 1 1 3 2 3 4\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011011010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010001010010000010\n", "output": ["0 4 9 14 19 25 31 37 43 49 55 62 68 75 82 89 96 103 112 125 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010101000011000001000101101011110001010100110110101100010010000110111011110010110011111010001010011110110101111100110010000010001010010001101011101100010111001110010001000100100001101010111011010101101000101001111110111010110111011000111101011110111000011100000000111001101110110000110101101010100010\n11111011010\n", "output": ["0 1 2 4 6 8 10 12 14 16 18 20 23 26 29 32 35 39 43 47 52 57 64 71 80 90 102 134 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 10\n110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100101111010010011101001001110100100111010010011101001001\n1101001101\n", "output": ["0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 31 38 40 49 51 60 62 71 73 82 84 93 95 104 106 115 117 126 128 137 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100110010101100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00110001100111001010\n", "output": ["0 3 6 9 12 15 19 25 31 37 43 49 61 77 94 112 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000101001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000\n01010001110110010001\n", "output": ["0 8 16 25 33 41 50 58 67 75 83 92 100 109 117 125 134 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n01101011110011000001\n", "output": ["0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 31 103 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110010011100110110101011110011001100110100010111001100110001100000001000000\n0010000010010010010\n", "output": ["0 5 10 16 22 28 34 40 46 52 58 64 71 78 85 93 101 109 121 134 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "191 63\n11000000001111101100010001001001101000011001010010000011001100101001101011100111000111111101011001000110111000110100000100110101011011011011101000100110010001001101011011101111000011100011110\n001011111010001011010001100001011110100001001100110010101010011\n", "output": ["0 24 48 90 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000111111101111001100000111111011110011000001111110111100111000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n11111011110011000001\n", "output": ["11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000111111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n01111010110111000001\n", "output": ["0 3 6 9 12 15 18 21 24 27 30 33 36 40 44 48 105 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "383 106\n00111001001000111101111001010110011010011110011011101101110000100010000001011010110010011011101100001110001100010011010101111000100100100100011001011111110111110000011111001010100010010010000111010101011110011000000001111100101010111000101001010010011010001110100101100111010000101000101000111101000101000000101001111110100000110001111001101011101100110100011110101101000000101010011\n1110010000100000000000000011110100111010000011111111011101010100110110100001110010110000001101000110000011\n", "output": ["0 36 77 128 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001100010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001100010000100001000010000100001000010000100001000010000\n01010001100010010001\n", "output": ["0 6 12 19 25 32 38 45 52 58 65 72 78 85 92 100 111 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "262 14\n1101101101001010011111001111101110001101010001110010000001010111011010000000110101110100010100000110101000011101100011000110011111001001110001101001000110101111001000001100100110110000001101010001100111101111101010101101010100010010011010110010100111000100001100\n00101110111001\n", "output": ["0 2 4 7 10 13 16 19 22 26 29 33 37 41 46 51 56 61 66 71 77 86 99 119 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000100100010111100011011010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n10110101100111001010\n", "output": ["0 3 6 9 12 15 19 23 27 31 35 40 46 59 74 89 120 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "9 3\n100101010\n010\n", "output": ["2 1 1 0 2 -1 -1 -1\n"]}, {"input": "300 9\n101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010\n100010000\n", "output": ["0 3 6 9 12 15 18 21 24 27 30 33 36 39 42 45 48 51 54 57 60 63 66 69 72 75 78 81 84 87 90 108 126 144 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 10\n110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001110100100111010010011101001001\n1101010101\n", "output": ["0 3 6 9 12 15 18 21 24 27 30 33 36 39 42 45 48 51 54 57 60 63 66 69 72 75 78 81 84 87 90 108 126 144 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000110100010111100011001010100101101011010000111100001001000101011000110010101001011010100100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001010101011000110010101001011010110100001\n00111001100111001010\n", "output": ["0 4 8 12 16 21 26 33 40 47 55 63 74 85 98 113 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000101101101000000111111101011101101110010101101111101111010001111101000001101111100011110110001110001110010110111110110011011010011001000001010010010001000111001010111110001110011110010111101000110111\n00111001101\n", "output": ["0 1 2 4 6 8 10 12 14 17 20 23 26 29 32 35 38 41 45 49 53 57 62 67 75 85 96 121 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101001011110000100100010111100011001010100101101011010000111100001001000101011000110010101001011010110100001111100010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00111101100111001011\n", "output": ["0 4 8 12 16 20 25 31 38 45 52 60 73 89 110 165 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n000000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011110001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n1010011000010000000\n", "output": ["0 3 6 11 16 22 28 34 40 47 55 63 71 80 93 111 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101101000011110000110100010111100011001010100101101011010000111100001001000101011000110010101001011010110100001111000010010001010110001100101010010110101101000011110000100100010101100011001010100101101011010000101100001001010101011000110010101001011010110100001\n01111001100111001010\n", "output": ["0 4 9 14 19 24 29 36 43 50 57 65 74 84 98 116 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010000000100111001001001111011100101100011000101101101000000111111101011101101110010101101111101111010001111101000001101111100011110110001110001110010110111110110011011010011001000001010010010001010111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 1 3 5 7 9 11 13 15 18 21 24 27 30 33 36 39 42 46 50 54 58 63 68 75 83 94 121 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001001010010100000100111001001001111011100101100011000101101101000000111111101011101101110010101101111101111010001111101000001101111100011110110001110001110010110111110110011011010011001000001011010010001000111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 1 3 5 7 9 11 13 15 17 20 23 26 29 32 35 38 41 45 49 53 58 63 68 75 84 93 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111000010010001010110001100101010010110101100000011110000100100010101100011001010000101101011010000111100001001000101011000110010101001011010110100001111000010010001010110000100101010010110100101000011110000100100010101100011001010100101101011010000111100001001000101011000110010101001011010110100001\n00110001101111001010\n", "output": ["0 4 8 12 16 20 24 29 34 39 44 50 61 74 88 107 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n100000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011111001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n1010111000010000000\n", "output": ["0 2 6 10 15 20 25 30 36 42 49 56 65 77 89 108 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 19\n100000111111111001000010010111011101000111000010001000101110001011110111111010001110101010110011010100011110000001110001101101111101010001100010010110011111001010000001101011100111001110110101001110011001010111011101000001100110110011100110110101011110011001100110100010111001100110001100000001000000\n0010111000010100010\n", "output": ["0 5 10 15 20 25 30 36 41 47 52 58 64 71 78 85 92 100 108 121 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011011101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n10111011110011000001\n", "output": ["1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 1\n111111110110001010001110101100010011101110110111011101111000001100100010101011100101100111100001010010011101010111000001000110010101100111011101101010000100000101010011110111011010001101110000110010001101101001101111011100111001100110101111111110110110000110001101000010111011100010000110111000101011\n1\n", "output": ["160 159 158 157 156 155 154 153 152 151 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140\n"]}, {"input": "300 11\n010011001010111110001010101000110100100111001010001001010010000000100110001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111010001110011110010111101000110111\n00100100101\n", "output": ["0 1 2 4 6 8 10 13 16 19 22 25 28 31 35 39 43 47 51 55 59 64 69 74 79 87 101 122 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 24\n100000010101111000000101001111101110101011101000110011100001011000101100100001111001110011111100000010101100000100011111101111111010011100000101100110110001110010111001110001010110110110001111100111001001011001011111010111101101000010101000000001111010110011000110001000111011110000110100011100010010\n111100111000101000111000\n", "output": ["0 6 12 18 24 31 38 46 54 63 73 90 116 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 1\n110011001111010000110001010101001011100100000001001011111010110110110111111110110000011100101000000011101010101100111111000110000110101101110100011011010011011000110010001010000111101100011001100000001101110100111101000010001101111011001011111001001101110111001101101010111010010000010001001001110111\n1\n", "output": ["153 152 151 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147\n"]}, {"input": "300 30\n111111100001110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101010111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000111111100101110111000100011000\n111111100101110111000100011000\n", "output": ["8 7 6 5 4 3 2 1 0 1 2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 8\n111111001011010110101011100011100010010100101100000000101001011011011100110100111011100111101101010010101111111110000101101011010010011010011000111001010010101011110001001001010110110001001011101101111111110111111110110101110010010010001001101111010101001100111111101011100001000111110000101001101001\n10111001\n", "output": ["3 2 1 0 1 2 3 4 5 6 7 8 9 11 12 14 16 18 20 22 24 26 28 30 32 34 36 38 41 43 46 49 52 55 59 64 69 75 81 88 95 106 121 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 8\n111111001011010110101011100011100010010100100100000000101001011011011100110100111011100111101101010010101111111110000101101011010010011010011000111001010010101011110001001001010110110001001011101101111101110111111110110101110010010010001001101111010101001100111111101011100001000111110000101001101001\n00101001\n", "output": ["4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 58 60 62 64 67 69 72 75 78 80 83 86 89 93 98 109 116 129 144 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "191 63\n11000000001111101100110001001001101000011001010010000011001100101001101011100111001111111101011001000110111000110100000100110101011011011011101000100110010001001101011011101111000011100011110\n001010111010001011010001100001011110100001101100110010101010011\n", "output": ["0 23 47 92 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n111110111100110000011111101111001100000111110011110011000011111110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001101110111100110000011111101111001100000111111011110011000001111110111100110000011111101111001100000111111011110011000001\n11111011110010000001\n", "output": ["0 1 2 3 4 5 6 7 8 9 10 11 12 13 15 18 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010101000110100100111001010001001010010000000100111001001001111011100101100011000001101101000000111111101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011000010011001000001010010010001000111001010111110001110011110010111101000110111\n00110001101\n", "output": ["0 2 4 6 8 10 12 14 17 20 23 26 29 32 35 38 41 45 49 53 57 62 67 73 80 88 98 118 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 11\n010011001010111110001010111010110100100111001010001000010010000000100111001001001111011100101100011000001101101000000111110101011101101111010101101111101111010001111101000001101111100011110110001110001110010110111110110011010010011001000001010010010001000111001010111110001110011110010111101000110111\n00110101101\n", "output": ["0 1 3 5 7 9 11 14 17 20 23 26 29 32 35 38 41 44 47 51 55 60 65 70 77 84 92 124 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "246 18\n110111101111011001110110001000011101100010111001011011010011100010010000100011111000101111001110011001110010100010110011111100010100111011001111101111000000011110000010011001001110111011110111011010011101101010011100111010001111110000111100001001\n000000010100110010\n", "output": ["0 4 8 13 18 23 29 35 41 48 56 64 73 84 103 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001010010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001100010000100001000010000100001000010000100001000010000\n01010001100111010001\n", "output": ["0 6 12 19 26 33 40 47 54 61 68 75 82 89 97 108 128 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "300 20\n000101110010111101001101000001000000000000010011100111100010111001010000100111001100101001110010001001101111100111100110000000010111111110011101010110011111011011111110110011001101010111011011111110111111010011101000001110101010010100100111110110001001111100001011011001010001010110010110110110000000\n11110111111111111111\n", "output": ["0 3 7 12 17 23 30 37 44 51 58 65 72 80 88 96 107 118 133 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"]}, {"input": "9 3\n101101011\n111\n", "output": ["0 2 1 3 2 2 4 3\n"]}], "source_codes": ["\nfn min_changes(n: usize, m: usize, a: Vec<char>, b: Vec<char>) -> Vec<i32> {\n    let mut dp = vec![vec![std::i32::MAX; n - m + 2]; n];\n    \n    for i in 0..n {\n        for k in 0..n - m + 1 {\n            if k == 0 {\n                dp[i][k] = dp[i-1][k] + if a[i] != b[0] { 1 } else { 0 };\n            } else {\n                dp[i][k] = std::cmp::min(dp[i-1][k] + if a[i] != b[k % m] { 1 } else { 0 }, if i >= m { dp[i-m][k-1] } else { std::i32::MAX });\n            }\n        }\n    }\n    \n    let result: Vec<i32> = (0..n - m + 2).flat_map(|k| (0..n).map(|i| if dp[i][k] != std::i32::MAX { dp[i][k] } else { -1 })).collect();\n    \n    result\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut input_iter = input_line.split_whitespace();\n    let n: usize = input_iter.next().unwrap().parse().unwrap();\n    let m: usize = input_iter.next().unwrap().parse().unwrap();\n    \n    let mut a = String::new();\n    std::io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<char> = a.trim().chars().collect();\n    \n    let mut b = String::new();\n    std::io::stdin().read_line(&mut b).unwrap();\n    let b: Vec<char> = b.trim().chars().collect();\n    \n    let output = min_changes(n, m, a, b);\n    println!(\"{}\", output.iter().map(|&x| x.to_string()).collect::<Vec<String>>().join(\" \"));\n}\n\n\n"], "responses": ["\nfn min_changes(n: usize, m: usize, a: Vec<char>, b: Vec<char>) -> Vec<i32> {\n    let mut dp = vec![vec![std::i32::MAX; n - m + 2]; n];\n    \n    for i in 0..n {\n        for k in 0..n - m + 1 {\n            if k == 0 {\n                dp[i][k] = dp[i-1][k] + if a[i] != b[0] { 1 } else { 0 };\n            } else {\n                dp[i][k] = std::cmp::min(dp[i-1][k] + if a[i] != b[k % m] { 1 } else { 0 }, if i >= m { dp[i-m][k-1] } else { std::i32::MAX });\n            }\n        }\n    }\n    \n    let result: Vec<i32> = (0..n - m + 2).flat_map(|k| (0..n).map(|i| if dp[i][k] != std::i32::MAX { dp[i][k] } else { -1 })).collect();\n    \n    result\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut input_iter = input_line.split_whitespace();\n    let n: usize = input_iter.next().unwrap().parse().unwrap();\n    let m: usize = input_iter.next().unwrap().parse().unwrap();\n    \n    let mut a = String::new();\n    std::io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<char> = a.trim().chars().collect();\n    \n    let mut b = String::new();\n    std::io::stdin().read_line(&mut b).unwrap();\n    let b: Vec<char> = b.trim().chars().collect();\n    \n    let output = min_changes(n, m, a, b);\n    println!(\"{}\", output.iter().map(|&x| x.to_string()).collect::<Vec<String>>().join(\" \"));\n}\n\n\n"], "prompt_tokens": [61192], "completion_tokens": [14272], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1575}
{"name": "1575_I. Illusions of the Desert", "description": "Chanek Jones is back, helping his long-lost relative Indiana Jones, to find a secret treasure in a maze buried below a desert full of illusions.\n\nThe map of the labyrinth forms a tree with n rooms numbered from 1 to n and n - 1 tunnels connecting them such that it is possible to travel between each pair of rooms through several tunnels.\n\nThe i-th room (1 \u2264 i \u2264 n) has a_i illusion rate. To go from the x-th room to the y-th room, there must exist a tunnel between x and y, and it takes max(|a_x + a_y|, |a_x - a_y|) energy. |z| denotes the absolute value of z.\n\nTo prevent grave robbers, the maze can change the illusion rate of any room in it. Chanek and Indiana would ask q queries.\n\nThere are two types of queries to be done:\n\n  * 1\\ u\\ c \u2014 The illusion rate of the x-th room is changed to c (1 \u2264 u \u2264 n, 0 \u2264 |c| \u2264 10^9). \n  * 2\\ u\\ v \u2014 Chanek and Indiana ask you the minimum sum of energy needed to take the secret treasure at room v if they are initially at room u (1 \u2264 u, v \u2264 n). \n\n\n\nHelp them, so you can get a portion of the treasure!\n\nInput\n\nThe first line contains two integers n and q (2 \u2264 n \u2264 10^5, 1 \u2264 q \u2264 10^5) \u2014 the number of rooms in the maze and the number of queries.\n\nThe second line contains n integers a_1, a_2, \u2026, a_n (0 \u2264 |a_i| \u2264 10^9) \u2014 inital illusion rate of each room.\n\nThe i-th of the next n-1 lines contains two integers s_i and t_i (1 \u2264 s_i, t_i \u2264 n), meaning there is a tunnel connecting s_i-th room and t_i-th room. The given edges form a tree.\n\nThe next q lines contain the query as described. The given queries are valid.\n\nOutput\n\nFor each type 2 query, output a line containing an integer \u2014 the minimum sum of energy needed for Chanek and Indiana to take the secret treasure.\n\nExample\n\nInput\n\n\n6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 2\n2 3 3\n\n\nOutput\n\n\n39\n32\n0\n\nNote\n\n<image>\n\nIn the first query, their movement from the 1-st to the 2-nd room is as follows.\n\n  * 1 \u2192 5 \u2014 takes max(|10 + 4|, |10 - 4|) = 14 energy. \n  * 5 \u2192 6 \u2014 takes max(|4 + (-6)|, |4 - (-6)|) = 10 energy. \n  * 6 \u2192 2 \u2014 takes max(|-6 + (-9)|, |-6 - (-9)|) = 15 energy. \n\nIn total, it takes 39 energy.\n\nIn the second query, the illusion rate of the 1-st room changes from 10 to -3.\n\nIn the third query, their movement from the 1-st to the 2-nd room is as follows.\n\n  * 1 \u2192 5 \u2014 takes max(|-3 + 4|, |-3 - 4|) = 7 energy. \n  * 5 \u2192 6 \u2014 takes max(|4 + (-6)|, |4 - (-6)|) = 10 energy. \n  * 6 \u2192 2 \u2014 takes max(|-6 + (-9)|, |-6 - (-9)|) = 15 energy. \n\n\n\nNow, it takes 32 energy.", "tags": ["data structures", "trees"], "difficulty": 15, "id": 1575, "sample_io": [{"input": "6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["39\n32\n0\n"]}], "test_list": [{"input": "2 1\n-1000000000 1000000000\n2 1\n2 1 2\n", "output": ["2000000000\n"]}, {"input": "4 4\n2 -1000 100 3\n2 1\n3 2\n4 1\n2 1 3\n2 2 2\n1 1 -1000000000\n2 1 4\n", "output": ["2102\n0\n1000000003\n"]}, {"input": "6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["19\n32\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["9\n32\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["9\n30\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 4\n2 3 3\n", "output": ["9\n12\n0\n"]}, {"input": "6 3\n0 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 4\n2 3 3\n", "output": ["9\n12\n"]}, {"input": "2 1\n-1000000000 1010000000\n2 1\n2 1 2\n", "output": ["2010000000\n"]}, {"input": "4 4\n2 -1000 100 3\n2 1\n3 2\n4 2\n2 1 3\n2 2 2\n1 1 -1000000000\n2 1 4\n", "output": ["2102\n0\n1000002003\n"]}, {"input": "6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 2 -3\n2 1 2\n2 3 3\n", "output": ["39\n33\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 2\n", "output": ["9\n32\n23\n"]}, {"input": "6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n1 1 2\n1 2 -3\n2 1 2\n2 3 3\n", "output": ["25\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 5 2\n", "output": ["9\n32\n25\n"]}, {"input": "6 4\n0 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 3 3\n", "output": ["9\n0\n0\n"]}, {"input": "6 4\n10 -9 2 -1 2 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 2 -3\n2 1 2\n2 3 3\n", "output": ["35\n29\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n1 3 2\n", "output": ["9\n32\n"]}, {"input": "6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n1 1 2\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["31\n0\n"]}, {"input": "6 4\n0 -9 2 -1 1 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 5 2\n", "output": ["3\n26\n22\n"]}, {"input": "6 4\n0 -9 4 -1 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["17\n40\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -9\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["9\n38\n0\n"]}, {"input": "6 4\n10 -9 2 -1 2 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 2 -3\n2 1 2\n2 3 3\n", "output": ["0\n29\n0\n"]}, {"input": "6 4\n0 -9 4 -1 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 3 3\n", "output": ["17\n0\n0\n"]}, {"input": "6 4\n0 -9 4 0 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 3 3\n", "output": ["16\n0\n0\n"]}, {"input": "6 4\n0 -3 2 -1 2 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 2 -3\n2 1 2\n2 3 3\n", "output": ["0\n19\n0\n"]}, {"input": "6 4\n0 -9 4 0 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["16\n0\n25\n"]}, {"input": "6 4\n0 -3 2 -1 2 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["0\n22\n0\n"]}, {"input": "6 4\n0 -9 4 0 8 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["16\n0\n13\n"]}, {"input": "6 4\n0 -3 2 -1 2 -12\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["0\n34\n0\n"]}, {"input": "6 4\n0 -9 4 0 14 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["28\n0\n13\n"]}, {"input": "6 4\n0 -3 2 -1 2 -12\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 1 -3\n2 1 4\n2 3 3\n", "output": ["0\n8\n0\n"]}, {"input": "6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["39\n25\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -4\n2 1 4\n2 3 3\n", "output": ["9\n13\n0\n"]}, {"input": "6 3\n0 -9 2 0 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 4\n2 2 3\n", "output": ["8\n11\n"]}, {"input": "4 4\n2 -1000 100 3\n2 1\n3 2\n4 2\n2 2 3\n2 2 2\n1 1 -1000000000\n2 1 4\n", "output": ["1100\n0\n1000002003\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n4 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 5 2\n", "output": ["9\n22\n15\n"]}, {"input": "6 3\n0 -17 2 -1 4 -5\n1 4\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 4\n2 3 3\n", "output": ["1\n4\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n6 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n1 3 2\n", "output": ["21\n32\n"]}, {"input": "6 4\n0 -9 0 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 6 3\n", "output": ["9\n30\n5\n"]}, {"input": "6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n1 2 2\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["32\n0\n"]}, {"input": "6 4\n0 -9 2 -1 1 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 0\n2 1 2\n2 5 2\n", "output": ["3\n23\n22\n"]}, {"input": "6 4\n0 -14 4 -1 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["17\n45\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -2\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["9\n24\n0\n"]}, {"input": "6 4\n0 -3 2 -1 2 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 2 -3\n2 1 2\n2 3 3\n", "output": ["0\n7\n0\n"]}, {"input": "6 4\n0 -9 4 0 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["37\n0\n25\n"]}, {"input": "6 4\n0 -3 2 -1 2 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["0\n21\n0\n"]}, {"input": "6 4\n0 -9 4 0 14 1\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["28\n0\n15\n"]}, {"input": "6 4\n10 -9 1 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n1 3 3\n", "output": ["19\n32\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n6 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 3 3\n", "output": ["21\n0\n0\n"]}, {"input": "4 4\n2 -1000 100 3\n4 1\n3 2\n4 2\n2 2 3\n2 2 2\n1 1 -1000000000\n2 1 4\n", "output": ["1100\n0\n1000000003\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n1 4\n5 6\n4 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 5 2\n", "output": ["1\n14\n21\n"]}, {"input": "6 4\n0 -9 2 -1 3 -6\n1 5\n6 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n1 3 2\n", "output": ["19\n30\n"]}, {"input": "6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n4 6\n6 2\n6 3\n1 2 2\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["38\n0\n"]}, {"input": "6 4\n0 -9 2 -1 1 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -1\n2 1 2\n2 5 2\n", "output": ["3\n24\n22\n"]}, {"input": "6 3\n0 0 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 1 4\n1 2 3\n", "output": ["19\n12\n"]}, {"input": "6 4\n0 -9 4 0 14 1\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 2 3\n", "output": ["28\n42\n15\n"]}, {"input": "6 4\n0 -3 2 -1 2 0\n1 5\n1 4\n5 6\n6 2\n6 3\n2 2 2\n1 1 -3\n2 1 4\n2 3 3\n", "output": ["0\n4\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n1 4\n5 6\n4 2\n6 3\n2 1 4\n1 2 -3\n2 1 2\n2 5 2\n", "output": ["1\n5\n9\n"]}, {"input": "6 4\n10 -9 2 -1 4 0\n1 5\n5 4\n4 6\n6 2\n6 3\n1 2 2\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["26\n0\n"]}, {"input": "6 4\n0 -3 2 -1 2 0\n1 5\n1 4\n5 6\n6 2\n6 3\n2 2 2\n1 1 -3\n2 1 5\n2 3 3\n", "output": ["0\n5\n0\n"]}, {"input": "6 4\n0 -3 2 -1 2 0\n1 5\n1 4\n5 6\n6 2\n6 3\n2 2 3\n1 1 -3\n2 1 5\n2 3 3\n", "output": ["5\n5\n0\n"]}, {"input": "2 1\n-1000000000 1000000010\n2 1\n2 1 2\n", "output": ["2000000010\n"]}, {"input": "6 4\n0 -9 2 -1 4 -1\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["9\n22\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 4\n2 4 3\n", "output": ["9\n12\n21\n"]}, {"input": "2 1\n-651044801 1010000000\n2 1\n2 1 2\n", "output": ["1661044801\n"]}, {"input": "6 4\n-1 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 3 3\n", "output": ["10\n0\n0\n"]}, {"input": "6 3\n0 -17 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -6\n2 1 4\n2 3 3\n", "output": ["9\n15\n"]}, {"input": "6 4\n10 -9 2 -1 2 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 3 -3\n2 1 2\n2 3 3\n", "output": ["35\n35\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -2\n2 1 2\n1 3 2\n", "output": ["9\n31\n"]}, {"input": "6 4\n0 -9 0 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["28\n30\n0\n"]}, {"input": "6 4\n10 -13 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n1 1 2\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["35\n0\n"]}, {"input": "6 4\n0 -9 2 -1 1 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 1\n1 1 -3\n2 1 2\n2 5 2\n", "output": ["0\n26\n22\n"]}, {"input": "6 4\n10 -3 2 -1 2 -9\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 2 -3\n2 1 2\n2 3 3\n", "output": ["0\n35\n0\n"]}, {"input": "6 4\n0 -9 2 0 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["16\n0\n23\n"]}, {"input": "6 4\n-1 -9 4 0 8 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["17\n0\n13\n"]}, {"input": "6 4\n0 -9 4 0 0 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["0\n0\n13\n"]}, {"input": "6 4\n10 -15 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["45\n25\n0\n"]}, {"input": "6 3\n0 -9 2 0 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -4\n2 1 4\n2 2 3\n", "output": ["8\n12\n"]}, {"input": "6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n1 4 2\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["39\n0\n"]}, {"input": "6 4\n0 -14 4 -1 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 2 -3\n2 1 2\n2 3 3\n", "output": ["17\n31\n0\n"]}, {"input": "6 4\n0 -3 2 -1 2 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 2 -3\n2 1 2\n2 3 5\n", "output": ["0\n7\n4\n"]}, {"input": "6 4\n0 -9 4 0 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 2 2\n2 3 3\n", "output": ["37\n0\n0\n"]}, {"input": "4 4\n2 -1000 110 3\n4 1\n3 2\n4 2\n2 2 3\n2 2 2\n1 1 -1000000000\n2 1 4\n", "output": ["1110\n0\n1000000003\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n1 4\n5 6\n4 2\n6 3\n2 2 4\n1 1 -3\n2 1 2\n2 5 2\n", "output": ["10\n14\n21\n"]}, {"input": "6 4\n0 -9 4 0 14 1\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -4\n2 1 2\n2 2 3\n", "output": ["28\n43\n15\n"]}, {"input": "6 4\n3 -9 2 -1 4 0\n1 5\n5 4\n4 6\n6 2\n6 3\n1 2 2\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["19\n0\n"]}, {"input": "2 1\n-651044801 1010000100\n2 1\n2 1 2\n", "output": ["1661044901\n"]}, {"input": "6 4\n0 -9 0 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 1 2\n2 3 5\n", "output": ["28\n30\n14\n"]}, {"input": "6 4\n0 -6 2 0 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["16\n0\n20\n"]}, {"input": "6 4\n0 -9 4 0 0 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["9\n0\n13\n"]}, {"input": "6 3\n10 -15 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["45\n25\n"]}, {"input": "6 3\n0 -9 2 0 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -4\n2 1 5\n2 2 3\n", "output": ["8\n8\n"]}, {"input": "6 4\n10 -9 2 -1 3 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n1 4 2\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["37\n0\n"]}, {"input": "4 4\n2 -1000 110 4\n4 1\n3 2\n4 2\n2 2 3\n2 2 2\n1 1 -1000000000\n2 1 4\n", "output": ["1110\n0\n1000000004\n"]}, {"input": "6 4\n0 -9 4 0 14 1\n1 5\n5 4\n5 6\n1 2\n6 3\n2 1 4\n1 1 -4\n2 1 2\n2 2 3\n", "output": ["28\n13\n51\n"]}, {"input": "6 4\n0 -9 0 0 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 1 2\n2 3 5\n", "output": ["27\n30\n14\n"]}, {"input": "6 3\n10 -21 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["51\n25\n"]}, {"input": "6 4\n0 -6 4 0 14 1\n1 5\n5 4\n5 6\n1 2\n6 3\n2 1 4\n1 1 -4\n2 1 2\n2 2 3\n", "output": ["28\n10\n48\n"]}, {"input": "6 3\n10 -21 2 -1 4 -9\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["57\n31\n"]}, {"input": "6 3\n10 -21 2 -1 4 -9\n1 5\n5 4\n5 6\n1 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["31\n31\n"]}, {"input": "6 3\n10 -21 2 -1 4 -9\n1 5\n5 4\n5 6\n1 2\n6 3\n2 1 2\n1 1 -3\n2 2 3\n2 3 3\n", "output": ["31\n55\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 6\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["21\n24\n0\n"]}, {"input": "6 3\n0 -9 2 -1 4 -5\n1 5\n2 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 4\n2 3 3\n", "output": ["37\n40\n"]}, {"input": "2 1\n-1000000000 1010001000\n2 1\n2 1 2\n", "output": ["2010001000\n"]}, {"input": "6 4\n0 -9 2 -1 4 -3\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 2\n", "output": ["9\n26\n17\n"]}, {"input": "6 4\n0 -9 3 -1 2 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["5\n26\n0\n"]}, {"input": "6 4\n1 -9 4 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["10\n32\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 4\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n1 3 2\n", "output": ["1\n34\n"]}, {"input": "6 4\n0 -9 4 -1 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["17\n35\n0\n"]}, {"input": "6 4\n-1 -9 2 -1 4 -9\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["10\n38\n0\n"]}, {"input": "6 4\n10 -3 2 -1 2 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 2 -3\n2 1 2\n2 3 6\n", "output": ["0\n29\n8\n"]}, {"input": "6 4\n0 -9 4 0 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 3 6\n", "output": ["16\n0\n10\n"]}, {"input": "6 3\n0 -9 4 0 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["16\n0\n"]}, {"input": "6 4\n0 -12 4 0 14 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["28\n0\n16\n"]}, {"input": "6 4\n0 -3 2 -1 2 -12\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 3\n1 1 -3\n2 1 4\n2 3 3\n", "output": ["29\n8\n0\n"]}, {"input": "6 4\n10 -9 4 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["39\n27\n0\n"]}, {"input": "6 4\n10 -9 1 -1 4 -6\n1 5\n2 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["49\n32\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 3 1\n", "output": ["9\n0\n25\n"]}, {"input": "6 4\n0 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -4\n2 1 4\n2 3 6\n", "output": ["9\n13\n7\n"]}, {"input": "6 4\n0 -9 2 -1 1 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 3\n1 1 0\n2 1 2\n2 5 2\n", "output": ["16\n23\n22\n"]}, {"input": "6 4\n0 -14 4 -1 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 1 3\n", "output": ["17\n45\n35\n"]}, {"input": "6 4\n0 -3 2 -1 3 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["0\n23\n0\n"]}, {"input": "6 4\n10 -9 1 -1 0 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n1 3 3\n", "output": ["11\n24\n"]}, {"input": "6 4\n10 -9 2 -1 6 -6\n1 5\n5 4\n4 6\n6 2\n6 3\n1 2 2\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["42\n0\n"]}, {"input": "6 4\n1 -9 2 -1 1 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -1\n2 1 2\n2 5 2\n", "output": ["4\n24\n22\n"]}, {"input": "6 4\n0 -9 4 0 14 1\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 1 2\n2 2 3\n", "output": ["39\n42\n15\n"]}, {"input": "6 4\n0 -3 2 -1 2 0\n1 5\n1 4\n5 6\n6 2\n6 3\n2 2 2\n1 1 -3\n2 1 4\n2 4 3\n", "output": ["0\n4\n13\n"]}, {"input": "6 4\n0 -3 2 -1 2 0\n1 5\n1 4\n5 6\n6 2\n6 3\n2 2 2\n1 1 -3\n2 1 5\n2 3 6\n", "output": ["0\n5\n2\n"]}, {"input": "6 4\n0 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -4\n2 1 4\n2 4 3\n", "output": ["9\n13\n21\n"]}, {"input": "6 4\n10 -9 2 -1 0 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 3 -3\n2 1 2\n2 3 3\n", "output": ["31\n31\n0\n"]}, {"input": "6 4\n0 -9 0 -1 4 -5\n1 6\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["28\n22\n0\n"]}, {"input": "6 4\n10 -25 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n1 1 2\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["47\n0\n"]}, {"input": "6 4\n10 -3 2 -1 2 -9\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["0\n28\n0\n"]}, {"input": "6 4\n0 -9 2 0 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["37\n0\n23\n"]}, {"input": "6 4\n0 -9 4 1 0 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["1\n0\n13\n"]}, {"input": "6 4\n0 -9 3 0 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -4\n2 1 4\n2 3 3\n", "output": ["8\n12\n0\n"]}, {"input": "6 4\n0 -14 4 -1 8 -3\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 2 -3\n2 1 2\n2 3 3\n", "output": ["17\n25\n0\n"]}, {"input": "6 4\n0 -3 2 -1 2 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 2 -3\n2 1 2\n2 1 5\n", "output": ["0\n7\n2\n"]}, {"input": "4 4\n2 -1350 110 3\n4 1\n3 2\n4 2\n2 2 3\n2 2 2\n1 1 -1000000000\n2 1 4\n", "output": ["1460\n0\n1000000003\n"]}, {"input": "6 4\n0 -9 2 -1 7 -6\n1 5\n1 4\n5 6\n4 2\n6 3\n2 2 4\n1 1 -3\n2 1 2\n2 5 2\n", "output": ["10\n14\n24\n"]}, {"input": "6 4\n0 -9 4 0 14 1\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 2 -4\n2 1 2\n2 2 3\n", "output": ["28\n34\n10\n"]}, {"input": "6 3\n0 -17 2 -1 4 -5\n1 5\n3 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -6\n2 1 4\n1 3 3\n", "output": ["23\n29\n"]}, {"input": "6 4\n0 -9 4 0 0 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 4 2\n2 2 3\n", "output": ["9\n9\n13\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n5 2\n2 3\n2 1 4\n1 1 -3\n2 1 2\n2 5 2\n", "output": ["9\n20\n13\n"]}, {"input": "6 4\n3 -2 2 -1 4 0\n1 5\n5 4\n4 6\n6 2\n6 3\n1 2 4\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["21\n0\n"]}, {"input": "6 3\n0 -17 2 -1 4 -9\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 3\n1 1 -6\n2 1 4\n1 3 3\n", "output": ["28\n15\n"]}, {"input": "6 4\n0 -8 0 0 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 1 2\n2 3 5\n", "output": ["26\n29\n14\n"]}, {"input": "6 3\n10 -21 2 -1 4 -6\n1 5\n5 4\n5 2\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["39\n67\n"]}, {"input": "6 4\n10 -9 2 -1 3 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n1 3 2\n1 4 -3\n2 1 2\n2 4 3\n", "output": ["37\n23\n"]}, {"input": "6 4\n0 -6 4 0 14 1\n1 6\n5 4\n5 6\n1 2\n6 3\n2 1 4\n1 1 -4\n2 1 2\n2 2 3\n", "output": ["30\n10\n20\n"]}, {"input": "6 3\n0 -17 2 -1 4 -9\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -6\n2 2 4\n1 2 3\n", "output": ["9\n44\n"]}, {"input": "6 3\n10 -21 2 -1 4 -9\n1 4\n5 4\n5 6\n1 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["31\n33\n"]}, {"input": "6 3\n10 -21 2 -1 8 -9\n1 5\n5 4\n5 6\n1 2\n6 3\n2 1 2\n1 1 -3\n2 2 3\n2 3 3\n", "output": ["31\n63\n"]}, {"input": "6 3\n0 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 5\n0 2 3\n", "output": ["9\n7\n"]}, {"input": "6 4\n0 -9 3 -1 2 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 6\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["9\n26\n0\n"]}, {"input": "6 4\n1 -9 4 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -6\n2 1 2\n2 3 3\n", "output": ["10\n35\n0\n"]}, {"input": "6 4\n10 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n1 1 2\n1 4 -4\n2 1 2\n1 3 3\n", "output": ["31\n"]}, {"input": "6 4\n-1 -9 2 -1 0 -9\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["2\n30\n0\n"]}, {"input": "6 4\n10 -3 2 -1 2 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 3 -3\n2 1 2\n2 3 6\n", "output": ["0\n29\n9\n"]}, {"input": "6 4\n0 -9 4 0 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 6\n", "output": ["16\n0\n15\n"]}, {"input": "6 3\n0 -9 4 0 8 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 1\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["0\n0\n"]}, {"input": "6 4\n4 -9 4 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["33\n27\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 3 2\n2 3 1\n", "output": ["9\n23\n25\n"]}, {"input": "6 4\n0 -1 2 -1 1 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 3\n1 1 0\n2 1 2\n2 5 2\n", "output": ["16\n15\n14\n"]}, {"input": "6 4\n19 -9 1 -1 0 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n1 3 3\n", "output": ["20\n24\n"]}, {"input": "6 4\n0 -9 2 0 14 1\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 1 2\n2 2 3\n", "output": ["39\n42\n13\n"]}, {"input": "6 4\n0 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -4\n2 1 4\n2 5 3\n", "output": ["9\n13\n16\n"]}, {"input": "6 4\n-1 -9 2 0 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 5\n1 1 -3\n2 2 2\n2 3 3\n", "output": ["5\n0\n0\n"]}, {"input": "6 4\n10 -25 2 -1 4 -11\n1 5\n5 4\n5 6\n6 2\n6 3\n1 1 2\n1 4 -3\n2 1 2\n2 3 3\n", "output": ["57\n0\n"]}, {"input": "6 4\n0 -9 2 0 8 -4\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["33\n0\n19\n"]}, {"input": "6 4\n0 -9 4 1 -1 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["3\n0\n13\n"]}, {"input": "4 4\n2 -2609 110 3\n4 1\n3 2\n4 2\n2 2 3\n2 2 2\n1 1 -1000000000\n2 1 4\n", "output": ["2719\n0\n1000000003\n"]}, {"input": "6 4\n0 -9 3 -1 2 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 6\n1 1 -3\n2 1 2\n2 3 5\n", "output": ["9\n26\n15\n"]}, {"input": "6 4\n13 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n1 1 2\n1 3 -3\n2 1 2\n2 2 3\n", "output": ["31\n24\n"]}, {"input": "6 4\n1 -9 4 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -6\n2 1 2\n2 2 3\n", "output": ["10\n35\n25\n"]}, {"input": "6 4\n-1 -9 2 -1 0 -9\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 3\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["21\n30\n0\n"]}, {"input": "6 4\n10 -3 2 -1 2 -6\n1 4\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 3 -3\n2 1 2\n2 3 6\n", "output": ["0\n31\n9\n"]}, {"input": "6 4\n4 -9 4 -1 4 -6\n1 2\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["13\n37\n0\n"]}, {"input": "6 4\n1 -1 2 -1 1 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 3\n1 1 0\n2 1 2\n2 5 2\n", "output": ["17\n15\n14\n"]}, {"input": "6 4\n0 -10 3 0 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 3\n1 1 -4\n2 1 4\n2 3 3\n", "output": ["21\n12\n0\n"]}, {"input": "6 4\n0 -17 2 -1 4 -16\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 3\n1 1 -6\n2 1 4\n1 3 3\n", "output": ["42\n15\n"]}, {"input": "6 4\n10 -9 2 -1 3 -1\n1 5\n5 4\n5 6\n6 2\n6 3\n1 3 2\n1 4 -3\n2 1 2\n2 4 4\n", "output": ["27\n0\n"]}, {"input": "6 4\n-1 -9 2 -1 0 -9\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 3\n1 1 -3\n2 1 2\n2 3 5\n", "output": ["21\n30\n20\n"]}, {"input": "6 3\n0 -7 4 -1 10 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["21\n42\n"]}, {"input": "6 4\n4 -9 4 -1 4 -6\n1 2\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -2\n2 1 3\n2 3 3\n", "output": ["13\n36\n0\n"]}, {"input": "6 4\n19 -3 1 -1 0 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n1 1 3\n", "output": ["20\n18\n"]}, {"input": "6 4\n0 -10 3 0 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 3\n1 1 -4\n2 1 4\n2 1 3\n", "output": ["21\n12\n25\n"]}, {"input": "6 4\n10 -9 2 -1 3 -1\n1 5\n5 4\n5 6\n6 2\n6 3\n2 3 2\n1 4 -3\n2 1 2\n2 4 4\n", "output": ["13\n27\n0\n"]}, {"input": "6 3\n0 -7 4 -1 10 -3\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["21\n36\n"]}, {"input": "6 4\n0 -16 2 -1 4 -23\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 3\n1 1 -6\n2 1 4\n1 3 3\n", "output": ["56\n15\n"]}, {"input": "6 4\n10 -9 2 -1 3 -1\n1 5\n5 4\n5 6\n6 2\n6 3\n2 3 2\n1 4 -3\n2 2 2\n2 4 4\n", "output": ["13\n0\n0\n"]}, {"input": "6 4\n10 -9 2 -1 3 -1\n1 5\n5 4\n5 6\n6 2\n6 3\n2 3 2\n1 4 -3\n1 2 2\n2 4 4\n", "output": ["13\n0\n"]}, {"input": "4 4\n3 -1000 100 3\n2 1\n3 2\n4 1\n2 1 3\n2 2 2\n1 1 -1000000000\n2 1 4\n", "output": ["2103\n0\n1000000003\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 4\n2 3 2\n", "output": ["9\n12\n23\n"]}, {"input": "6 3\n0 -5 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n1 1 4\n2 2 3\n", "output": ["9\n"]}, {"input": "6 4\n10 -9 2 -1 2 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 2 -5\n2 1 2\n2 3 3\n", "output": ["0\n31\n0\n"]}, {"input": "6 4\n0 -9 4 0 11 0\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 2 3\n", "output": ["22\n0\n13\n"]}, {"input": "6 4\n0 -3 2 -1 2 -12\n1 5\n5 4\n5 6\n6 2\n6 3\n2 2 2\n1 1 -5\n2 1 2\n2 3 3\n", "output": ["0\n36\n0\n"]}, {"input": "6 4\n10 -1 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 2\n1 1 -3\n2 1 3\n2 3 3\n", "output": ["31\n25\n0\n"]}, {"input": "6 4\n0 -9 2 -1 4 -6\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 2 2\n2 3 4\n", "output": ["9\n0\n23\n"]}, {"input": "6 4\n0 -9 2 -1 4 -5\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 5\n1 1 -4\n2 1 4\n2 3 3\n", "output": ["4\n13\n0\n"]}, {"input": "4 4\n2 -1000 100 3\n2 1\n3 2\n4 2\n2 2 3\n2 2 2\n1 2 -1000000000\n2 1 4\n", "output": ["1100\n0\n2000000005\n"]}, {"input": "6 4\n0 -4 2 -1 4 -2\n1 5\n5 4\n5 6\n6 2\n6 3\n2 1 4\n1 1 -3\n2 1 2\n2 3 3\n", "output": ["9\n19\n0\n"]}], "source_codes": ["\nuse std::collections::HashMap;\n\nfn calculate_energy(a: &Vec<i32>, x: usize, y: usize) -> i32 {\n    a[x].abs().max(a[y].abs()).max((a[x] + a[y]).abs())\n}\n\nfn update_room(a: &mut Vec<i32>, u: usize, c: i32) {\n    a[u] = c;\n}\n\nfn dfs(adj_list: &HashMap<usize, Vec<usize>>, a: &Vec<i32>, u: usize, v: usize, visited: &mut Vec<bool>) -> i32 {\n    if u == v {\n        return 0;\n    }\n    visited[u] = true;\n    let mut min_energy = i32::MAX;\n    for &neighbor in adj_list[&u].iter() {\n        if !visited[neighbor] {\n            let energy = calculate_energy(a, u, neighbor) + dfs(adj_list, a, neighbor, v, visited);\n            min_energy = min_energy.min(energy);\n        }\n    }\n    visited[u] = false;\n    min_energy\n}\n\nfn solve_maze(n: usize, q: usize, a: &mut Vec<i32>, edges: &Vec<(usize, usize)>, queries: &Vec<Vec<i32>>) {\n    let mut adj_list: HashMap<usize, Vec<usize>> = HashMap::new();\n    for edge in edges {\n        adj_list.entry(edge.0).or_insert(Vec::new()).push(edge.1);\n        adj_list.entry(edge.1).or_insert(Vec::new()).push(edge.0);\n    }\n    \n    for query in queries {\n        if query[0] == 1 {\n            update_room(a, query[1] as usize, query[2]);\n        } else if query[0] == 2 {\n            let mut visited = vec![false; n + 1];\n            let result = dfs(&adj_list, a, query[1] as usize, query[2] as usize, &mut visited);\n            println!(\"{}\", result);\n        }\n    }\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut iter = input_line.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let q: usize = iter.next().unwrap().parse().unwrap();\n\n    input_line.clear();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let a: Vec<i32> = vec![0] + input_line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut edges: Vec<(usize, usize)> = Vec::new();\n    for _ in 0..n-1 {\n        input_line.clear();\n        std::io::stdin().read_line(&mut input_line).unwrap();\n        let edge: (usize, usize) = input_line.split_whitespace().map(|x| x.parse().unwrap()).next_tuple().unwrap();\n        edges.push(edge);\n    }\n\n    let mut queries: Vec<Vec<i32>> = Vec::new();\n    for _ in 0..q {\n        input_line.clear();\n        std::io::stdin().read_line(&mut input_line).unwrap();\n        let query: Vec<i32> = input_line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        queries.push(query);\n    }\n\n    solve_maze(n, q, &mut a, &edges, &queries);\n}\n\n\n"], "responses": ["\nuse std::collections::HashMap;\n\nfn calculate_energy(a: &Vec<i32>, x: usize, y: usize) -> i32 {\n    a[x].abs().max(a[y].abs()).max((a[x] + a[y]).abs())\n}\n\nfn update_room(a: &mut Vec<i32>, u: usize, c: i32) {\n    a[u] = c;\n}\n\nfn dfs(adj_list: &HashMap<usize, Vec<usize>>, a: &Vec<i32>, u: usize, v: usize, visited: &mut Vec<bool>) -> i32 {\n    if u == v {\n        return 0;\n    }\n    visited[u] = true;\n    let mut min_energy = i32::MAX;\n    for &neighbor in adj_list[&u].iter() {\n        if !visited[neighbor] {\n            let energy = calculate_energy(a, u, neighbor) + dfs(adj_list, a, neighbor, v, visited);\n            min_energy = min_energy.min(energy);\n        }\n    }\n    visited[u] = false;\n    min_energy\n}\n\nfn solve_maze(n: usize, q: usize, a: &mut Vec<i32>, edges: &Vec<(usize, usize)>, queries: &Vec<Vec<i32>>) {\n    let mut adj_list: HashMap<usize, Vec<usize>> = HashMap::new();\n    for edge in edges {\n        adj_list.entry(edge.0).or_insert(Vec::new()).push(edge.1);\n        adj_list.entry(edge.1).or_insert(Vec::new()).push(edge.0);\n    }\n    \n    for query in queries {\n        if query[0] == 1 {\n            update_room(a, query[1] as usize, query[2]);\n        } else if query[0] == 2 {\n            let mut visited = vec![false; n + 1];\n            let result = dfs(&adj_list, a, query[1] as usize, query[2] as usize, &mut visited);\n            println!(\"{}\", result);\n        }\n    }\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut iter = input_line.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let q: usize = iter.next().unwrap().parse().unwrap();\n\n    input_line.clear();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let a: Vec<i32> = vec![0] + input_line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut edges: Vec<(usize, usize)> = Vec::new();\n    for _ in 0..n-1 {\n        input_line.clear();\n        std::io::stdin().read_line(&mut input_line).unwrap();\n        let edge: (usize, usize) = input_line.split_whitespace().map(|x| x.parse().unwrap()).next_tuple().unwrap();\n        edges.push(edge);\n    }\n\n    let mut queries: Vec<Vec<i32>> = Vec::new();\n    for _ in 0..q {\n        input_line.clear();\n        std::io::stdin().read_line(&mut input_line).unwrap();\n        let query: Vec<i32> = input_line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        queries.push(query);\n    }\n\n    solve_maze(n, q, &mut a, &edges, &queries);\n}\n\n\n"], "prompt_tokens": [84055], "completion_tokens": [19445], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1575}
{"name": "1575_J. Jeopardy of Dropped Balls", "description": "Mr. Chanek has a new game called Dropping Balls. Initially, Mr. Chanek has a grid a of size n \u00d7 m\n\nEach cell (x,y) contains an integer a_{x,y} denoting the direction of how the ball will move.\n\n  * a_{x,y}=1 \u2014 the ball will move to the right (the next cell is (x, y + 1)); \n  * a_{x,y}=2 \u2014 the ball will move to the bottom (the next cell is (x + 1, y)); \n  * a_{x,y}=3 \u2014 the ball will move to the left (the next cell is (x, y - 1)). \n\n\n\nEvery time a ball leaves a cell (x,y), the integer a_{x,y} will change to 2. Mr. Chanek will drop k balls sequentially, each starting from the first row, and on the c_1, c_2, ..., c_k-th (1 \u2264 c_i \u2264 m) columns.\n\nDetermine in which column each ball will end up in (position of the ball after leaving the grid).\n\nInput\n\nThe first line contains three integers n, m, and k (1 \u2264 n, m \u2264 1000, 1 \u2264 k \u2264 10^5) \u2014 the size of the grid and the number of balls dropped by Mr. Chanek.\n\nThe i-th of the next n lines contains m integers a_{i,1},a_{i,2},\u2026,a_{i,m} (1 \u2264 a_{i,j} \u2264 3). It will satisfy a_{i, 1} \u2260 3 and a_{i, m} \u2260 1.\n\nThe next line contains k integers c_1, c_2, \u2026, c_k (1 \u2264 c_i \u2264 m) \u2014 the balls' column positions dropped by Mr. Chanek sequentially.\n\nOutput\n\nOutput k integers \u2014 the i-th integer denoting the column where the i-th ball will end.\n\nExamples\n\nInput\n\n\n5 5 3\n1 2 3 3 3\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n\n\nOutput\n\n\n2 2 1 \n\n\nInput\n\n\n1 2 2\n1 3\n1 2\n\n\nOutput\n\n\n1 2 \n\nNote\n\nIn the first example, the first ball will drop as follows. Note that the cell (1, 1) will change direction to the bottom direction.\n\n<image>\n\nThe second and third balls will drop as follows. \n\n<image>\n\nAll balls will be dropped from the first row and on the c_1, c_2, ..., c_k-th columns respectively. A ball will stop dropping once it leaves the grid.", "tags": ["binary search", "brute force", "dsu", "implementation"], "difficulty": 16, "id": 1575, "sample_io": [{"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 1 \n"]}, {"input": "1 2 2\n1 3\n1 2\n", "output": ["1 2 \n"]}], "test_list": [{"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n2 2 3 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "1 2 2\n2 3\n1 2\n", "output": ["1 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 1 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 4\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 3 2\n2 3 2 1 2\n1 2 1\n", "output": ["1 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n2 2 2 2 2\n2 2 3 2 2\n2 1 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["3 2 1\n"]}, {"input": "5 5 3\n2 2 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 1 1 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["4 2 2\n"]}, {"input": "5 5 3\n1 3 3 3 4\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 3 2\n2 3 2 1 2\n1 3 1\n", "output": ["1 2 1\n"]}, {"input": "5 5 3\n2 2 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 1 2 2 2\n2 1 2 2 3\n1 2 2\n", "output": ["3 3 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n2 2 2 2 2\n2 2 3 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n0 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 2 2 2 2\n2 2 2 4 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n2 2 2 2 2\n2 2 3 2 2\n2 2 2 2 2\n2 2 2 0 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 4 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n1 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 2 2 2 2\n2 2 2 4 2\n1 4 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 3 2 2\n1 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 2 2 2 2\n2 2 2 4 2\n1 4 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 3\n1 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 3 2 2\n2 2 2 3 3\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 3 4 2\n2 2 2 3 3\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 3 4 2\n3 2 2 3 3\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 3 4 2\n3 2 2 3 3\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 3 4 2\n3 2 2 3 3\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 4 4 2\n3 2 2 3 3\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 4 4 2\n3 2 2 3 0\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 5 3 3\n2 2 2 2 2\n2 2 3 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n1 2 3 2 2\n2 2 1 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 2 2 2 2\n2 2 3 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 1 3\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 4 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 4\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 3\n2 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 3 2 3\n1 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 4 2 2\n2 2 2 3 3\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 3 4 2\n2 2 2 3 3\n2 2 2 1 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 0 4 2\n3 2 2 3 3\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 3 4 2\n6 2 2 3 3\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 3 4 2\n3 2 2 3 3\n1 2 2 0 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 4 4 2\n3 2 0 3 3\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 1 2 3\n1 2 4 4 2\n3 2 2 3 0\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 5 3 3\n2 2 2 2 2\n2 2 6 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 1 2 2\n1 2 3 2 2\n2 2 1 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n2 2 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 1 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 1 2 2 2\n2 2 3 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 2\n1 2 3 2 2\n1 2 2 2 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 1 3\n2 2 2 2 2\n1 2 3 2 2\n3 2 2 4 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 0 2 3\n2 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 0 3\n1 2 3 4 2\n2 2 2 3 3\n2 2 2 1 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 4 4 3\n3 2 0 3 3\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 1 2 3\n1 2 4 4 2\n3 2 2 3 0\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 5 3 3\n2 2 2 2 2\n2 2 6 4 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n2 2 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 1 2 2 2\n2 2 2 2 3\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 4 1\n2 2 2 2 2\n1 2 3 2 2\n1 2 2 2 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 0\n2 2 2 0 3\n1 2 3 4 2\n2 2 2 3 3\n2 2 2 1 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 4 4 3\n3 2 0 3 3\n1 2 0 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 10 3 3\n2 2 2 2 2\n2 2 6 4 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n2 2 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 1 2 3 2\n2 2 2 2 3\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 4 1\n2 2 2 2 2\n1 2 3 2 2\n1 2 2 2 2\n2 2 4 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 4 4 3\n3 2 0 3 3\n1 2 0 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 4 1\n2 2 2 2 2\n1 2 3 2 2\n1 2 2 2 2\n1 2 4 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 4 4 3\n5 2 0 3 3\n1 2 0 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 4 1\n2 2 1 2 2\n1 2 3 2 2\n1 2 2 2 2\n1 2 4 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 4 4 3\n5 2 -1 3 3\n1 2 0 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 4 1\n2 2 1 2 2\n1 2 3 2 2\n1 2 2 2 2\n1 3 4 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n2 2 2 2 0\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n2 2 2 2 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n2 2 2 1 2\n1 3 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n0 2 3 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n2 2 2 2 2\n2 2 3 2 2\n2 2 2 3 2\n2 2 2 0 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 4 2\n2 1 2 1 2\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 3\n1 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 5 2 2\n1 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 3 2 2\n2 2 3 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 4 3\n1 2 3 4 2\n2 2 2 3 3\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 3 4 2\n3 2 2 3 3\n1 2 2 0 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 4 4 0\n3 2 2 3 0\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 5 3 3\n2 2 2 2 2\n2 2 3 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 0\n1 2 3 1 2\n2 1 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 1 3 2 3\n1 2 2 2 2\n2 2 3 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 1 3\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 4 2\n2 2 2 1 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 4\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 4 3 3\n2 2 2 2 3\n2 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 3 4 3\n1 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 1 3 4 2\n2 2 2 3 3\n2 2 2 1 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 3 4 1\n6 2 2 3 3\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 3 0 2\n3 2 2 3 3\n1 2 2 0 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 4 4 2\n3 2 0 3 3\n1 3 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 5 3 3\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 1 2 2 2\n2 2 3 2 2\n2 2 2 2 2\n2 1 2 2 2\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 2\n1 2 3 2 2\n0 2 2 2 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 0 3\n2 2 2 2 2\n1 2 3 2 2\n3 2 2 4 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 4\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 3 2\n2 3 2 1 2\n1 3 1\n", "output": ["1 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 0 2 3\n2 1 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 0\n2 2 2 0 3\n1 2 3 4 2\n2 2 0 3 3\n2 2 2 1 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 0\n1 2 4 4 3\n3 2 0 3 3\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 1 2 3\n1 2 4 4 2\n3 2 1 3 0\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 5 3 3\n2 2 2 2 2\n2 2 6 4 2\n2 2 2 2 2\n2 2 2 4 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n2 2 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 1 2 2 2\n2 2 2 2 3\n1 2 2\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 4 1\n2 2 2 4 2\n1 2 3 2 2\n1 2 2 2 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 0\n2 2 2 0 3\n1 2 3 4 2\n2 2 2 3 3\n2 2 2 0 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n2 2 3 3 3\n1 2 2 2 2\n1 2 3 0 2\n2 1 2 3 2\n2 2 2 2 3\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 4 1\n2 2 1 2 2\n1 2 3 2 2\n1 2 2 4 2\n1 2 4 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 4 0 3\n5 2 -1 3 3\n1 2 0 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 4 1\n2 2 1 2 2\n1 2 3 2 2\n1 2 2 2 3\n1 3 4 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 2\n1 2 3 2 2\n0 2 2 2 2\n2 2 2 2 0\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 6 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n2 2 2 2 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 2 2 4\n1 2 3 2 2\n2 2 2 2 2\n2 2 2 1 2\n1 3 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 2\n0 2 3 2 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n2 2 2 2 2\n2 2 3 2 2\n2 2 2 3 2\n2 2 2 0 3\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 4 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 3\n1 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 3 2\n2 2 5 2 2\n1 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n1 2 2 2 3\n1 2 3 2 2\n2 2 3 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 4 3\n1 2 3 4 2\n4 2 2 3 3\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 4 4 0\n6 2 2 3 0\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 5 3 3\n2 2 2 2 2\n2 2 3 2 4\n2 2 2 2 2\n2 2 2 2 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 2 3\n1 2 2 3 2\n2 2 3 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 2 1 3\n2 2 2 2 2\n1 2 3 2 2\n2 2 2 4 2\n2 2 2 1 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 4\n2 2 2 2 2\n2 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 4 3 3\n2 2 2 2 3\n2 2 3 2 2\n2 2 2 3 2\n2 2 2 0 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 3 4 3\n1 2 3 2 2\n2 2 0 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 2\n2 2 2 2 3\n1 1 3 4 2\n2 2 2 3 3\n2 2 2 1 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 3 0 2\n3 2 4 3 3\n1 2 2 0 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 4 4 2\n3 2 0 3 3\n1 3 2 1 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 5 3 3\n2 2 2 2 3\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 2 2 2 2\n2 2 3 2 2\n2 2 2 2 2\n2 1 2 2 2\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 2\n1 2 3 2 2\n0 2 2 2 2\n2 3 2 1 2\n1 2 1\n", "output": ["1 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 0 2 3\n2 1 3 2 1\n2 2 2 3 2\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 0\n2 3 2 0 3\n1 2 3 4 2\n2 2 0 3 3\n2 2 2 1 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 -1\n1 2 4 4 3\n3 2 0 3 3\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 1 5 1\n2 2 1 2 3\n1 2 4 4 2\n3 2 1 3 0\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 5 3 3\n2 2 2 2 2\n2 2 5 4 2\n2 2 2 2 2\n2 2 2 4 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 4 1\n2 2 1 1 2\n1 2 3 2 2\n1 2 2 4 2\n1 2 4 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 3\n1 2 4 0 3\n5 2 -1 3 3\n1 2 0 1 0\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 4 1\n2 2 1 2 2\n1 2 3 2 2\n1 2 2 2 6\n1 3 4 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 1\n1 2 3 2 2\n2 2 2 2 2\n0 2 3 2 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 3\n1 2 2 2 3\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 2 1\n2 2 2 4 3\n1 2 3 4 2\n4 2 2 3 3\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 4 3\n1 2 4 4 0\n6 2 2 3 0\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 4\n2 2 2 2 2\n2 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 2 3\n1 2 3 0 2\n3 2 4 3 3\n1 2 2 -1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 2 2 2 2\n2 2 3 2 2\n2 2 2 2 3\n2 1 2 2 2\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 1\n2 2 2 2 2\n1 2 3 2 2\n0 2 2 2 2\n2 3 2 1 4\n1 2 1\n", "output": ["1 2 2\n"]}, {"input": "5 5 3\n1 3 3 3 4\n2 2 0 2 2\n1 2 3 2 2\n2 2 2 3 2\n2 3 2 1 2\n1 3 1\n", "output": ["1 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 0 2 3\n2 1 3 2 1\n2 2 2 3 2\n2 2 2 1 2\n1 3 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 0\n2 3 2 0 3\n1 2 3 4 2\n2 2 1 3 3\n2 2 2 1 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 4 -1\n1 2 4 4 3\n3 2 0 3 3\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n2 1 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n2 1 2 2 2\n2 1 2 2 3\n1 2 2\n", "output": ["3 3 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 1\n1 2 3 2 2\n2 2 4 2 2\n0 2 3 2 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 3\n1 2 2 0 3\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 2 1\n2 2 2 4 3\n1 2 3 4 2\n2 2 2 3 3\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 0 3\n1 2 4 4 0\n6 2 2 3 0\n1 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 4\n2 2 2 2 1\n2 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 2 2 2 2\n2 2 3 2 2\n2 2 2 2 3\n3 1 2 2 2\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 2\n2 2 2 2 2\n1 2 3 2 2\n0 2 2 2 2\n2 3 2 1 4\n1 2 1\n", "output": ["1 2 2\n"]}, {"input": "5 5 3\n1 3 3 3 4\n2 2 0 2 2\n1 2 3 2 2\n2 2 2 3 2\n2 1 2 1 2\n1 3 1\n", "output": ["3 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 0 2 3\n2 1 3 2 1\n2 2 2 4 2\n2 2 2 1 2\n1 3 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 0\n2 3 2 0 4\n1 2 3 4 2\n2 2 1 3 3\n2 2 2 1 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n2 1 3 3 3\n1 2 2 2 2\n1 2 3 1 2\n0 1 2 2 2\n2 1 2 2 3\n1 2 2\n", "output": ["3 3 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 1\n1 2 3 2 2\n2 2 4 2 2\n1 2 3 2 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 3\n1 2 2 0 1\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 2 1\n2 2 2 4 3\n1 2 3 4 2\n2 2 4 3 3\n2 2 2 1 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 0 3\n1 2 4 4 0\n6 2 2 3 0\n1 2 2 1 2\n2 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 4\n2 2 2 2 1\n2 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 2 2 2 2\n2 2 3 1 2\n2 2 2 2 3\n3 1 2 2 2\n1 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 2\n2 2 2 2 2\n1 2 4 2 2\n0 2 2 2 2\n2 3 2 1 4\n1 2 1\n", "output": ["1 2 2\n"]}, {"input": "5 5 3\n1 3 3 3 4\n2 2 0 2 2\n1 2 3 2 2\n2 2 2 3 2\n2 1 3 1 2\n1 3 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 2\n2 2 0 2 3\n2 1 3 2 1\n2 2 2 4 2\n2 2 2 1 2\n1 3 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 0\n2 3 2 0 4\n1 2 3 4 2\n2 2 1 3 3\n1 2 2 1 2\n1 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n2 1 3 0 3\n1 2 2 2 2\n1 2 3 1 2\n0 1 2 2 2\n2 1 2 2 3\n1 2 2\n", "output": ["3 3 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 1\n1 2 3 2 2\n2 2 4 2 2\n1 1 3 2 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 2 0 4\n1 2 4 4 0\n6 2 2 3 0\n1 2 2 1 2\n2 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 4\n2 2 2 2 1\n1 2 3 2 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 2 2 2 2\n2 2 3 1 2\n2 2 2 2 3\n3 1 2 2 2\n2 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 2\n2 2 2 2 2\n1 2 4 2 2\n0 2 2 2 2\n2 3 2 1 4\n1 4 1\n", "output": ["1 2 2\n"]}, {"input": "5 5 3\n1 3 3 3 4\n2 2 0 2 2\n1 2 3 2 0\n2 2 2 3 2\n2 1 3 1 2\n1 3 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 2\n2 2 0 2 2\n2 1 3 2 1\n2 2 2 4 2\n2 2 2 1 2\n1 3 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 4 2 1\n1 2 3 2 2\n2 2 4 2 2\n1 1 3 2 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 1\n2 2 3 0 4\n1 2 4 4 0\n6 2 2 3 0\n1 2 2 1 2\n2 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 5 4\n2 2 2 2 1\n1 2 3 0 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 2 2 4 2\n2 2 3 1 2\n2 2 2 2 3\n3 1 2 2 2\n2 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 2\n2 2 0 2 2\n2 1 3 2 1\n2 2 4 4 2\n2 2 2 1 2\n1 3 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 4 2 1\n1 2 4 2 2\n2 2 4 2 2\n1 1 3 2 4\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 9 4\n2 2 2 2 1\n1 2 3 0 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 2 2 4 2\n2 2 3 1 2\n2 2 2 2 3\n2 1 2 2 2\n2 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 2\n2 2 0 2 2\n2 1 3 2 2\n2 2 4 4 2\n2 2 2 1 2\n1 3 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 9 4\n2 2 2 2 0\n1 2 3 0 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 1 3 3 3\n1 2 2 4 2\n2 2 3 0 2\n2 2 2 2 3\n2 1 2 2 2\n2 2 1\n", "output": ["3 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 2\n2 2 -1 2 2\n2 1 3 2 2\n2 2 4 4 2\n2 2 2 1 2\n1 3 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 9 4\n2 2 2 2 0\n1 2 1 0 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 4 4\n2 2 2 2 0\n1 2 1 0 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 4 7\n2 2 2 2 0\n1 2 1 0 2\n2 2 2 3 2\n2 2 2 1 2\n2 2 2\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n2 2 3 2 2\n2 2 3 2 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 1\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 2 2\n1 2 3 2 2\n2 2 2 2 3\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}, {"input": "5 5 3\n1 2 3 3 3\n1 2 2 1 2\n1 2 3 1 2\n2 2 2 2 2\n2 2 2 2 2\n1 2 1\n", "output": ["2 2 2\n"]}], "source_codes": ["\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let m: usize = iter.next().unwrap().parse().unwrap();\n    let k: usize = iter.next().unwrap().parse().unwrap();\n\n    let mut grid = Vec::new();\n    for _ in 0..n {\n        let mut row = String::new();\n        io::stdin().read_line(&mut row).unwrap();\n        let row_values: Vec<usize> = row.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        grid.push(row_values);\n    }\n\n    let mut balls = String::new();\n    io::stdin().read_line(&mut balls).unwrap();\n    let balls: Vec<usize> = balls.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let output = find_final_column(n, m, &grid, &balls);\n    println!(\"{}\", output.iter().map(|x| x.to_string()).collect::<Vec<String>>().join(\" \"));\n}\n\nfn find_final_column(n: usize, m: usize, grid: &Vec<Vec<usize>>, balls: &Vec<usize>) -> Vec<usize> {\n    let mut result = Vec::new();\n    for &ball in balls {\n        let mut row = 0;\n        let mut col = ball - 1;\n        while row < n {\n            let direction = grid[row][col];\n            if direction == 1 {\n                col += 1;\n            } else if direction == 2 {\n                row += 1;\n            } else if direction == 3 {\n                col -= 1;\n            }\n            if row == n - 1 || col == 0 || col == m - 1 {\n                break;\n            }\n        }\n        result.push(col + 1);\n    }\n    result\n}\n\n\n"], "responses": ["\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let m: usize = iter.next().unwrap().parse().unwrap();\n    let k: usize = iter.next().unwrap().parse().unwrap();\n\n    let mut grid = Vec::new();\n    for _ in 0..n {\n        let mut row = String::new();\n        io::stdin().read_line(&mut row).unwrap();\n        let row_values: Vec<usize> = row.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        grid.push(row_values);\n    }\n\n    let mut balls = String::new();\n    io::stdin().read_line(&mut balls).unwrap();\n    let balls: Vec<usize> = balls.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let output = find_final_column(n, m, &grid, &balls);\n    println!(\"{}\", output.iter().map(|x| x.to_string()).collect::<Vec<String>>().join(\" \"));\n}\n\nfn find_final_column(n: usize, m: usize, grid: &Vec<Vec<usize>>, balls: &Vec<usize>) -> Vec<usize> {\n    let mut result = Vec::new();\n    for &ball in balls {\n        let mut row = 0;\n        let mut col = ball - 1;\n        while row < n {\n            let direction = grid[row][col];\n            if direction == 1 {\n                col += 1;\n            } else if direction == 2 {\n                row += 1;\n            } else if direction == 3 {\n                col -= 1;\n            }\n            if row == n - 1 || col == 0 || col == m - 1 {\n                break;\n            }\n        }\n        result.push(col + 1);\n    }\n    result\n}\n\n\n"], "prompt_tokens": [61993], "completion_tokens": [11631], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1575}
{"name": "1575_K. Knitting Batik", "description": "Mr. Chanek wants to knit a batik, a traditional cloth from Indonesia. The cloth forms a grid a with size n \u00d7 m. There are k colors, and each cell in the grid can be one of the k colors.\n\nDefine a sub-rectangle as an ordered pair of two cells ((x_1, y_1), (x_2, y_2)), denoting the top-left cell and bottom-right cell (inclusively) of a sub-rectangle in a. Two sub-rectangles ((x_1, y_1), (x_2, y_2)) and ((x_3, y_3), (x_4, y_4)) have the same pattern if and only if the following holds: \n\n  * they have the same width (x_2 - x_1 = x_4 - x_3); \n  * they have the same height (y_2 - y_1 = y_4 - y_3); \n  * for every pair (i, j) where 0 \u2264 i \u2264 x_2 - x_1 and 0 \u2264 j \u2264 y_2 - y_1, the color of cells (x_1 + i, y_1 + j) and (x_3 + i, y_3 + j) are equal. \n\n\n\nCount the number of possible batik color combinations, such that the subrectangles ((a_x, a_y),(a_x + r - 1, a_y + c - 1)) and ((b_x, b_y),(b_x + r - 1, b_y + c - 1)) have the same pattern.\n\nOutput the answer modulo 10^9 + 7.\n\nInput\n\nThe first line contains five integers n, m, k, r, and c (1 \u2264 n, m \u2264 10^9, 1 \u2264 k \u2264 10^9, 1 \u2264 r \u2264 min(10^6, n), 1 \u2264 c \u2264 min(10^6, m)) \u2014 the size of the batik, the number of colors, and size of the sub-rectangle.\n\nThe second line contains four integers a_x, a_y, b_x, and b_y (1 \u2264 a_x, b_x \u2264 n, 1 \u2264 a_y, b_y \u2264 m) \u2014 the top-left corners of the first and second sub-rectangle. Both of the sub-rectangles given are inside the grid (1 \u2264 a_x + r - 1, b_x + r - 1 \u2264 n, 1 \u2264 a_y + c - 1, b_y + c - 1 \u2264 m).\n\nOutput\n\nOutput an integer denoting the number of possible batik color combinations modulo 10^9 + 7.\n\nExamples\n\nInput\n\n\n3 3 2 2 2\n1 1 2 2\n\n\nOutput\n\n\n32\n\n\nInput\n\n\n4 5 170845 2 2\n1 4 3 1\n\n\nOutput\n\n\n756680455\n\nNote\n\nThe following are all 32 possible color combinations in the first example.\n", "tags": ["implementation", "math"], "difficulty": 17, "id": 1575, "sample_io": [{"input": "4 5 170845 2 2\n1 4 3 1\n", "output": ["756680455\n"]}, {"input": "3 3 2 2 2\n1 1 2 2\n", "output": ["32\n"]}], "test_list": [{"input": "997824195 298198038 671030405 831526 973640\n694897941 219757278 695597597 220039071\n", "output": ["885735196\n"]}, {"input": "78 15 967084213 68 15\n6 1 9 1\n", "output": ["735990901\n"]}, {"input": "1000000000 1000000000 1000000000 999987 999995\n555555555 555555555 555555553 555555554\n", "output": ["915290242\n"]}, {"input": "284251850 196700229 713578389 995979 967011\n237351355 75633985 237356031 75775611\n", "output": ["889823267\n"]}, {"input": "1 1 1 1 1\n1 1 1 1\n", "output": ["1\n"]}, {"input": "509702566 262449977 834744439 159006 338084\n59257202 181127448 352364267 85148196\n", "output": ["26544849\n"]}, {"input": "63 65 706363358 28 20\n33 3 35 13\n", "output": ["75550567\n"]}, {"input": "1000000000 1000000000 1000000000 1000000 1000000\n69420 69420 69423 69423\n", "output": ["176638891\n"]}, {"input": "39 48 925054140 32 26\n4 14 4 22\n", "output": ["493165595\n"]}, {"input": "612244127 1 520629493 438701 1\n606433327 1 62611302 1\n", "output": ["352024843\n"]}, {"input": "999876877 999999898 1000000000 999990 999978\n24082002 170845 24082000 170842\n", "output": ["113661238\n"]}, {"input": "53 79 864470674 29 68\n16 7 17 10\n", "output": ["915799654\n"]}, {"input": "224279712 681889278 586602384 995524 653256\n131527798 181313191 93668397 333798254\n", "output": ["796813183\n"]}, {"input": "84 8 681138185 8 6\n2 2 65 3\n", "output": ["284376979\n"]}, {"input": "317978118 516355503 563741456 823898 917145\n303368564 34438928 303547237 35074157\n", "output": ["832720962\n"]}, {"input": "668775901 899736493 861668260 96121 972164\n628635372 503210393 364803336 59823197\n", "output": ["495638566\n"]}, {"input": "500000003 865102056 740048609 449299 846600\n375530078 124770851 375530078 124770851\n", "output": ["1\n"]}, {"input": "62 23 831213918 43 23\n19 1 20 1\n", "output": ["78933780\n"]}, {"input": "606866924 608383673 964448402 895347 816649\n57638772 565191689 58154550 565259566\n", "output": ["644467392\n"]}, {"input": "95 76 780165187 52 54\n21 7 25 20\n", "output": ["107285575\n"]}, {"input": "55 60 883964366 47 37\n8 14 8 11\n", "output": ["575284735\n"]}, {"input": "1 225896556 692281482 1 750856\n1 137400676 1 73477222\n", "output": ["28745794\n"]}, {"input": "727799968 611623105 644959424 942303 807555\n372191613 152626658 372904242 153091978\n", "output": ["433633\n"]}, {"input": "91 70 553300732 47 69\n31 2 41 2\n", "output": ["990706354\n"]}, {"input": "649447930 484428518 896889113 19993 39197\n316188994 151830831 86040053 192975280\n", "output": ["482572283\n"]}, {"input": "148372813 835742098 605539349 949785 368809\n98121767 705227816 2009992 83409357\n", "output": ["62183519\n"]}, {"input": "2 500000003 712653643 2 896241\n1 343018144 1 343018144\n", "output": ["1\n"]}, {"input": "74 46 616259587 58 26\n1 7 11 9\n", "output": ["894317354\n"]}, {"input": "747431804 298198038 671030405 831526 973640\n694897941 219757278 695597597 220039071\n", "output": ["52384783\n"]}, {"input": "138 15 967084213 68 15\n6 1 9 1\n", "output": ["99872087\n"]}, {"input": "1000000000 1000000000 1000000000 999987 999995\n555555555 624729203 555555553 555555554\n", "output": ["915290242\n"]}, {"input": "284251850 196700229 713578389 995979 967011\n204095504 75633985 237356031 75775611\n", "output": ["889823267\n"]}, {"input": "1 1 1 1 1\n1 1 1 0\n", "output": ["1\n"]}, {"input": "545061049 262449977 834744439 159006 338084\n59257202 181127448 352364267 85148196\n", "output": ["185909247\n"]}, {"input": "113 65 706363358 28 20\n33 3 35 13\n", "output": ["631282353\n"]}, {"input": "1000000000 1000000000 1000000000 1000000 1000000\n69420 69420 69423 131776\n", "output": ["176638891\n"]}, {"input": "999876877 999999898 1000000000 999990 77645\n24082002 170845 24082000 170842\n", "output": ["119367792\n"]}, {"input": "53 79 977139981 29 68\n16 7 17 10\n", "output": ["480057841\n"]}, {"input": "224279712 681889278 586602384 995524 653256\n131527798 181313191 93668397 70638758\n", "output": ["796813183\n"]}, {"input": "84 8 681138185 8 6\n2 2 65 2\n", "output": ["284376979\n"]}, {"input": "317978118 516355503 563741456 823898 917145\n303368564 34438928 520660549 35074157\n", "output": ["832720962\n"]}, {"input": "668775901 899736493 861668260 96121 972164\n628635372 503210393 364803336 65467861\n", "output": ["495638566\n"]}, {"input": "62 23 831213918 26 23\n19 1 20 1\n", "output": ["123891017\n"]}, {"input": "606866924 998789433 964448402 895347 816649\n57638772 565191689 58154550 565259566\n", "output": ["308039692\n"]}, {"input": "95 76 676957566 52 54\n21 7 25 20\n", "output": ["979543197\n"]}, {"input": "55 60 883964366 47 24\n8 14 8 11\n", "output": ["914220663\n"]}, {"input": "1 225896556 692281482 1 409045\n1 137400676 1 73477222\n", "output": ["269296767\n"]}, {"input": "727799968 611623105 644959424 1810328 807555\n372191613 152626658 372904242 153091978\n", "output": ["462138183\n"]}, {"input": "142 70 553300732 47 69\n31 2 41 2\n", "output": ["824767360\n"]}, {"input": "649447930 484428518 896889113 14239 39197\n316188994 151830831 86040053 192975280\n", "output": ["501051615\n"]}, {"input": "148372813 835742098 605539349 1400203 368809\n98121767 705227816 2009992 83409357\n", "output": ["865800523\n"]}, {"input": "2 500000003 712653643 2 896241\n1 343018144 1 521390179\n", "output": ["738250928\n"]}, {"input": "74 46 616259587 58 26\n0 7 11 9\n", "output": ["894317354\n"]}, {"input": "4 5 170845 2 2\n1 4 3 0\n", "output": ["756680455\n"]}, {"input": "747431804 457727028 671030405 831526 973640\n694897941 219757278 695597597 220039071\n", "output": ["276590224\n"]}, {"input": "138 15 967084213 37 15\n6 1 9 1\n", "output": ["878192352\n"]}, {"input": "1010000000 1000000000 1000000000 999987 999995\n555555555 624729203 555555553 555555554\n", "output": ["67872564\n"]}, {"input": "284251850 196700229 915049039 995979 967011\n204095504 75633985 237356031 75775611\n", "output": ["158182570\n"]}, {"input": "545061049 406884623 834744439 159006 338084\n59257202 181127448 352364267 85148196\n", "output": ["491261544\n"]}, {"input": "999876877 1560311760 1000000000 999990 77645\n24082002 170845 24082000 170842\n", "output": ["825743885\n"]}, {"input": "317978118 516355503 563741456 823898 1111190\n303368564 34438928 520660549 35074157\n", "output": ["612399160\n"]}, {"input": "62 23 255174847 26 23\n19 1 20 1\n", "output": ["582817632\n"]}, {"input": "606866924 998789433 964448402 895347 743290\n57638772 565191689 58154550 565259566\n", "output": ["490439146\n"]}, {"input": "55 60 883964366 87 24\n8 14 8 11\n", "output": ["813371220\n"]}, {"input": "1 310620412 692281482 1 409045\n1 137400676 1 73477222\n", "output": ["542784324\n"]}, {"input": "231 70 553300732 47 69\n31 2 41 2\n", "output": ["309933204\n"]}, {"input": "524668456 484428518 896889113 14239 39197\n316188994 151830831 86040053 192975280\n", "output": ["431714685\n"]}, {"input": "74 54 616259587 58 26\n0 7 11 9\n", "output": ["542798305\n"]}, {"input": "4 5 170845 3 2\n1 4 3 0\n", "output": ["731393667\n"]}, {"input": "1010000000 1000000000 1000000001 999987 999995\n555555555 624729203 555555553 555555554\n", "output": ["748664626\n"]}, {"input": "545061049 406884623 834744439 311356 338084\n59257202 181127448 352364267 85148196\n", "output": ["675335291\n"]}, {"input": "53 79 847976931 29 68\n16 7 28 10\n", "output": ["724745377\n"]}, {"input": "84 10 681138185 8 6\n2 2 79 3\n", "output": ["817826171\n"]}, {"input": "317978118 516355503 820946253 823898 1111190\n303368564 34438928 520660549 35074157\n", "output": ["641760023\n"]}, {"input": "500000003 512593647 740048609 197929 846600\n375530078 124770851 375530078 124770851\n", "output": ["1000000006\n"]}, {"input": "62 23 255174847 41 23\n19 1 20 1\n", "output": ["858461098\n"]}, {"input": "524668456 484428518 896889113 3298 39197\n316188994 151830831 86040053 192975280\n", "output": ["298341066\n"]}, {"input": "219825213 835742098 605539349 1400203 368809\n98121767 705227816 2009992 23606406\n", "output": ["930677042\n"]}, {"input": "2 570930190 712653643 2 896241\n2 343018144 1 521390179\n", "output": ["651713073\n"]}, {"input": "138 15 967084213 40 15\n4 1 9 1\n", "output": ["484959220\n"]}, {"input": "1010000000 1000000001 1000000001 999987 999995\n555555555 624729203 555555553 555555554\n", "output": ["940135353\n"]}, {"input": "83 79 847976931 29 68\n16 7 28 10\n", "output": ["627379506\n"]}, {"input": "84 10 681138185 16 6\n2 2 79 3\n", "output": ["676910296\n"]}, {"input": "317978118 516355503 1004879885 823898 1111190\n303368564 34438928 520660549 35074157\n", "output": ["22960327\n"]}, {"input": "62 23 255174847 41 32\n19 1 20 1\n", "output": ["494433819\n"]}, {"input": "95 76 335796221 52 54\n15 7 25 20\n", "output": ["205529786\n"]}, {"input": "219825213 835742098 605539349 804712 368809\n98121767 705227816 2009992 23606406\n", "output": ["138760929\n"]}, {"input": "2 570930190 1182762129 2 896241\n2 343018144 1 521390179\n", "output": ["441461888\n"]}, {"input": "4 5 170845 0 2\n2 4 3 0\n", "output": ["844256770\n"]}, {"input": "747431804 799548712 671030405 831526 973640\n839491576 219757278 220936481 220039071\n", "output": ["658212340\n"]}, {"input": "216 15 967084213 40 15\n4 1 9 1\n", "output": ["904593052\n"]}, {"input": "1010000000 1000100001 1000000001 999987 999995\n555555555 624729203 555555553 555555554\n", "output": ["822064197\n"]}, {"input": "545061049 613936713 834744439 311356 338084\n59257202 181127448 568394489 85148196\n", "output": ["781362950\n"]}, {"input": "113 65 706363358 28 10\n33 6 35 9\n", "output": ["425843662\n"]}, {"input": "999876877 1560311760 1000000000 999990 3683\n24082002 37035 24082000 179870\n", "output": ["509575244\n"]}, {"input": "111 79 847976931 29 68\n16 7 28 10\n", "output": ["370621770\n"]}, {"input": "367180905 681889278 586602384 995524 653256\n131527798 14188056 93668397 119240942\n", "output": ["739496188\n"]}, {"input": "84 10 681138185 16 2\n2 2 79 3\n", "output": ["492849673\n"]}, {"input": "317978118 516355503 1004879885 51418 1111190\n303368564 34438928 520660549 35074157\n", "output": ["310719782\n"]}, {"input": "55 60 883964366 42 24\n8 7 8 5\n", "output": ["423479295\n"]}, {"input": "727799968 611623105 235257508 1810328 807555\n372191613 152626658 311511080 286211375\n", "output": ["169663250\n"]}, {"input": "2 570930190 1182762129 1 896241\n2 343018144 1 521390179\n", "output": ["938425020\n"]}, {"input": "74 54 616259587 22 26\n0 7 13 2\n", "output": ["892867223\n"]}, {"input": "747431804 1491672707 671030405 831526 973640\n839491576 219757278 220936481 220039071\n", "output": ["731432053\n"]}, {"input": "1000000000 1000000000 1000000000 1000000 1000100\n69420 35498 80364 270584\n", "output": ["824530224\n"]}, {"input": "999876877 1560311760 1010000000 999990 3683\n24082002 37035 24082000 179870\n", "output": ["616611150\n"]}, {"input": "367180905 681889278 586602384 995524 229101\n131527798 14188056 93668397 119240942\n", "output": ["511107339\n"]}, {"input": "317978118 793649835 1004879885 51418 1111190\n303368564 34438928 520660549 35074157\n", "output": ["723412487\n"]}, {"input": "668775901 408182770 861668260 96121 972164\n133649392 503210393 444193886 73795154\n", "output": ["864437317\n"]}, {"input": "1114264961 998789433 964448402 895347 743290\n57638772 27205388 64839798 565259566\n", "output": ["325190832\n"]}, {"input": "727799968 611623105 235257508 2160330 807555\n372191613 152626658 311511080 286211375\n", "output": ["910088257\n"]}, {"input": "219825213 835742098 605539349 804712 399382\n65311001 705227816 2009992 23606406\n", "output": ["457317538\n"]}, {"input": "2 125399950 1182762129 1 896241\n2 343018144 1 521390179\n", "output": ["751622373\n"]}, {"input": "216 15 967084213 15 15\n4 1 9 2\n", "output": ["553547234\n"]}, {"input": "284251850 196700229 915049039 1754742 967011\n310425829 137068140 219762964 55437882\n", "output": ["936707600\n"]}, {"input": "345531887 613936713 834744439 311356 338084\n59257202 125343033 568394489 85148196\n", "output": ["552718970\n"]}, {"input": "113 65 425366694 28 10\n6 6 35 9\n", "output": ["714185708\n"]}, {"input": "367180905 681889278 586602384 1200148 229101\n131527798 14188056 93668397 119240942\n", "output": ["984399075\n"]}, {"input": "500000003 971320500 740048609 94261 1418357\n375530078 124770851 269794946 124770851\n", "output": ["774156597\n"]}, {"input": "1116589039 998789433 964448402 895347 743290\n57638772 27205388 64839798 565259566\n", "output": ["599299165\n"]}, {"input": "363783367 611623105 235257508 2160330 807555\n372191613 152626658 311511080 286211375\n", "output": ["10294833\n"]}, {"input": "524668456 286800688 896889113 3298 39197\n316188994 433020 86040053 227643010\n", "output": ["896055883\n"]}, {"input": "340940310 835742098 605539349 804712 399382\n65311001 705227816 2009992 23606406\n", "output": ["109698159\n"]}, {"input": "74 54 1227913950 22 26\n1 7 13 2\n", "output": ["909833800\n"]}, {"input": "747431804 1491672707 671030405 883637 973640\n839491576 18466420 220936481 220039071\n", "output": ["583187113\n"]}, {"input": "1110000000 1000100001 1000000001 999987 999995\n683808635 818519699 555555553 555555554\n", "output": ["685542976\n"]}, {"input": "284251850 196700229 915049039 1754742 266683\n310425829 137068140 219762964 55437882\n", "output": ["760876467\n"]}, {"input": "113 65 232038476 28 10\n6 6 35 9\n", "output": ["90984504\n"]}, {"input": "999876877 1560311760 1010000000 462882 3683\n24082002 36311 24082000 179870\n", "output": ["203250330\n"]}, {"input": "367180905 681889278 586602384 1200148 34164\n131527798 14188056 93668397 119240942\n", "output": ["690667909\n"]}, {"input": "317978118 793649835 1004879885 51418 7073\n303368564 34438928 256721421 35074157\n", "output": ["255288410\n"]}, {"input": "1116589039 998789433 964448402 1118578 743290\n57638772 27205388 64839798 565259566\n", "output": ["308746351\n"]}, {"input": "482373712 611623105 235257508 2160330 807555\n372191613 152626658 311511080 286211375\n", "output": ["497989985\n"]}, {"input": "524668456 286800688 896889113 6416 39197\n316188994 433020 86040053 227643010\n", "output": ["746308133\n"]}, {"input": "2 125399950 1182762129 2 896241\n1 343018144 1 521390179\n", "output": ["176249157\n"]}, {"input": "114 54 1227913950 22 26\n1 7 13 2\n", "output": ["259211785\n"]}, {"input": "317 15 967084213 15 15\n4 1 1 2\n", "output": ["966707767\n"]}, {"input": "345531887 270507444 834744439 311356 338084\n52912937 125343033 568394489 85148196\n", "output": ["568411909\n"]}, {"input": "1000000000 1000000000 1000000000 1000000 1000110\n32244 65620 80364 270584\n", "output": ["737672727\n"]}, {"input": "367180905 681889278 586602384 1200148 35127\n131527798 14188056 93668397 119240942\n", "output": ["832057267\n"]}, {"input": "84 10 681138185 12 2\n2 2 79 1\n", "output": ["757621779\n"]}, {"input": "668775901 408182770 861668260 20753 972164\n32174419 301617757 444193886 73795154\n", "output": ["149645902\n"]}, {"input": "500000003 971320500 740048609 94261 2281396\n375530078 124770851 269794946 199892891\n", "output": ["159827765\n"]}, {"input": "400364652 998789433 964448402 1118578 743290\n57638772 27205388 64839798 565259566\n", "output": ["356775124\n"]}, {"input": "482373712 611623105 235257508 2160330 93930\n372191613 152626658 311511080 286211375\n", "output": ["344260952\n"]}, {"input": "524668456 286800688 1222149201 6416 39197\n316188994 433020 86040053 227643010\n", "output": ["402744553\n"]}, {"input": "599680039 835742098 605539349 804712 399382\n65311001 705227816 1557563 23606406\n", "output": ["272317524\n"]}, {"input": "747431804 1491672707 671030405 102217 973640\n839491576 18466420 220936481 22315127\n", "output": ["375597692\n"]}, {"input": "317 15 967084213 29 15\n4 1 1 2\n", "output": ["739472117\n"]}, {"input": "1110000000 1000100001 1000000001 170714 999995\n683808635 1423426790 555555553 555555554\n", "output": ["220052742\n"]}, {"input": "284251850 140742469 915049039 1754742 266683\n310425829 137068140 395300540 55437882\n", "output": ["741218771\n"]}, {"input": "345531887 270507444 719760285 311356 338084\n52912937 125343033 568394489 85148196\n", "output": ["917002963\n"]}, {"input": "113 65 232038476 28 9\n6 6 51 9\n", "output": ["26651501\n"]}, {"input": "1000000000 1000000000 1001000000 1000000 1000110\n32244 65620 80364 270584\n", "output": ["804282248\n"]}, {"input": "367180905 681889278 586602384 645917 35127\n131527798 14188056 93668397 119240942\n", "output": ["77074721\n"]}, {"input": "84 8 681138185 12 2\n2 2 79 1\n", "output": ["984142229\n"]}, {"input": "317978118 793649835 1004879885 54246 7073\n46349749 34438928 256721421 35074157\n", "output": ["251132807\n"]}, {"input": "668775901 408182770 727593840 20753 972164\n32174419 301617757 444193886 73795154\n", "output": ["729370769\n"]}, {"input": "945992360 971320500 740048609 94261 2281396\n375530078 124770851 269794946 199892891\n", "output": ["223786375\n"]}, {"input": "400364652 998789433 305944200 1118578 743290\n57638772 27205388 64839798 565259566\n", "output": ["401952410\n"]}, {"input": "95 76 335796221 52 5\n21 7 21 11\n", "output": ["56128595\n"]}, {"input": "482373712 114148564 235257508 2160330 93930\n372191613 152626658 311511080 286211375\n", "output": ["581855981\n"]}, {"input": "2 168509026 1182762129 2 896241\n2 343018144 1 521390179\n", "output": ["256217682\n"]}, {"input": "747431804 1491672707 671030405 12136 973640\n839491576 18466420 220936481 22315127\n", "output": ["491637537\n"]}, {"input": "317 15 967084213 2 15\n4 1 1 2\n", "output": ["688537230\n"]}, {"input": "1110000000 1001100001 1000000001 170714 999995\n683808635 1423426790 555555553 555555554\n", "output": ["972770006\n"]}, {"input": "284251850 140742469 915049039 1958561 266683\n310425829 137068140 395300540 55437882\n", "output": ["734586348\n"]}, {"input": "518809119 270507444 719760285 311356 338084\n52912937 125343033 568394489 85148196\n", "output": ["315483192\n"]}, {"input": "1000000000 1100000000 1001000000 1000000 1000110\n32244 65620 80364 270584\n", "output": ["728856541\n"]}, {"input": "367180905 681889278 586602384 645917 69465\n131527798 14188056 93668397 119240942\n", "output": ["978221516\n"]}, {"input": "668775901 408182770 727593840 20753 1688730\n32174419 301617757 444193886 73795154\n", "output": ["633995923\n"]}, {"input": "945992360 258195673 740048609 94261 2281396\n375530078 124770851 269794946 199892891\n", "output": ["808030897\n"]}, {"input": "400364652 998789433 305944200 1425834 743290\n57638772 27205388 64839798 565259566\n", "output": ["388529205\n"]}, {"input": "599680039 361526641 605539349 804712 399382\n65311001 735257327 1557563 23606406\n", "output": ["681298832\n"]}, {"input": "747431804 1491672707 671030405 19409 973640\n839491576 18466420 220936481 22315127\n", "output": ["102404352\n"]}, {"input": "317 15 967084213 2 20\n4 1 1 2\n", "output": ["388264556\n"]}, {"input": "1110000000 1001100001 1000000001 26486 999995\n683808635 1423426790 555555553 555555554\n", "output": ["699750515\n"]}, {"input": "531650487 140742469 915049039 1958561 266683\n310425829 137068140 395300540 55437882\n", "output": ["816475233\n"]}, {"input": "561258585 270507444 719760285 311356 338084\n52912937 125343033 568394489 85148196\n", "output": ["505920765\n"]}, {"input": "48 65 232038476 28 9\n6 6 23 9\n", "output": ["176816476\n"]}, {"input": "1000000000 1100000000 1001000000 1000000 1100110\n32244 65620 80364 270584\n", "output": ["884304796\n"]}, {"input": "367180905 681889278 1152132072 645917 69465\n131527798 14188056 93668397 119240942\n", "output": ["528649476\n"]}, {"input": "84 8 249415576 12 2\n2 2 79 2\n", "output": ["358907911\n"]}, {"input": "317978118 793649835 413740871 54246 7073\n46349749 34438928 338342856 35074157\n", "output": ["90135874\n"]}, {"input": "668775901 408182770 1218312476 20753 1688730\n32174419 301617757 444193886 73795154\n", "output": ["193785117\n"]}, {"input": "400364652 998789433 305944200 1425834 1167093\n57638772 27205388 64839798 565259566\n", "output": ["111746243\n"]}, {"input": "95 76 335796221 52 1\n39 7 21 11\n", "output": ["669765538\n"]}, {"input": "599680039 361526641 605539349 59120 399382\n65311001 735257327 1557563 23606406\n", "output": ["300727929\n"]}, {"input": "3 168509026 1182762129 2 896241\n2 343018144 1 194427880\n", "output": ["69982728\n"]}, {"input": "317 15 1173237422 2 20\n4 1 1 2\n", "output": ["866021324\n"]}, {"input": "531650487 140742469 915049039 2215157 266683\n310425829 137068140 395300540 55437882\n", "output": ["651478799\n"]}, {"input": "1000000000 1100000000 1001000000 1000000 1100010\n32244 65620 80364 270584\n", "output": ["594689705\n"]}, {"input": "367180905 681889278 1152132072 645917 75482\n131527798 14188056 93668397 119240942\n", "output": ["965341011\n"]}, {"input": "84 8 390045585 12 2\n2 2 79 2\n", "output": ["249093001\n"]}, {"input": "945992360 337796044 740048609 94261 2281396\n139975864 124770851 269794946 199892891\n", "output": ["151998137\n"]}, {"input": "400364652 1733574755 305944200 1425834 1167093\n57638772 27205388 64839798 565259566\n", "output": ["961696912\n"]}, {"input": "482373712 114148564 330551946 2160330 93930\n328979684 152626658 311511080 538275127\n", "output": ["34110189\n"]}, {"input": "599680039 111131829 605539349 59120 399382\n65311001 735257327 1557563 23606406\n", "output": ["846242548\n"]}, {"input": "124 54 1227913950 22 26\n1 2 48 1\n", "output": ["875162720\n"]}, {"input": "747431804 1491672707 671030405 19409 434188\n1332332602 18466420 220936481 22315127\n", "output": ["621981181\n"]}, {"input": "1061280576 140742469 915049039 2215157 266683\n310425829 137068140 395300540 55437882\n", "output": ["988695271\n"]}, {"input": "232563057 681889278 1152132072 645917 75482\n131527798 14188056 93668397 119240942\n", "output": ["45166941\n"]}, {"input": "84 8 390045585 12 3\n2 2 79 2\n", "output": ["90196850\n"]}, {"input": "381008512 337796044 740048609 94261 2281396\n139975864 124770851 269794946 199892891\n", "output": ["569921512\n"]}, {"input": "9 76 335796221 52 1\n45 7 21 11\n", "output": ["271000806\n"]}, {"input": "482373712 114148564 303579145 2160330 93930\n328979684 152626658 311511080 538275127\n", "output": ["835504236\n"]}, {"input": "524668456 286800688 1222149201 10599 39197\n159967714 534670 86040053 163994420\n", "output": ["977981238\n"]}, {"input": "317 15 1574193463 2 20\n0 1 1 2\n", "output": ["209431248\n"]}, {"input": "1061280576 63734036 915049039 2215157 266683\n310425829 137068140 395300540 55437882\n", "output": ["95265304\n"]}, {"input": "1000000000 1100000000 1001000000 1100000 1100010\n32673 65620 80364 270584\n", "output": ["13787528\n"]}, {"input": "232563057 681889278 362535292 645917 75482\n131527798 14188056 93668397 119240942\n", "output": ["662398419\n"]}, {"input": "84 8 402257753 12 3\n2 2 79 2\n", "output": ["859878168\n"]}, {"input": "317978118 793649835 413740871 54246 11904\n46349749 45945595 440603973 35074157\n", "output": ["652512544\n"]}, {"input": "381008512 337796044 740048609 25381 2281396\n139975864 124770851 269794946 199892891\n", "output": ["836120393\n"]}, {"input": "400364652 1244872027 305944200 1425834 1167093\n57638772 27205388 64839798 617192017\n", "output": ["362525703\n"]}, {"input": "9 76 335796221 52 2\n45 7 21 11\n", "output": ["880946543\n"]}, {"input": "599680039 111131829 605539349 59120 763723\n65311001 735257327 2380142 23606406\n", "output": ["824885184\n"]}, {"input": "3 169851124 1182762129 2 896241\n-1 343018144 1 194427880\n", "output": ["231061090\n"]}, {"input": "561258585 270507444 683852525 311356 338084\n93299728 125343033 568394489 48956473\n", "output": ["535141465\n"]}, {"input": "1000000000 1100000000 1001000000 1100100 1100010\n32673 65620 80364 270584\n", "output": ["145687737\n"]}, {"input": "232563057 681889278 362535292 984833 75482\n131527798 14188056 93668397 119240942\n", "output": ["962533824\n"]}, {"input": "381008512 337796044 740048609 6295 2281396\n139975864 124770851 269794946 199892891\n", "output": ["277841537\n"]}, {"input": "400364652 1200746386 305944200 1425834 1167093\n57638772 27205388 64839798 617192017\n", "output": ["211327671\n"]}, {"input": "524668456 286800688 1167948554 10599 39197\n159967714 716299 86040053 163994420\n", "output": ["141334954\n"]}, {"input": "3 169851124 431459934 2 896241\n-1 343018144 1 194427880\n", "output": ["841633924\n"]}, {"input": "317 15 1574193463 3 20\n0 0 1 2\n", "output": ["426973581\n"]}, {"input": "1061280576 63734036 915049039 2215157 327499\n310425829 159278820 395300540 55437882\n", "output": ["661279339\n"]}, {"input": "1000000000 1000000000 1001000000 1100100 1100010\n32673 65620 80364 270584\n", "output": ["280128243\n"]}], "source_codes": ["\nconst MOD: i64 = 1_000_000_007;\n\nfn power(x: i64, y: i64) -> i64 {\n    let mut res = 1;\n    let mut y_val = y;\n    let mut x_val = x;\n    while y_val > 0 {\n        if y_val % 2 == 1 {\n            res = (res * x_val) % MOD;\n        }\n        y_val /= 2;\n        x_val = (x_val * x_val) % MOD;\n    }\n    res\n}\n\nfn calc_combinations(n: i64, m: i64, k: i64, r: i64, c: i64, x: i64, y: i64) -> i64 {\n    power(k, x * y)\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace().map(|x| x.parse::<i64>().unwrap());\n    let n = iter.next().unwrap();\n    let m = iter.next().unwrap();\n    let k = iter.next().unwrap();\n    let r = iter.next().unwrap();\n    let c = iter.next().unwrap();\n\n    input.clear();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace().map(|x| x.parse::<i64>().unwrap());\n    let a_x = iter.next().unwrap();\n    let a_y = iter.next().unwrap();\n    let b_x = iter.next().unwrap();\n    let b_y = iter.next().unwrap();\n\n    let result = (calc_combinations(n, m, k, r, c, (a_x - b_x).abs() + 1, (a_y - b_y).abs() + 1)) % MOD;\n    println!(\"{}\", result);\n}\n\n\n"], "responses": ["\nconst MOD: i64 = 1_000_000_007;\n\nfn power(x: i64, y: i64) -> i64 {\n    let mut res = 1;\n    let mut y_val = y;\n    let mut x_val = x;\n    while y_val > 0 {\n        if y_val % 2 == 1 {\n            res = (res * x_val) % MOD;\n        }\n        y_val /= 2;\n        x_val = (x_val * x_val) % MOD;\n    }\n    res\n}\n\nfn calc_combinations(n: i64, m: i64, k: i64, r: i64, c: i64, x: i64, y: i64) -> i64 {\n    power(k, x * y)\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace().map(|x| x.parse::<i64>().unwrap());\n    let n = iter.next().unwrap();\n    let m = iter.next().unwrap();\n    let k = iter.next().unwrap();\n    let r = iter.next().unwrap();\n    let c = iter.next().unwrap();\n\n    input.clear();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace().map(|x| x.parse::<i64>().unwrap());\n    let a_x = iter.next().unwrap();\n    let a_y = iter.next().unwrap();\n    let b_x = iter.next().unwrap();\n    let b_y = iter.next().unwrap();\n\n    let result = (calc_combinations(n, m, k, r, c, (a_x - b_x).abs() + 1, (a_y - b_y).abs() + 1)) % MOD;\n    println!(\"{}\", result);\n}\n\n\n"], "prompt_tokens": [60656], "completion_tokens": [11756], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1575}
{"name": "1575_L. Longest Array Deconstruction", "description": "Mr. Chanek gives you a sequence a indexed from 1 to n. Define f(a) as the number of indices where a_i = i. \n\nYou can pick an element from the current sequence and remove it, then concatenate the remaining elements together. For example, if you remove the 3-rd element from the sequence [4, 2, 3, 1], the resulting sequence will be [4, 2, 1]. \n\nYou want to remove some elements from a in order to maximize f(a), using zero or more operations. Find the largest possible f(a).\n\nInput\n\nThe first line contains one integer n (1 \u2264 n \u2264 2 \u22c5 10^5) \u2014 the initial length of the sequence.\n\nThe second line contains n integers a_1, a_2, \u2026, a_n (1 \u2264 a_i \u2264 2 \u22c5 10^5) \u2014 the initial sequence a.\n\nOutput\n\nOutput an integer denoting the largest f(a) that can be obtained by doing zero or more operations.\n\nExamples\n\nInput\n\n\n7\n2 1 4 2 5 3 7\n\n\nOutput\n\n\n3\n\n\nInput\n\n\n4\n4 2 3 1\n\n\nOutput\n\n\n2\n\nNote\n\nIn the first example, f(A) = 3 by doing the following operations.\n\n[2,1,4,2,5,3,7] \u2192 [2,1,2,5,3,7] \u2192 [1,2,5,3,7] \u2192 [1,2,5,3] \u2192 [1,2,3]\n\nIn the second example, f(A) = 2 and no additional operation is needed.", "tags": ["data structures", "divide and conquer", "dp", "sortings"], "difficulty": 19, "id": 1575, "sample_io": [{"input": "4\n4 2 3 1\n", "output": ["2\n"]}, {"input": "7\n2 1 4 2 5 3 7\n", "output": ["3\n"]}], "test_list": [{"input": "1\n1\n", "output": ["1\n"]}, {"input": "1\n200000\n", "output": ["0\n"]}, {"input": "1\n2\n", "output": ["0\n"]}, {"input": "1\n001\n", "output": ["1\n"]}, {"input": "1\n69861\n", "output": ["0\n"]}, {"input": "1\n70524\n", "output": ["0\n"]}, {"input": "1\n46702\n", "output": ["0\n"]}, {"input": "1\n7068\n", "output": ["0\n"]}, {"input": "1\n10491\n", "output": ["0\n"]}, {"input": "1\n8373\n", "output": ["0\n"]}, {"input": "1\n15424\n", "output": ["0\n"]}, {"input": "1\n2597\n", "output": ["0\n"]}, {"input": "1\n2781\n", "output": ["0\n"]}, {"input": "1\n1895\n", "output": ["0\n"]}, {"input": "1\n1303\n", "output": ["0\n"]}, {"input": "1\n726\n", "output": ["0\n"]}, {"input": "1\n266\n", "output": ["0\n"]}, {"input": "1\n83\n", "output": ["0\n"]}, {"input": "1\n165\n", "output": ["0\n"]}, {"input": "1\n324\n", "output": ["0\n"]}, {"input": "1\n426\n", "output": ["0\n"]}, {"input": "1\n279\n", "output": ["0\n"]}, {"input": "1\n513\n", "output": ["0\n"]}, {"input": "1\n696\n", "output": ["0\n"]}, {"input": "1\n1014\n", "output": ["0\n"]}, {"input": "1\n1529\n", "output": ["0\n"]}, {"input": "1\n1995\n", "output": ["0\n"]}, {"input": "1\n530\n", "output": ["0\n"]}, {"input": "1\n777\n", "output": ["0\n"]}, {"input": "1\n270\n", "output": ["0\n"]}, {"input": "1\n410\n", "output": ["0\n"]}, {"input": "1\n481\n", "output": ["0\n"]}, {"input": "1\n304\n", "output": ["0\n"]}, {"input": "1\n566\n", "output": ["0\n"]}, {"input": "1\n538\n", "output": ["0\n"]}, {"input": "1\n728\n", "output": ["0\n"]}, {"input": "1\n1245\n", "output": ["0\n"]}, {"input": "1\n577\n", "output": ["0\n"]}, {"input": "1\n476\n", "output": ["0\n"]}, {"input": "1\n522\n", "output": ["0\n"]}, {"input": "1\n645\n", "output": ["0\n"]}, {"input": "1\n1237\n", "output": ["0\n"]}, {"input": "1\n2125\n", "output": ["0\n"]}, {"input": "1\n92\n", "output": ["0\n"]}, {"input": "1\n99\n", "output": ["0\n"]}, {"input": "1\n101\n", "output": ["0\n"]}, {"input": "1\n100\n", "output": ["0\n"]}, {"input": "1\n110\n", "output": ["0\n"]}, {"input": "1\n111\n", "output": ["0\n"]}, {"input": "1\n4\n", "output": ["0\n"]}, {"input": "1\n32514\n", "output": ["0\n"]}, {"input": "4\n4 3 3 1\n", "output": ["1\n"]}, {"input": "1\n69924\n", "output": ["0\n"]}, {"input": "1\n14148\n", "output": ["0\n"]}, {"input": "1\n62044\n", "output": ["0\n"]}, {"input": "1\n42\n", "output": ["0\n"]}, {"input": "1\n17875\n", "output": ["0\n"]}, {"input": "1\n15341\n", "output": ["0\n"]}, {"input": "1\n845\n", "output": ["0\n"]}, {"input": "1\n2393\n", "output": ["0\n"]}, {"input": "1\n4564\n", "output": ["0\n"]}, {"input": "1\n2692\n", "output": ["0\n"]}, {"input": "1\n2593\n", "output": ["0\n"]}, {"input": "1\n164\n", "output": ["0\n"]}, {"input": "1\n487\n", "output": ["0\n"]}, {"input": "1\n161\n", "output": ["0\n"]}, {"input": "1\n13\n", "output": ["0\n"]}, {"input": "1\n474\n", "output": ["0\n"]}, {"input": "1\n415\n", "output": ["0\n"]}, {"input": "1\n143\n", "output": ["0\n"]}, {"input": "1\n899\n", "output": ["0\n"]}, {"input": "1\n384\n", "output": ["0\n"]}, {"input": "1\n135\n", "output": ["0\n"]}, {"input": "1\n1340\n", "output": ["0\n"]}, {"input": "1\n2450\n", "output": ["0\n"]}, {"input": "1\n831\n", "output": ["0\n"]}, {"input": "1\n93\n", "output": ["0\n"]}, {"input": "1\n318\n", "output": ["0\n"]}, {"input": "1\n18\n", "output": ["0\n"]}, {"input": "1\n97\n", "output": ["0\n"]}, {"input": "1\n149\n", "output": ["0\n"]}, {"input": "1\n758\n", "output": ["0\n"]}, {"input": "1\n620\n", "output": ["0\n"]}, {"input": "1\n1256\n", "output": ["0\n"]}, {"input": "1\n586\n", "output": ["0\n"]}, {"input": "1\n595\n", "output": ["0\n"]}, {"input": "1\n490\n", "output": ["0\n"]}, {"input": "1\n402\n", "output": ["0\n"]}, {"input": "1\n608\n", "output": ["0\n"]}, {"input": "1\n2037\n", "output": ["0\n"]}, {"input": "1\n159\n", "output": ["0\n"]}, {"input": "1\n57\n", "output": ["0\n"]}, {"input": "1\n010\n", "output": ["0\n"]}, {"input": "1\n011\n", "output": ["0\n"]}, {"input": "1\n8\n", "output": ["0\n"]}, {"input": "1\n45174\n", "output": ["0\n"]}, {"input": "1\n49531\n", "output": ["0\n"]}, {"input": "1\n13625\n", "output": ["0\n"]}, {"input": "1\n44466\n", "output": ["0\n"]}, {"input": "1\n15\n", "output": ["0\n"]}, {"input": "1\n25802\n", "output": ["0\n"]}, {"input": "1\n22741\n", "output": ["0\n"]}, {"input": "1\n1575\n", "output": ["0\n"]}, {"input": "1\n2763\n", "output": ["0\n"]}, {"input": "1\n2858\n", "output": ["0\n"]}, {"input": "1\n4910\n", "output": ["0\n"]}, {"input": "1\n4474\n", "output": ["0\n"]}, {"input": "1\n128\n", "output": ["0\n"]}, {"input": "1\n176\n", "output": ["0\n"]}, {"input": "1\n5\n", "output": ["0\n"]}, {"input": "1\n733\n", "output": ["0\n"]}, {"input": "1\n795\n", "output": ["0\n"]}, {"input": "1\n276\n", "output": ["0\n"]}, {"input": "1\n1539\n", "output": ["0\n"]}, {"input": "1\n233\n", "output": ["0\n"]}, {"input": "1\n215\n", "output": ["0\n"]}, {"input": "1\n1666\n", "output": ["0\n"]}, {"input": "1\n1873\n", "output": ["0\n"]}, {"input": "1\n1587\n", "output": ["0\n"]}, {"input": "1\n29\n", "output": ["0\n"]}, {"input": "1\n40\n", "output": ["0\n"]}, {"input": "1\n10\n", "output": ["0\n"]}, {"input": "1\n84\n", "output": ["0\n"]}, {"input": "1\n17\n", "output": ["0\n"]}, {"input": "1\n376\n", "output": ["0\n"]}, {"input": "1\n213\n", "output": ["0\n"]}, {"input": "1\n824\n", "output": ["0\n"]}, {"input": "1\n1008\n", "output": ["0\n"]}, {"input": "1\n330\n", "output": ["0\n"]}, {"input": "1\n885\n", "output": ["0\n"]}, {"input": "1\n331\n", "output": ["0\n"]}, {"input": "1\n212\n", "output": ["0\n"]}, {"input": "1\n1307\n", "output": ["0\n"]}, {"input": "1\n81\n", "output": ["0\n"]}, {"input": "1\n75\n", "output": ["0\n"]}, {"input": "1\n24\n", "output": ["0\n"]}, {"input": "1\n67544\n", "output": ["0\n"]}, {"input": "1\n17360\n", "output": ["0\n"]}, {"input": "1\n19006\n", "output": ["0\n"]}, {"input": "1\n35921\n", "output": ["0\n"]}, {"input": "1\n27\n", "output": ["0\n"]}, {"input": "1\n448\n", "output": ["0\n"]}, {"input": "1\n41684\n", "output": ["0\n"]}, {"input": "1\n1222\n", "output": ["0\n"]}, {"input": "1\n4412\n", "output": ["0\n"]}, {"input": "1\n3367\n", "output": ["0\n"]}, {"input": "1\n5738\n", "output": ["0\n"]}, {"input": "1\n4073\n", "output": ["0\n"]}, {"input": "1\n339\n", "output": ["0\n"]}, {"input": "1\n114\n", "output": ["0\n"]}, {"input": "1\n7\n", "output": ["0\n"]}, {"input": "1\n778\n", "output": ["0\n"]}, {"input": "1\n1305\n", "output": ["0\n"]}, {"input": "1\n243\n", "output": ["0\n"]}, {"input": "1\n482\n", "output": ["0\n"]}, {"input": "1\n120\n", "output": ["0\n"]}, {"input": "1\n347\n", "output": ["0\n"]}, {"input": "1\n364\n", "output": ["0\n"]}, {"input": "1\n931\n", "output": ["0\n"]}, {"input": "1\n2256\n", "output": ["0\n"]}, {"input": "1\n33\n", "output": ["0\n"]}, {"input": "1\n65\n", "output": ["0\n"]}, {"input": "1\n11\n", "output": ["0\n"]}, {"input": "1\n41\n", "output": ["0\n"]}, {"input": "1\n23\n", "output": ["0\n"]}, {"input": "1\n109\n", "output": ["0\n"]}, {"input": "1\n300\n", "output": ["0\n"]}, {"input": "1\n1397\n", "output": ["0\n"]}, {"input": "1\n526\n", "output": ["0\n"]}, {"input": "1\n563\n", "output": ["0\n"]}, {"input": "1\n1193\n", "output": ["0\n"]}, {"input": "1\n117\n", "output": ["0\n"]}, {"input": "1\n2549\n", "output": ["0\n"]}, {"input": "1\n3\n", "output": ["0\n"]}, {"input": "1\n55783\n", "output": ["0\n"]}, {"input": "1\n19264\n", "output": ["0\n"]}, {"input": "1\n31342\n", "output": ["0\n"]}, {"input": "1\n50054\n", "output": ["0\n"]}, {"input": "1\n16\n", "output": ["0\n"]}, {"input": "1\n699\n", "output": ["0\n"]}, {"input": "1\n65589\n", "output": ["0\n"]}, {"input": "1\n518\n", "output": ["0\n"]}, {"input": "1\n7298\n", "output": ["0\n"]}, {"input": "1\n1748\n", "output": ["0\n"]}, {"input": "1\n2448\n", "output": ["0\n"]}, {"input": "1\n5036\n", "output": ["0\n"]}, {"input": "1\n351\n", "output": ["0\n"]}, {"input": "1\n148\n", "output": ["0\n"]}, {"input": "1\n25\n", "output": ["0\n"]}, {"input": "1\n142\n", "output": ["0\n"]}, {"input": "1\n2063\n", "output": ["0\n"]}, {"input": "1\n255\n", "output": ["0\n"]}, {"input": "1\n431\n", "output": ["0\n"]}, {"input": "1\n227\n", "output": ["0\n"]}, {"input": "1\n156\n", "output": ["0\n"]}, {"input": "1\n473\n", "output": ["0\n"]}, {"input": "1\n1698\n", "output": ["0\n"]}, {"input": "1\n3311\n", "output": ["0\n"]}, {"input": "1\n37\n", "output": ["0\n"]}, {"input": "1\n12\n", "output": ["0\n"]}, {"input": "1\n20\n", "output": ["0\n"]}, {"input": "1\n82\n", "output": ["0\n"]}], "source_codes": ["\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let n: usize = input.trim().parse().unwrap();\n\n    let mut a = String::new();\n    io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<i32> = a.split_whitespace()\n                        .map(|x| x.parse().unwrap())\n                        .collect();\n\n    let mut count = 0;\n    loop {\n        let mut new_a = Vec::new();\n        for i in 0..n {\n            if a[i] == (i as i32) + 1 {\n                count += 1;\n                new_a.push(a[i]);\n            }\n        }\n        if new_a.len() == a.len() {\n            break;\n        }\n        a = new_a;\n        n = a.len();\n    }\n\n    println!(\"{}\", count);\n}\n\n\n"], "responses": ["\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let n: usize = input.trim().parse().unwrap();\n\n    let mut a = String::new();\n    io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<i32> = a.split_whitespace()\n                        .map(|x| x.parse().unwrap())\n                        .collect();\n\n    let mut count = 0;\n    loop {\n        let mut new_a = Vec::new();\n        for i in 0..n {\n            if a[i] == (i as i32) + 1 {\n                count += 1;\n                new_a.push(a[i]);\n            }\n        }\n        if new_a.len() == a.len() {\n            break;\n        }\n        a = new_a;\n        n = a.len();\n    }\n\n    println!(\"{}\", count);\n}\n\n\n"], "prompt_tokens": [43326], "completion_tokens": [7196], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1575}
{"name": "1575_M. Managing Telephone Poles", "description": "Mr. Chanek's city can be represented as a plane. He wants to build a housing complex in the city.\n\nThere are some telephone poles on the plane, which is represented by a grid a of size (n + 1) \u00d7 (m + 1). There is a telephone pole at (x, y) if a_{x, y} = 1.\n\nFor each point (x, y), define S(x, y) as the square of the Euclidean distance between the nearest pole and (x, y). Formally, the square of the Euclidean distance between two points (x_1, y_1) and (x_2, y_2) is (x_2 - x_1)^2 + (y_2 - y_1)^2.\n\nTo optimize the building plan, the project supervisor asks you the sum of all S(x, y) for each 0 \u2264 x \u2264 n and 0 \u2264 y \u2264 m. Help him by finding the value of \u2211_{x=0}^{n} {\u2211_{y=0}^{m} {S(x, y)}}.\n\nInput\n\nThe first line contains two integers n and m (0 \u2264 n, m < 2000) \u2014 the size of the grid.\n\nThen (n + 1) lines follow, each containing (m + 1) integers a_{i, j} (0 \u2264 a_{i, j} \u2264 1) \u2014 the grid denoting the positions of telephone poles in the plane. There is at least one telephone pole in the given grid.\n\nOutput\n\nOutput an integer denoting the value of \u2211_{x=0}^{n} {\u2211_{y=0}^{m} {S(x, y)}}.\n\nExamples\n\nInput\n\n\n2 2\n101\n000\n000\n\n\nOutput\n\n\n18\n\n\nInput\n\n\n5 4\n10010\n00000\n01000\n00001\n00100\n00010\n\n\nOutput\n\n\n36\n\nNote\n\n<image>\n\nIn the first example, the nearest telephone pole for the points (0,0), (1,0), (2,0), (0,1), (1,1), and (2,1) is at (0, 0). While the nearest telephone pole for the points (0, 2), (1,2), and (2,2) is at (0, 2). Thus, \u2211_{x=0}^{n} {\u2211_{y=0}^{m} {S(x, y)}} = (0 + 1 + 4) + (1 + 2 + 5) + (0 + 1 + 4) = 18.", "tags": ["data structures", "geometry"], "difficulty": 20, "id": 1575, "sample_io": [{"input": "2 2\n101\n000\n000\n", "output": ["18\n"]}, {"input": "5 4\n10010\n00000\n01000\n00001\n00100\n00010\n", "output": ["36\n"]}], "test_list": [{"input": "9 9\n0000110000\n0001001000\n0001001000\n0001111000\n0001001000\n0001001000\n0110000110\n1000000001\n1001001001\n0111111110\n", "output": ["182\n"]}, {"input": "0 0\n1\n", "output": ["0\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001001000\n0001111000\n0001001000\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["181\n"]}, {"input": "2 2\n101\n010\n000\n", "output": ["8\n"]}, {"input": "5 4\n10010\n00000\n01000\n00001\n00100\n00110\n", "output": ["33\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001001000\n0001111000\n0001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["183\n"]}, {"input": "5 4\n10010\n00000\n01000\n00001\n10100\n00110\n", "output": ["25\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001000000\n0001111000\n0001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["187\n"]}, {"input": "5 4\n10010\n00000\n00000\n00001\n10100\n00110\n", "output": ["38\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001000000\n0001011000\n0001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["188\n"]}, {"input": "5 4\n10010\n00000\n00000\n01001\n10100\n00110\n", "output": ["28\n"]}, {"input": "5 4\n10010\n00100\n00000\n01001\n10100\n00110\n", "output": ["24\n"]}, {"input": "5 4\n00010\n00101\n00000\n01001\n10100\n00110\n", "output": ["31\n"]}, {"input": "5 4\n01000\n00101\n00000\n01001\n10110\n00111\n", "output": ["23\n"]}, {"input": "5 4\n01000\n00101\n00100\n01001\n10110\n00111\n", "output": ["21\n"]}, {"input": "5 4\n01000\n10101\n00100\n01001\n10110\n00111\n", "output": ["18\n"]}, {"input": "5 4\n01100\n10101\n00100\n01001\n10110\n00111\n", "output": ["16\n"]}, {"input": "5 4\n01100\n10101\n00100\n01001\n10110\n01111\n", "output": ["15\n"]}, {"input": "5 4\n01100\n10101\n00100\n01001\n00110\n01111\n", "output": ["17\n"]}, {"input": "0 4\n10010\n00000\n01000\n00001\n00100\n00010\n", "output": ["3\n"]}, {"input": "9 9\n0000110010\n0001001000\n0001001000\n0001111000\n0001001000\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["152\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001001000\n1001111000\n0001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["149\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001000000\n0001111000\n1001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["163\n"]}, {"input": "5 4\n10010\n00001\n00000\n00001\n10100\n00110\n", "output": ["36\n"]}, {"input": "5 9\n0000110000\n0001001000\n0001000000\n0001011000\n0001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["193\n"]}, {"input": "5 4\n00010\n00100\n00000\n01001\n10110\n00110\n", "output": ["32\n"]}, {"input": "5 4\n00010\n00101\n00000\n01001\n10100\n01110\n", "output": ["30\n"]}, {"input": "5 4\n00000\n00101\n00000\n01001\n10100\n00010\n", "output": ["35\n"]}, {"input": "5 4\n01000\n00101\n00000\n00001\n10100\n00111\n", "output": ["29\n"]}, {"input": "5 4\n01000\n00101\n00000\n01001\n11110\n00111\n", "output": ["22\n"]}, {"input": "9 9\n0000110010\n0001001000\n0001001000\n0001111000\n0001001000\n0001001000\n0110000110\n1000010001\n1001001011\n0111111110\n", "output": ["148\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001001000\n1101111000\n0001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["146\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001000000\n0001111000\n1001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0011111110\n", "output": ["164\n"]}, {"input": "5 4\n00000\n00101\n00000\n00001\n10100\n00010\n", "output": ["40\n"]}, {"input": "5 4\n01100\n11101\n00100\n01001\n00110\n00111\n", "output": ["20\n"]}, {"input": "9 9\n0000100000\n0001001000\n0001001100\n0001111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001001001\n0111111110\n", "output": ["158\n"]}, {"input": "9 9\n0000110010\n0001001000\n1001001000\n0001111000\n0001001000\n0001001000\n0110000110\n1000010001\n1001001011\n0111111110\n", "output": ["109\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001001000\n1101111000\n0001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0110111110\n", "output": ["147\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001000000\n0001110000\n1001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0011111110\n", "output": ["173\n"]}, {"input": "5 4\n11010\n00100\n00000\n00001\n10100\n01110\n", "output": ["27\n"]}, {"input": "4 4\n00010\n00101\n00000\n01011\n10100\n01110\n", "output": ["26\n"]}, {"input": "5 4\n00000\n00101\n00000\n00001\n10101\n00010\n", "output": ["39\n"]}, {"input": "9 9\n0000100000\n0001001000\n0001001100\n0001111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001001011\n0111111110\n", "output": ["157\n"]}, {"input": "9 9\n0000110011\n0001001000\n1001001000\n0001111000\n0001001000\n0001001000\n0110000110\n1000010001\n1001001011\n0111111110\n", "output": ["106\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001000000\n0001110000\n1101000000\n0001001000\n0110000110\n1000000001\n1001001011\n0011111110\n", "output": ["171\n"]}, {"input": "9 9\n0000110011\n0001001000\n1001001000\n0001111000\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0111111110\n", "output": ["107\n"]}, {"input": "9 9\n0000010000\n0001001000\n0001001000\n1101111100\n0001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0110111110\n", "output": ["129\n"]}, {"input": "2 9\n0000110000\n0001001000\n0001000000\n0001110000\n1101000000\n0001001000\n0110000110\n1000000001\n1001001011\n0011111110\n", "output": ["101\n"]}, {"input": "4 4\n01100\n11111\n00100\n01101\n00100\n01111\n", "output": ["14\n"]}, {"input": "9 9\n0000110011\n0001001000\n1001001000\n0011111000\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0111111110\n", "output": ["103\n"]}, {"input": "9 9\n0000010000\n0001001000\n0001001000\n1101111100\n0001000000\n0001001000\n0110000110\n1000000011\n1001001011\n0110111110\n", "output": ["128\n"]}, {"input": "3 4\n01100\n11111\n00100\n01101\n00100\n01111\n", "output": ["9\n"]}, {"input": "9 9\n0100100000\n0001001000\n0001001100\n0001111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001000011\n0011111110\n", "output": ["133\n"]}, {"input": "9 9\n0000110011\n0001001000\n1001001000\n0011111100\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0111111110\n", "output": ["90\n"]}, {"input": "2 9\n0000110000\n0001001100\n0001000000\n0001110000\n1101000000\n0001001000\n0110000110\n1000000001\n1001001001\n0011111110\n", "output": ["74\n"]}, {"input": "9 9\n0000110011\n0001001000\n1001001000\n0011111100\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0111111111\n", "output": ["89\n"]}, {"input": "1 4\n01001\n00101\n00100\n00001\n10100\n10100\n", "output": ["7\n"]}, {"input": "9 9\n0000110011\n0001011000\n1001001000\n0011111100\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0111111111\n", "output": ["88\n"]}, {"input": "9 9\n0000110011\n0001011010\n1001001000\n0011111100\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0111111111\n", "output": ["84\n"]}, {"input": "4 4\n10010\n10100\n01011\n00010\n00101\n10111\n", "output": ["19\n"]}, {"input": "3 4\n01100\n11101\n00100\n01101\n10110\n01110\n", "output": ["10\n"]}, {"input": "9 9\n0000110011\n0001011010\n1001000000\n0011111100\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0111111111\n", "output": ["85\n"]}, {"input": "1 4\n01100\n11101\n00100\n00101\n11110\n01110\n", "output": ["4\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001001000\n0001111000\n0001000000\n0001001000\n0110000110\n1000000001\n1001001001\n0111111110\n", "output": ["184\n"]}, {"input": "2 2\n101\n000\n010\n", "output": ["6\n"]}, {"input": "9 9\n0001110000\n0001001000\n0001001000\n0001111000\n0001001000\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["177\n"]}, {"input": "2 2\n101\n000\n110\n", "output": ["5\n"]}, {"input": "5 4\n10000\n00000\n00000\n00001\n10100\n00110\n", "output": ["67\n"]}, {"input": "5 4\n00000\n00100\n00000\n01001\n10100\n00010\n", "output": ["43\n"]}, {"input": "0 4\n10110\n00000\n01000\n00001\n00100\n00010\n", "output": ["2\n"]}, {"input": "9 9\n0000110010\n0001001000\n0001001000\n0001111000\n0001001000\n0001001000\n0110000110\n1000000001\n1001001011\n0111101110\n", "output": ["153\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001001000\n1001111000\n0001000000\n0001001000\n0110100110\n1000000001\n1001001011\n0111111110\n", "output": ["145\n"]}, {"input": "5 4\n00010\n00100\n00000\n00001\n10110\n00110\n", "output": ["37\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001001000\n0001111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001001001\n0111111110\n", "output": ["180\n"]}, {"input": "9 9\n0000100000\n0001001000\n0001001100\n0001111000\n0001001000\n0001001000\n0111000110\n1000000000\n1001001001\n0111111110\n", "output": ["159\n"]}, {"input": "5 4\n00000\n00101\n00000\n00001\n00101\n00010\n", "output": ["52\n"]}, {"input": "9 9\n0000100000\n0001001001\n0001001100\n0001111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001001011\n0111111110\n", "output": ["137\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001000000\n0001110000\n0101000000\n0001001000\n0110000110\n1000000001\n1001001011\n0011111110\n", "output": ["175\n"]}, {"input": "9 9\n0000110011\n0001001000\n1001001000\n0001111000\n1001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0111111110\n", "output": ["99\n"]}, {"input": "5 4\n01000\n00111\n10100\n01101\n11111\n00111\n", "output": ["13\n"]}, {"input": "9 9\n0100100001\n0001001000\n0001001100\n0001111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001001011\n0011111110\n", "output": ["113\n"]}, {"input": "9 9\n0000010000\n0001001000\n0001001000\n1101111100\n0001000000\n0001001000\n0110100110\n1000000011\n1001001011\n0110111110\n", "output": ["124\n"]}, {"input": "9 9\n0100010000\n0001001000\n0001001000\n1101111100\n0001000001\n0001001000\n0110000110\n1000000011\n1001001011\n0110111110\n", "output": ["98\n"]}, {"input": "9 9\n1100010000\n0001001000\n0001001100\n1101111100\n0001000000\n0001001000\n0110000110\n1000000011\n1001001011\n0110111110\n", "output": ["97\n"]}, {"input": "2 9\n0000110000\n0001000100\n0001000000\n0001110000\n1101000000\n0001001000\n0110001110\n1000000001\n1001001001\n0011111110\n", "output": ["78\n"]}, {"input": "9 9\n0000110011\n0001111000\n1001001000\n0011111100\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0111111111\n", "output": ["87\n"]}, {"input": "9 9\n0001110000\n0001001000\n0001001000\n1001111000\n0001001000\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["144\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001000000\n0001111000\n0001000000\n0001001000\n0110000010\n1000000001\n1001001011\n0011111110\n", "output": ["190\n"]}, {"input": "5 4\n10000\n00000\n00000\n00001\n10101\n00110\n", "output": ["66\n"]}, {"input": "9 9\n0000110000\n0001011000\n0001000000\n0001011000\n0001000010\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["162\n"]}, {"input": "9 9\n0000010010\n0001001001\n0001001000\n0001111000\n0001001000\n0001001000\n0110000110\n1000010001\n1001001011\n0111111110\n", "output": ["136\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001001010\n1101111000\n0001000000\n0001000000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["115\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001000000\n0101111000\n1001000100\n0001001000\n0110000110\n1000000001\n1001001011\n0011111110\n", "output": ["139\n"]}, {"input": "9 9\n0000110000\n0011001100\n0001000000\n0001110000\n1001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0011111110\n", "output": ["121\n"]}, {"input": "5 4\n00000\n00101\n00000\n00001\n00101\n00011\n", "output": ["51\n"]}, {"input": "4 9\n0000100000\n0001001001\n0001001100\n0001111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001001011\n0111111110\n", "output": ["111\n"]}, {"input": "5 4\n11010\n00000\n00000\n00001\n10100\n00111\n", "output": ["34\n"]}, {"input": "9 9\n0000110011\n0001001000\n1001001001\n0011111000\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0110111110\n", "output": ["86\n"]}, {"input": "9 9\n0000010000\n0001001000\n0001001000\n1101111100\n0001000000\n0001001000\n0100100110\n1000000011\n1001001011\n0110111110\n", "output": ["126\n"]}, {"input": "9 9\n1100010000\n1001001000\n0001001100\n1101111100\n0001000000\n0001001000\n0110000110\n1000000011\n1001001011\n0110111110\n", "output": ["96\n"]}, {"input": "9 9\n0000110011\n1001111000\n1001001000\n0011111100\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0111111111\n", "output": ["79\n"]}, {"input": "9 9\n0000110000\n0001011000\n0001000000\n0001011000\n0001010010\n0001001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["161\n"]}, {"input": "9 9\n0000110000\n0001001000\n1001001000\n0000111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001001001\n0111111110\n", "output": ["143\n"]}, {"input": "9 9\n0000010010\n0001001001\n0001001000\n0001111000\n0001001000\n0001001000\n0110000110\n1000010001\n1101001011\n0111111110\n", "output": ["135\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001001010\n1100111000\n0001000000\n0001000000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["116\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001000000\n0101111000\n1001000100\n0011001000\n0110000110\n1000000001\n1001001011\n0011111110\n", "output": ["138\n"]}, {"input": "9 9\n0000110000\n0011001100\n0001000000\n0001110000\n1000000000\n0001001000\n0110000110\n1000000001\n1001001011\n0011111110\n", "output": ["123\n"]}, {"input": "5 4\n00000\n00101\n00000\n00001\n00101\n00111\n", "output": ["48\n"]}, {"input": "4 9\n0000100000\n0101001001\n0001001100\n0001111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001001011\n0111111110\n", "output": ["73\n"]}, {"input": "3 4\n10010\n11101\n01000\n00011\n00100\n00110\n", "output": ["12\n"]}, {"input": "9 9\n0000110011\n0001001000\n1001001100\n0001111000\n1001001001\n0001001000\n0110000110\n0000010001\n1001001011\n0111111110\n", "output": ["76\n"]}, {"input": "2 4\n00010\n10100\n01001\n00011\n00100\n10111\n", "output": ["11\n"]}, {"input": "9 9\n0000010000\n0001001000\n0001001000\n1101111100\n0001000000\n0001001000\n0100100110\n1000000011\n1001001001\n0110111110\n", "output": ["127\n"]}, {"input": "2 9\n0000110000\n0001001100\n0011000000\n0001110010\n1101000000\n0001001000\n0110000110\n1000000001\n1001000001\n0011111110\n", "output": ["57\n"]}, {"input": "9 9\n0000110011\n0001001000\n1001001010\n0011111100\n1001001000\n0001001000\n0110000110\n0000010001\n1001000011\n0111111111\n", "output": ["77\n"]}, {"input": "9 9\n0000110011\n1001111000\n1001000000\n0011111100\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0111111111\n", "output": ["80\n"]}, {"input": "9 9\n0100110000\n0001001000\n0001101000\n0001111000\n0001000000\n0101001000\n0110000110\n1000000001\n1001001001\n0111111110\n", "output": ["142\n"]}, {"input": "5 4\n10001\n00000\n00000\n00001\n10101\n10110\n", "output": ["42\n"]}, {"input": "0 4\n11110\n01000\n01000\n00001\n00110\n00010\n", "output": ["1\n"]}, {"input": "9 9\n0000010010\n0001001001\n0001001100\n0001111000\n0001001000\n0001001000\n0110000110\n1000010001\n1101001011\n0111111110\n", "output": ["131\n"]}, {"input": "9 9\n0000110000\n0001001000\n0001001010\n1100111000\n0001000000\n0001000000\n0110000110\n1000000001\n1001001011\n0111111100\n", "output": ["117\n"]}, {"input": "9 9\n0000110000\n0011001100\n0001000000\n1001110000\n1000000000\n0001001000\n0110000110\n1000000001\n1001001011\n0011111110\n", "output": ["118\n"]}, {"input": "9 9\n0000110000\n0001001100\n0001000000\n0001110100\n0101000100\n0001001000\n0110000110\n1000000001\n1001001011\n0011111110\n", "output": ["125\n"]}, {"input": "9 9\n0000110011\n0101001000\n1001001001\n0001111000\n0001001000\n0001001000\n0110000110\n0000010001\n1001001011\n0110111110\n", "output": ["82\n"]}, {"input": "9 9\n0000010000\n0001001000\n0001001000\n1101111101\n0001000000\n0001001000\n0100100110\n1000000011\n1001001001\n0110111110\n", "output": ["110\n"]}, {"input": "2 9\n0000010000\n0001001100\n0001000000\n0001110000\n1101000000\n0001101000\n0110001110\n1000000000\n1001001001\n0011111110\n", "output": ["75\n"]}, {"input": "9 9\n0100110000\n0001001000\n0001101000\n0001111000\n0001000000\n0101001000\n0110001110\n1000000001\n1001001001\n0111111110\n", "output": ["140\n"]}, {"input": "9 9\n0000010010\n0001000001\n0001001100\n0001111000\n0001001000\n0001001000\n0110000110\n1000010001\n1101001011\n0111111110\n", "output": ["132\n"]}, {"input": "9 9\n0000010000\n0001001000\n0001001100\n1101111101\n0001000000\n0001001000\n0100100110\n1000000011\n1001001001\n0110111110\n", "output": ["105\n"]}, {"input": "9 9\n1100010000\n1001001000\n0101001100\n1101111000\n0001000000\n0001001000\n0110000110\n1000000011\n1001001011\n0110111010\n", "output": ["102\n"]}, {"input": "9 9\n0100110000\n0001001000\n0001101000\n0001011000\n0001000000\n0101001000\n0110001110\n1000000001\n1001001001\n0111111110\n", "output": ["141\n"]}, {"input": "7 9\n0000110000\n0001000000\n0001000000\n0001111000\n1001000000\n0001001000\n0110000111\n0000000001\n1001001011\n0111111110\n", "output": ["189\n"]}, {"input": "2 9\n0000110000\n0000001100\n0011000000\n1001110010\n1101000000\n0001001000\n0110000110\n1000000011\n1001000001\n0011111110\n", "output": ["60\n"]}, {"input": "9 9\n0000110011\n0001001000\n1001001010\n0011111100\n1001001000\n0001001100\n0110000111\n0010010001\n1001000011\n0111111111\n", "output": ["72\n"]}, {"input": "9 9\n0000110000\n0001011001\n0101000000\n0001011000\n0101010010\n0101001000\n0110000110\n1000000001\n1001001011\n0111111110\n", "output": ["83\n"]}, {"input": "5 4\n10000\n00001\n00000\n00001\n01110\n00111\n", "output": ["41\n"]}, {"input": "9 9\n0000010010\n0001000001\n0001001100\n0001111000\n0001011000\n0001001000\n0110000110\n1000010001\n1101101011\n0111111110\n", "output": ["130\n"]}, {"input": "9 9\n0000100000\n0001001000\n0001000100\n0001111010\n0001001000\n0001001000\n0011000110\n1100000000\n1001000001\n1111111110\n", "output": ["155\n"]}, {"input": "9 9\n0000010000\n0001001000\n0001001100\n1101111101\n0001000000\n0001001000\n0100100110\n1000100011\n1001001001\n0110101110\n", "output": ["104\n"]}, {"input": "9 9\n0000110011\n0001001000\n1001001010\n0011111100\n1001001000\n0001001100\n0110000111\n1010010001\n1001000011\n0111111111\n", "output": ["71\n"]}, {"input": "7 9\n0000100000\n0001000000\n0001000000\n0001111000\n1001000000\n0001001001\n0110000111\n0000000001\n1001001011\n0111111110\n", "output": ["195\n"]}, {"input": "9 9\n0000100000\n0001001000\n0001000100\n0011111010\n0001001000\n0001001000\n0011000110\n1100000000\n1001000001\n1111111110\n", "output": ["134\n"]}, {"input": "5 4\n00010\n00100\n00000\n01001\n10100\n00110\n", "output": ["33\n"]}, {"input": "5 4\n00000\n00101\n00000\n01001\n10100\n00110\n", "output": ["33\n"]}, {"input": "5 4\n01000\n00101\n00000\n01001\n10100\n00110\n", "output": ["25\n"]}, {"input": "5 4\n01000\n00101\n00000\n01001\n10100\n00111\n", "output": ["24\n"]}, {"input": "9 9\n0000100000\n0001001000\n0001001000\n0001111000\n0001001000\n0001001000\n0110000110\n1000000001\n1001001001\n0111111110\n", "output": ["183\n"]}, {"input": "5 4\n10010\n00000\n01000\n00011\n00100\n00110\n", "output": ["31\n"]}, {"input": "5 4\n11010\n00000\n01000\n00001\n10100\n00110\n", "output": ["24\n"]}, {"input": "5 4\n11010\n00100\n00000\n01001\n10100\n00110\n", "output": ["23\n"]}, {"input": "5 4\n01000\n00101\n00100\n01000\n10110\n00111\n", "output": ["23\n"]}, {"input": "5 4\n01000\n10101\n00100\n01101\n10110\n00111\n", "output": ["17\n"]}, {"input": "5 4\n01100\n10101\n00100\n01001\n00110\n00111\n", "output": ["21\n"]}, {"input": "5 4\n01100\n10101\n00100\n01000\n10110\n01111\n", "output": ["17\n"]}, {"input": "4 4\n01100\n10101\n00100\n01001\n00110\n01111\n", "output": ["16\n"]}, {"input": "9 9\n0000100000\n0001001000\n0001001000\n0001111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001001001\n0111111110\n", "output": ["181\n"]}, {"input": "5 4\n10010\n00100\n01000\n00011\n00100\n00110\n", "output": ["29\n"]}, {"input": "5 4\n11010\n00000\n01000\n00001\n10100\n00111\n", "output": ["23\n"]}, {"input": "5 4\n10011\n00001\n00000\n00001\n10100\n00110\n", "output": ["35\n"]}, {"input": "5 4\n11010\n00100\n00000\n00001\n10100\n00110\n", "output": ["28\n"]}, {"input": "5 4\n00010\n00101\n00000\n01011\n10100\n01110\n", "output": ["28\n"]}, {"input": "5 4\n01000\n00101\n00000\n00001\n10100\n00110\n", "output": ["30\n"]}, {"input": "5 4\n01000\n00101\n00000\n01001\n11111\n00111\n", "output": ["21\n"]}, {"input": "5 4\n01000\n00101\n00100\n01010\n10110\n00111\n", "output": ["21\n"]}, {"input": "5 4\n01100\n10101\n00100\n01000\n10111\n01111\n", "output": ["15\n"]}, {"input": "4 4\n01100\n10101\n00100\n01001\n00100\n01111\n", "output": ["17\n"]}, {"input": "5 4\n10010\n10100\n01000\n00011\n00100\n00110\n", "output": ["28\n"]}, {"input": "5 4\n01000\n00101\n00100\n00001\n10100\n00110\n", "output": ["27\n"]}, {"input": "5 4\n01000\n00101\n10000\n01001\n11111\n00111\n", "output": ["18\n"]}, {"input": "5 4\n01000\n00101\n00100\n01011\n10110\n00111\n", "output": ["20\n"]}, {"input": "4 4\n01100\n10101\n00100\n01101\n00100\n01111\n", "output": ["16\n"]}, {"input": "5 4\n10010\n10100\n01001\n00011\n00100\n00110\n", "output": ["26\n"]}, {"input": "9 9\n0000010000\n0001001000\n0001001000\n1101111000\n0001000000\n0001001000\n0110000110\n1000000001\n1001001011\n0110111110\n", "output": ["148\n"]}, {"input": "5 4\n11010\n00100\n00000\n00001\n10100\n01111\n", "output": ["26\n"]}, {"input": "5 4\n00000\n00101\n00100\n00001\n10101\n00010\n", "output": ["36\n"]}, {"input": "5 4\n01000\n00101\n00100\n00001\n10100\n00100\n", "output": ["31\n"]}, {"input": "5 4\n01000\n00101\n10000\n01101\n11111\n00111\n", "output": ["17\n"]}, {"input": "5 4\n01000\n00101\n00100\n00011\n10110\n00111\n", "output": ["24\n"]}, {"input": "4 4\n01100\n11101\n00100\n01101\n00100\n01111\n", "output": ["15\n"]}, {"input": "9 9\n0000100000\n0001001000\n0001001100\n0001111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001001011\n0011111110\n", "output": ["158\n"]}, {"input": "4 4\n10010\n10100\n01001\n00011\n00100\n00110\n", "output": ["20\n"]}, {"input": "5 4\n11010\n00100\n00000\n00011\n10100\n01111\n", "output": ["24\n"]}, {"input": "5 4\n00000\n00101\n00100\n00001\n10101\n00011\n", "output": ["35\n"]}, {"input": "3 4\n01000\n00101\n00100\n00001\n10100\n00100\n", "output": ["25\n"]}, {"input": "5 4\n01000\n00101\n10100\n01101\n11111\n00111\n", "output": ["15\n"]}, {"input": "9 9\n0100100000\n0001001000\n0001001100\n0001111000\n0001001000\n0001001000\n0111000110\n1000000001\n1001001011\n0011111110\n", "output": ["129\n"]}, {"input": "4 4\n10010\n10100\n01001\n00011\n00100\n00111\n", "output": ["20\n"]}, {"input": "2 9\n0000110000\n0001001000\n0001000000\n0001110000\n1101000000\n0001001000\n0110000110\n1000000001\n1001001001\n0011111110\n", "output": ["101\n"]}, {"input": "5 4\n11010\n00110\n00000\n00011\n10100\n01111\n", "output": ["22\n"]}, {"input": "5 4\n00000\n00101\n00100\n10001\n10101\n00011\n", "output": ["30\n"]}, {"input": "3 4\n01001\n00101\n00100\n00001\n10100\n00100\n", "output": ["23\n"]}, {"input": "5 4\n01000\n00100\n10100\n01101\n11111\n00111\n", "output": ["23\n"]}, {"input": "4 4\n10010\n10100\n01001\n00011\n00100\n10111\n", "output": ["20\n"]}, {"input": "9 9\n0100010000\n0001001000\n0001001000\n1101111100\n0001000000\n0001001000\n0110000110\n1000000011\n1001001011\n0110111110\n", "output": ["109\n"]}, {"input": "5 4\n11000\n00110\n00000\n00011\n10100\n01111\n", "output": ["24\n"]}, {"input": "5 4\n00000\n00111\n00100\n10001\n10101\n00011\n", "output": ["28\n"]}, {"input": "3 4\n01001\n00101\n00100\n00001\n10100\n10100\n", "output": ["23\n"]}, {"input": "5 4\n01000\n00100\n10100\n01101\n01111\n00111\n", "output": ["25\n"]}, {"input": "3 4\n01100\n11111\n00100\n01101\n10100\n01111\n", "output": ["9\n"]}, {"input": "4 4\n10010\n10100\n01001\n00010\n00100\n10111\n", "output": ["22\n"]}, {"input": "9 9\n1100010000\n0001001000\n0001001000\n1101111100\n0001000000\n0001001000\n0110000110\n1000000011\n1001001011\n0110111110\n", "output": ["107\n"]}, {"input": "2 9\n0000110000\n0001001100\n0001000000\n0001110000\n1101000000\n0001001000\n0110001110\n1000000001\n1001001001\n0011111110\n", "output": ["74\n"]}], "source_codes": ["\nfn nearest_pole_distance(grid: &Vec<Vec<i32>>, n: usize, m: usize) -> Vec<Vec<i32>> {\n    let mut poles: Vec<(usize, usize)> = Vec::new();\n    for i in 0..=n {\n        for j in 0..=m {\n            if grid[i][j] == 1 {\n                poles.push((i, j));\n            }\n        }\n    }\n\n    let mut dp: Vec<Vec<i32>> = vec![vec![0; m + 1]; n + 1];\n\n    for i in 0..=n {\n        for j in 0..=m {\n            if grid[i][j] == 0 {\n                let mut min_dist = std::i32::MAX;\n                for (pole_x, pole_y) in &poles {\n                    let dist = (pole_x - i) as i32 * (pole_x - i) as i32 + (pole_y - j) as i32 * (pole_y - j) as i32;\n                    min_dist = min_dist.min(dist);\n                }\n                dp[i][j] = min_dist;\n            }\n        }\n    }\n\n    dp\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut iter = input_line.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let m: usize = iter.next().unwrap().parse().unwrap();\n\n    let mut grid: Vec<Vec<i32>> = Vec::new();\n    for _ in 0..=n {\n        input_line.clear();\n        std::io::stdin().read_line(&mut input_line).unwrap();\n        let row: Vec<i32> = input_line.trim().chars().map(|c| c.to_digit(10).unwrap() as i32).collect();\n        grid.push(row);\n    }\n\n    let result = nearest_pole_distance(&grid, n, m);\n\n    let total_sum: i32 = result.iter().map(|row| row.iter().sum::<i32>()).sum();\n    println!(\"{}\", total_sum);\n}\n\n\n"], "responses": ["\nfn nearest_pole_distance(grid: &Vec<Vec<i32>>, n: usize, m: usize) -> Vec<Vec<i32>> {\n    let mut poles: Vec<(usize, usize)> = Vec::new();\n    for i in 0..=n {\n        for j in 0..=m {\n            if grid[i][j] == 1 {\n                poles.push((i, j));\n            }\n        }\n    }\n\n    let mut dp: Vec<Vec<i32>> = vec![vec![0; m + 1]; n + 1];\n\n    for i in 0..=n {\n        for j in 0..=m {\n            if grid[i][j] == 0 {\n                let mut min_dist = std::i32::MAX;\n                for (pole_x, pole_y) in &poles {\n                    let dist = (pole_x - i) as i32 * (pole_x - i) as i32 + (pole_y - j) as i32 * (pole_y - j) as i32;\n                    min_dist = min_dist.min(dist);\n                }\n                dp[i][j] = min_dist;\n            }\n        }\n    }\n\n    dp\n}\n\nfn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&mut input_line).unwrap();\n    let mut iter = input_line.split_whitespace();\n    let n: usize = iter.next().unwrap().parse().unwrap();\n    let m: usize = iter.next().unwrap().parse().unwrap();\n\n    let mut grid: Vec<Vec<i32>> = Vec::new();\n    for _ in 0..=n {\n        input_line.clear();\n        std::io::stdin().read_line(&mut input_line).unwrap();\n        let row: Vec<i32> = input_line.trim().chars().map(|c| c.to_digit(10).unwrap() as i32).collect();\n        grid.push(row);\n    }\n\n    let result = nearest_pole_distance(&grid, n, m);\n\n    let total_sum: i32 = result.iter().map(|row| row.iter().sum::<i32>()).sum();\n    println!(\"{}\", total_sum);\n}\n\n\n"], "prompt_tokens": [21949], "completion_tokens": [6287], "no_of_try": 1, "api_calls": 17, "is_solved": true, "language": "Rust", "task_id": 1575}
{"name": "1579_A. Casimir's String Solitaire", "description": "Casimir has a string s which consists of capital Latin letters 'A', 'B', and 'C' only. Each turn he can choose to do one of the two following actions:\n\n  * he can either erase exactly one letter 'A' and exactly one letter 'B' from arbitrary places of the string (these letters don't have to be adjacent); \n  * or he can erase exactly one letter 'B' and exactly one letter 'C' from arbitrary places in the string (these letters don't have to be adjacent). \n\n\n\nTherefore, each turn the length of the string is decreased exactly by 2. All turns are independent so for each turn, Casimir can choose any of two possible actions.\n\nFor example, with s = \"ABCABC\" he can obtain a string s = \"ACBC\" in one turn (by erasing the first occurrence of 'B' and the second occurrence of 'A'). There are also many other options for a turn aside from this particular example.\n\nFor a given string s determine whether there is a sequence of actions leading to an empty string. In other words, Casimir's goal is to erase all letters from the string. Is there a way to do this?\n\nInput\n\nThe first line contains an integer t (1 \u2264 t \u2264 1000) \u2014 the number of test cases.\n\nEach test case is described by one string s, for which you need to determine if it can be fully erased by some sequence of turns. The string s consists of capital letters 'A', 'B', 'C' and has a length from 1 to 50 letters, inclusive.\n\nOutput\n\nPrint t lines, each line containing the answer to the corresponding test case. The answer to a test case should be YES if there is a way to fully erase the corresponding string and NO otherwise.\n\nYou may print every letter in any case you want (so, for example, the strings yEs, yes, Yes, and YES will all be recognized as positive answers).\n\nExample\n\nInput\n\n\n6\nABACAB\nABBA\nAC\nABC\nCABCBB\nBCBCBCBCBCBCBCBC\n\n\nOutput\n\n\nNO\nYES\nNO\nNO\nYES\nYES", "tags": ["math", "strings"], "difficulty": 7, "id": 1579, "sample_io": [{"input": "6\nABACAB\nABBA\nAC\nABC\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}], "test_list": [{"input": "6\nABACAB\nABBA\nAC\nABC\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nAC\nABC\nCABCBB\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAB\nABBA\nBC\nABB\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nABC\nCABCBB\nBCBCBCBCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nAC\nACB\nCACCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nABBB\nAC\nABA\nCABCBB\nCCCBCBBBBBCBCCCB\n", "output": ["NO\nNO\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nABC\nCABCBB\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nYES\nNO\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nABC\nBACCBB\nBCBBBCBCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nABC\nCABCBA\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nBACABA\nABBB\nAC\nABA\nCABCBA\nBCCCBCBBBBBCBCCC\n", "output": ["NO\nNO\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCA\nACB\nCACCBB\nACBBBCCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABBCAB\nCBAA\nCA\nABC\nBACCBB\nBCBBBCBCBCACBCBC\n", "output": ["YES\nNO\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCB\nAAC\nCABBBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nNO\nYES\n"]}, {"input": "6\nBABABA\nACBB\nAC\nABA\nCABCBA\nBCCBCBBBBCCBCCCB\n", "output": ["YES\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nCABABA\nABAA\nCB\nAAC\nCABBBB\nABCBCBCBCBCCCBCB\n", "output": ["NO\nNO\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nCABABA\nABAA\nBB\nAAC\nCABBBB\nABCBCBCBCBCCCBCB\n", "output": ["NO\nNO\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABBCAB\nABBA\nBC\nABC\nBACCBB\nBBBCACCCBCACBCBC\n", "output": ["YES\nYES\nYES\nNO\nYES\nNO\n"]}, {"input": "6\nABBCAB\nACBA\nAC\nABC\nCABCBB\nCBCBCACBCBCBCBCB\n", "output": ["YES\nNO\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nBABCAB\nABBA\nAC\nABC\nCACCBB\nCBCBCACBCCCACBBB\n", "output": ["YES\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABABAB\nABBA\nBC\nABC\nCABBCB\nBBCBCBCBCBCCCBCB\n", "output": ["YES\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBB\nAC\nABA\nCABCBB\nCBCBBBCCCBCBCBCC\n", "output": ["NO\nNO\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nBAACBA\nABBB\nBC\nAAC\nCABBCB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nNO\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nCABABA\nABBB\nAB\nABA\nCABCBA\nBCCBCBBBBCCBCCCB\n", "output": ["NO\nNO\nYES\nNO\nNO\nYES\n"]}, {"input": "6\nBBAACB\nABAA\nBC\nABA\nACBCBB\nCBCBCBCBCBCBCBCB\n", "output": ["YES\nNO\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nCBBABA\nABAA\nCB\nAAC\nCABBBB\nABCBCBCBCBCCCBCB\n", "output": ["YES\nNO\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nABBCAB\nABCA\nBC\nABC\nCABCBB\nCBCBCACBCBCBCBCB\n", "output": ["YES\nNO\nYES\nNO\nYES\nNO\n"]}, {"input": "6\nBACABA\nABBB\nBC\nABA\nCABCBB\nCBCBBBCCCCCBBBCC\n", "output": ["NO\nNO\nYES\nNO\nYES\nNO\n"]}, {"input": "6\nBBACAB\nAABA\nAC\nABC\nCABCBA\nBCBCACBCBCBCBCBC\n", "output": ["YES\nNO\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABBCAB\nABAB\nBC\nCCB\nBACCAB\nBBBBBCCCBCACBCBC\n", "output": ["YES\nYES\nYES\nNO\nNO\nYES\n"]}, {"input": "6\nBAABAB\nABBB\nCA\nABB\nCBBCBB\nBCBCBCBCBCBCBCBC\n", "output": ["YES\nNO\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABBCAB\nABAA\nBC\nCCB\nBACCAB\nBBBBBCCCBCACBCBC\n", "output": ["YES\nNO\nYES\nNO\nNO\nYES\n"]}, {"input": "6\nABACAB\nABBA\nAC\nABB\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nAC\nABC\nCABCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nAC\nABC\nCABCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nABA\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nABC\nBACCBB\nBCBCBCBCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nAC\nACB\nCABCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nABBA\nBC\nABA\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nABC\nBACCBB\nBBBCBCCCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nBACABA\nABBA\nAC\nABA\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nABC\nBACCBB\nBBBCACCCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nCA\nACB\nCACCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nAABB\nAC\nABA\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nABC\nBACCBB\nCBCBCACBCCCACBBB\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nCA\nACA\nCACCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nAABB\nAC\nABA\nCABCBB\nCBCBCBCBBBCBCCCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nAABB\nAC\nABA\nCABCBB\nCCCBCBBBBBCBCCCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCA\nABC\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nABC\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCA\nABB\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nABC\nCABCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nABC\nCABCBB\nCBCBCACBCBCBCBCB\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nAC\nABC\nCABCBB\nCBCBCBBBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABCAAB\nABBA\nBC\nABA\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nAC\nACB\nCABCBB\nBCBCCCBCBCBCBCBB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nABBA\nBC\nABA\nACBCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nABC\nBACCBB\nBBBBBCCCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nAC\nACB\nBBCCAC\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nACBA\nAC\nABA\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nNO\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCA\nACB\nCACCBB\nBBCBBCCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nAABB\nAC\nABA\nCABCBB\nCBCBBBCCCBCBCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBABCAB\nABBA\nAC\nABC\nBACCBB\nCBCBCACBCCCACBBB\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nCA\nACA\nCABCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nAABB\nCA\nABA\nCABCBB\nCBCBCBCBBBCBCCCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nABBB\nAC\nABA\nCABCBB\nBCCCBCBBBBBCBCCC\n", "output": ["NO\nNO\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCA\nCBA\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCA\nABB\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nABC\nCABBCB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nABC\nBBCBAC\nCBCBCACBCBCBCBCB\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nAC\nACC\nCABCBB\nCBCBCBBBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABCAAB\nABBA\nBC\nABA\nCABCBB\nCBCBCBCBCBCACBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nNO\n"]}, {"input": "6\nABBCAB\nBBAA\nAC\nABC\nBACCBB\nBCBBBCBCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nBABA\nAC\nACB\nCABCBB\nBCBCCCBCBCBCBCBB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBCAABA\nABBA\nBC\nABA\nACBCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAA\nABBA\nAC\nABC\nBACCBB\nBBBBBCCCBCACBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCA\nACB\nBBCCAC\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nACBA\nAC\nBAA\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nNO\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCA\nACB\nCACCBB\nBCBBBCCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAB\nAABB\nAC\nABA\nCABCBB\nCBCBBBCCCBCBCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBABCAB\nABBA\nAC\nABC\nBACCBB\nCBCBCACBCACCCBBB\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nCA\nAAC\nCABCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nAABB\nCA\nABA\nCABCBB\nBCCCBCBBBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCA\nCBA\nCABBBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCA\nBAB\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nCBA\nCABCBA\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nABACAB\nABBA\nBC\nAAC\nCABBCB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nBBAA\nAC\nACC\nCABCBB\nCBCBCBBBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nBBAA\nCA\nABC\nBACCBB\nBCBBBCBCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABAACB\nABBA\nBC\nABA\nACBCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nCACABA\nABBA\nCA\nACB\nBBCCAC\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nACBA\nAC\nAAB\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nNO\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nAABB\nAC\nABA\nCABCBB\nCBCBBBCCCBCBCBCC\n", "output": ["NO\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nCA\nAAC\nCABBBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nCABABA\nABBB\nAC\nABA\nCABCBA\nBCCCBCBBBBBCBCCC\n", "output": ["NO\nNO\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCA\nCBA\nCABBAB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nAC\nBAB\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nBCA\nCABCBA\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nABCAAB\nABBA\nBC\nAAC\nCABBCB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nBBAA\nAC\nCAC\nCABCBB\nCBCBCBBBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBBACAC\nABBA\nCA\nACB\nBBCCAC\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCA\nBCB\nCACCBB\nACBBBCCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABACAB\nAABB\nCA\nABA\nCABCBB\nCBCBBBCCCBCBCBCC\n", "output": ["NO\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nCABABA\nABBB\nAC\nABA\nCABCBA\nBCCCBCCBBBBCBCCB\n", "output": ["NO\nNO\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCA\nCBA\nCABBAB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nAABB\nAC\nBAB\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nACB\nCABCBA\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nBAACBA\nABBA\nBC\nAAC\nCABBCB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABABAC\nABBA\nCB\nAAC\nCABBBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nNO\nYES\n"]}, {"input": "6\nCABABA\nABBB\nAC\nABA\nCABCBA\nBCCBCBBBBCCBCCCB\n", "output": ["NO\nNO\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAB\nAABB\nCA\nBAB\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nACB\nABCBAC\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nCABABA\nABBA\nCB\nAAC\nCABBBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nNO\nYES\n"]}, {"input": "6\nCABABA\nACBB\nAC\nABA\nCABCBA\nBCCBCBBBBCCBCCCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAB\nAABB\nCA\nBAB\nBBCBAC\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nACB\nABCBAC\nCBCBCACBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nCABABA\nABBA\nCB\nAAC\nCABBBB\nABCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nABACAB\nABBA\nBC\nACB\nABCBAC\nCBCBCACCCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nBABABA\nACBB\nAC\nABA\nBACCBA\nBCCBCBBBBCCBCCCB\n", "output": ["YES\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nCABABA\nABAA\nBC\nAAC\nCABBBB\nABCBCBCBCBCCCBCB\n", "output": ["NO\nNO\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nABABAB\nACBB\nAC\nABA\nBACCBA\nBCCBCBBBBCCBCCCB\n", "output": ["YES\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABABAC\nABAA\nBB\nAAC\nCABBBB\nABCBCBCBCBCCCBCB\n", "output": ["NO\nNO\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABABAC\nABAA\nBB\nACA\nCABBBB\nABCBCBCBCBCCCBCB\n", "output": ["NO\nNO\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABABAC\nABAA\nBB\nACA\nCABBBB\nACCBCBCBCBCCCBCB\n", "output": ["NO\nNO\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABABAC\nABAA\nBB\nACA\nBBBBAC\nACCBCBCBCBCCCBCB\n", "output": ["NO\nNO\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABABAC\nABAA\nBB\nACB\nBBBBAC\nACCBCBCBCBCCCBCB\n", "output": ["NO\nNO\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABABAC\nABAA\nBB\nACB\nBBBBAC\nACBBCBCBCBCCCBCC\n", "output": ["NO\nNO\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABACAB\nABBA\nAC\nAAC\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nAC\nABC\nCABCBB\nCBCBCACBCBCBCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAB\nABBA\nAC\nABB\nCABCBB\nCBCBCBCBCBCACBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAB\nAABB\nAC\nABC\nCABCBB\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAB\nABBA\nAC\nABC\nBACCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nABB\nCACBBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nAC\nABC\nCABCBC\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nABA\nCAACBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nNO\nYES\n"]}, {"input": "6\nABBBAC\nABBA\nAC\nABC\nBACCBB\nBCBCBCBCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nCA\nACB\nCABCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nABBA\nBC\nABA\nBBCBAC\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nACC\nBACCBB\nBBBCBCCCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nBA\nACB\nCACCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nABBA\nCA\nABA\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nAABB\nBC\nABA\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABABAC\nABBA\nCA\nACA\nCACCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nAABB\nCA\nABA\nBABCBB\nCBCBCBCBBBCBCCCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nAABB\nCA\nABA\nCABCBB\nCCCBCBBBBBCBCCCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCA\nAAC\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBB\nABC\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBB\nCA\nABB\nCABCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nNO\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nACB\nCABCBB\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nYES\nNO\n"]}, {"input": "6\nABACAB\nABBA\nCB\nABC\nCABCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nACABAC\nABBA\nAC\nABC\nCABCBB\nCBCBCBBBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nBAC\nBACCBB\nBCBBBCBCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nAB\nACB\nCABCBB\nBCBCCCBCBCBCBCBB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nABBA\nBC\nABA\nACBCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nABAB\nAC\nABC\nBACCBB\nBBBBBCCCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nBABA\nAC\nACB\nBBCCAC\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nACBA\nAC\nABA\nACBCBB\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nNO\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCA\nACB\nCACCBB\nBBBBBCCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nBAAABC\nAABB\nAC\nABA\nCABCBB\nCBCBBBCCCBCBCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCA\nACA\nCABCBC\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACABA\nAABB\nCA\nABA\nCABBBC\nCBCBCBCBBBCBCCCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nABBB\nAC\nBBA\nCABCBB\nBCCCBCBBBBBCBCCC\n", "output": ["NO\nNO\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nAC\nCBA\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCA\nABB\nBABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAB\nABAB\nBC\nABC\nCABCBA\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nABBCAB\nABBA\nAC\nCBA\nBBCBAC\nCBCBCACBCBCBCBCB\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nBC\nACC\nCABCBB\nCBCBCBBBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABCAAB\nABBA\nBC\nABA\nCABCBB\nCBCBBBCBCBCACBCC\n", "output": ["NO\nYES\nYES\nNO\nYES\nNO\n"]}, {"input": "6\nABBCAB\nBBAA\nAC\nABC\nBBCCAB\nBCBBBCBCBCACBCBC\n", "output": ["YES\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nBACA\nAC\nACB\nCABCBB\nBCBCCCBCBCBCBCBB\n", "output": ["NO\nNO\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAA\nABBA\nAB\nABC\nBACCBB\nBBBBBCCCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABCCAA\nABBA\nCA\nACB\nBBCCAC\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCA\nACB\nBBCCAC\nBCBBBCCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBACBAB\nABBA\nAC\nABC\nBACCBB\nCBCBCACBCACCCBBB\n", "output": ["YES\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nAC\nAAC\nCABCBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBBCAAA\nAABB\nCA\nABA\nCABCBB\nBCCCBCBBBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCA\nCBA\nCABBBB\nBCACBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABACAB\nABBA\nCA\nBBA\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nBC\nCBB\nCABCBA\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nABACAB\nABBA\nBC\nCAA\nCABBCB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nBABA\nAC\nACC\nCABCBB\nCBCBCBBBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nBBAA\nCA\nABC\nBACCBB\nCBCBCACBCBCBBBCB\n", "output": ["YES\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBBAACB\nABBA\nBC\nABA\nACBCBB\nCBCBCBCBCBCBCBCB\n", "output": ["YES\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nACBA\nAC\nAAB\nCABCBC\nCBCBCBCBCBCBCBCB\n", "output": ["NO\nNO\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAC\nABBA\nAC\nACB\nCACCBB\nACBBBCCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nABACAC\nABBA\nCA\nAAC\nBBBBAC\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABABAC\nABBB\nAC\nABA\nCABCBA\nBCCCBCBBBBBCBCCC\n", "output": ["NO\nNO\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCA\nBCA\nCABBAB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nAC\nBAB\nCCBABB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABCAAB\nABBA\nCC\nAAC\nCABBCB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nBBAA\nBC\nCAC\nCABCBB\nCBCBCBBBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nABBCAB\nCABA\nCA\nABC\nBACCBB\nBCBBBCBCBCACBCBC\n", "output": ["YES\nNO\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCA\nBCB\nCACCBC\nACBBBCCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "6\nAAACAB\nAABB\nCA\nABA\nCABCBB\nCBCBBBCCCBCBCBCC\n", "output": ["NO\nYES\nNO\nNO\nYES\nNO\n"]}, {"input": "6\nABACAC\nABBA\nBB\nAAC\nCABBBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nABACAC\nABBA\nCA\nCBA\nCABBBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nNO\nYES\n"]}, {"input": "6\nBAACAB\nAABB\nAC\nBAB\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nABACAB\nABBA\nCB\nACB\nCABCBA\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}, {"input": "6\nABABAC\nABBA\nCB\nAAC\nCAABBB\nBBCBCBCBCBCCCBCB\n", "output": ["NO\nYES\nYES\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nAABB\nCA\nBAB\nCABCBB\nBCBCBCBCBCBCBCBC\n", "output": ["NO\nYES\nNO\nNO\nYES\nYES\n"]}, {"input": "6\nBACABA\nABBA\nBC\nACB\nABCBAC\nBCBCBCBCBCACBCBC\n", "output": ["NO\nYES\nYES\nNO\nNO\nNO\n"]}], "source_codes": ["\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let t: i32 = input.trim().parse().unwrap();\n\n    for _ in 0..t {\n        let mut s = String::new();\n        io::stdin().read_line(&mut s).unwrap();\n        let count_ab = s.matches('A').count() + s.matches('B').count();\n        let count_bc = s.matches('B').count() + s.matches('C').count();\n\n        if count_ab % 2 == 0 && count_bc % 2 == 0 {\n            println!(\"YES\");\n        } else {\n            println!(\"NO\");\n        }\n    }\n}\n\n\n"], "responses": ["\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let t: i32 = input.trim().parse().unwrap();\n\n    for _ in 0..t {\n        let mut s = String::new();\n        io::stdin().read_line(&mut s).unwrap();\n        let count_ab = s.matches('A').count() + s.matches('B').count();\n        let count_bc = s.matches('B').count() + s.matches('C').count();\n\n        if count_ab % 2 == 0 && count_bc % 2 == 0 {\n            println!(\"YES\");\n        } else {\n            println!(\"NO\");\n        }\n    }\n}\n\n\n"], "prompt_tokens": [46649], "completion_tokens": [7193], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1579}
{"name": "1579_B. Shifting Sort", "description": "The new generation external memory contains an array of integers a[1 \u2026 n] = [a_1, a_2, \u2026, a_n].\n\nThis type of memory does not support changing the value of an arbitrary element. Instead, it allows you to cut out any segment of the given array, cyclically shift (rotate) it by any offset and insert it back into the same place.\n\nTechnically, each cyclic shift consists of two consecutive actions: \n\n  1. You may select arbitrary indices l and r (1 \u2264 l < r \u2264 n) as the boundaries of the segment. \n  2. Then you replace the segment a[l \u2026 r] with it's cyclic shift to the left by an arbitrary offset d. The concept of a cyclic shift can be also explained by following relations: the sequence [1, 4, 1, 3] is a cyclic shift of the sequence [3, 1, 4, 1] to the left by the offset 1 and the sequence [4, 1, 3, 1] is a cyclic shift of the sequence [3, 1, 4, 1] to the left by the offset 2. \n\n\n\nFor example, if a = [1, \\color{blue}{3, 2, 8}, 5], then choosing l = 2, r = 4 and d = 2 yields a segment a[2 \u2026 4] = [3, 2, 8]. This segment is then shifted by the offset d = 2 to the left, and you get a segment [8, 3, 2] which then takes the place of of the original elements of the segment. In the end you get a = [1, \\color{blue}{8, 3, 2}, 5].\n\nSort the given array a using no more than n cyclic shifts of any of its segments. Note that you don't need to minimize the number of cyclic shifts. Any method that requires n or less cyclic shifts will be accepted.\n\nInput\n\nThe first line contains an integer t (1 \u2264 t \u2264 1000) \u2014 the number of test cases.\n\nThe next 2t lines contain the descriptions of the test cases. \n\nThe first line of each test case description contains an integer n (2 \u2264 n \u2264 50) \u2014 the length of the array. The second line consists of space-separated elements of the array a_i (-10^9 \u2264 a_i \u2264 10^9). Elements of array a may repeat and don't have to be unique.\n\nOutput\n\nPrint t answers to all input test cases. \n\nThe first line of the answer of each test case should contain an integer k (0 \u2264 k \u2264 n) \u2014 the number of actions to sort the array. The next k lines should contain descriptions of the actions formatted as \"l r d\" (without quotes) where l and r (1 \u2264 l < r \u2264 n) are the boundaries of the segment being shifted, while d (1 \u2264 d \u2264 r - l) is the offset value. Please remember that only the cyclic shifts to the left are considered so the chosen segment will be shifted by the offset d to the to the left.\n\nNote that you are not required to find the minimum number of cyclic shifts needed for sorting. Any sorting method where the number of shifts does not exceed n will be accepted.\n\nIf the given array a is already sorted, one of the possible answers is k = 0 and an empty sequence of cyclic shifts.\n\nIf there are several possible answers, you may print any of them.\n\nExample\n\nInput\n\n\n4\n2\n2 1\n3\n1 2 1\n4\n2 4 1 3\n5\n2 5 1 4 3\n\n\nOutput\n\n\n1\n1 2 1\n1\n1 3 2\n3\n2 4 1\n2 3 1\n1 3 2\n4\n2 4 2\n1 5 3\n1 2 1\n1 3 1\n\nNote\n\nExplanation of the fourth data set in the example: \n\n  1. The segment a[2 \u2026 4] is selected and is shifted to the left by 2: [2, \\color{blue}{5, 1, 4}, 3] \\longrightarrow [2, \\color{blue}{4, 5, 1}, 3] \n  2. The segment a[1 \u2026 5] is then selected and is shifted to the left by 3: [\\color{blue}{2, 4, 5, 1, 3}] \\longrightarrow [\\color{blue}{1, 3, 2, 4, 5}] \n  3. After that the segment a[1 \u2026 2] is selected and is shifted to the left by 1: [\\color{blue}{1, 3}, 2, 4, 5] \\longrightarrow [\\color{blue}{3, 1}, 2, 4, 5] \n  4. And in the end the segment a[1 \u2026 3] is selected and is shifted to the left by 1: [\\color{blue}{3, 1, 2}, 4, 5] \\longrightarrow [\\color{blue}{1, 2, 3}, 4, 5] ", "tags": ["implementation", "sortings"], "difficulty": 8, "id": 1579, "sample_io": [{"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}], "test_list": [{"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 1\n4\n2 4 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 0 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n2 4 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n2 4 1 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 1 1\n4\n2 4 -1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n0\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 1 3\n5\n2 5 1 4 6\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n2\n1 3 2\n3 4 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 0\n4\n2 4 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 0 3\n5\n2 5 1 4 0\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 5 4\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n1 4 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 1 4\n5\n2 5 1 4 6\n", "output": ["1\n1 2 1\n1\n2 3 1\n1\n1 3 2\n2\n1 3 2\n3 4 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 0\n4\n0 4 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 1\n4\n1 4 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 1 1\n4\n1 4 0 3\n5\n2 5 1 4 0\n", "output": ["1\n1 2 1\n0\n2\n1 3 2\n3 4 1\n3\n1 5 4\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 1 1\n4\n2 4 -1 5\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n0\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 0\n4\n2 4 1 3\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n1 3 2\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n2 4 0\n4\n0 6 1 3\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 0 5\n5\n2 10 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 1\n3\n1 2 1\n4\n0 4 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 0 5\n5\n2 10 2 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n1\n1 3 2\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 1 1\n4\n2 4 -1 5\n5\n2 6 1 4 3\n", "output": ["0\n0\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 4 0\n4\n-1 0 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n0\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n1 1\n3\n1 2 1\n4\n1 4 0 3\n5\n2 5 1 4 0\n", "output": ["0\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 5 4\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 1\n4\n1 2 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n2 3 1\n1\n2 3 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 4 0\n4\n0 6 1 3\n5\n2 5 1 0 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 4 3\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n2 4 0\n4\n0 6 1 3\n5\n2 5 1 4 0\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 5 4\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 3 0\n4\n0 6 1 3\n5\n2 3 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n2\n1 3 2\n4 5 1\n"]}, {"input": "4\n2\n1 2\n3\n1 2 1\n4\n1 4 1 3\n5\n2 5 1 6 3\n", "output": ["0\n1\n2 3 1\n2\n2 3 1\n3 4 1\n2\n1 3 2\n3 5 2\n"]}, {"input": "4\n2\n2 2\n3\n1 2 1\n4\n2 4 0 5\n5\n2 10 1 4 3\n", "output": ["0\n1\n2 3 1\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 1\n3\n1 2 1\n4\n0 4 1 3\n5\n2 0 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 2 1\n2 3 1\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n0 2 0\n4\n-1 6 1 3\n5\n0 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 1\n3\n2 4 0\n4\n0 9 1 3\n5\n1 5 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 6 0 5\n5\n2 10 2 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n1 1\n3\n1 2 1\n4\n1 4 0 3\n5\n0 5 1 4 0\n", "output": ["0\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n2 5 3\n3 4 1\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n0 4 -1 4\n5\n2 5 2 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 0\n4\n2 3 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 1\n4\n2 4 0 5\n5\n2 3 1 4 3\n", "output": ["0\n1\n2 3 1\n1\n1 3 2\n2\n1 3 2\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n4 8 -1 3\n5\n0 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n2 4 2\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 3 1\n4\n2 13 -1 3\n5\n0 0 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n1\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 1 1\n4\n2 13 -1 3\n5\n0 0 1 4 3\n", "output": ["1\n1 2 1\n0\n2\n1 3 2\n3 4 1\n1\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n0 4 -1 3\n5\n2 0 -1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n2 3 1\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n0 4 -1 3\n5\n2 0 -1 1 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n2 3 1\n3 4 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 1 4\n5\n2 8 1 4 6\n", "output": ["1\n1 2 1\n1\n2 3 1\n1\n1 3 2\n3\n1 3 2\n3 4 1\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n2 4 1 3\n5\n2 5 2 4 6\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n2\n2 3 1\n3 4 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 0\n4\n-1 2 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n1\n2 3 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n0 2 0\n4\n-1 6 1 0\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n2 4 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n0 4 -1 4\n5\n2 5 1 8 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n2\n1 3 2\n3 5 2\n"]}, {"input": "4\n2\n2 1\n3\n1 4 0\n4\n0 2 1 3\n5\n2 5 1 0 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n1\n2 3 1\n3\n1 4 3\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n0 1\n3\n2 4 0\n4\n0 6 1 3\n5\n2 5 1 4 0\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 5 4\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n4 3 0\n4\n0 6 1 3\n5\n2 3 1 4 3\n", "output": ["1\n1 2 1\n2\n1 3 2\n2 3 1\n2\n2 3 1\n3 4 1\n2\n1 3 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n0 0 0\n4\n-1 6 1 3\n5\n2 5 1 4 3\n", "output": ["0\n0\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 4 0\n4\n-1 0 0 3\n5\n2 5 1 8 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n0\n2\n1 3 2\n3 5 2\n"]}, {"input": "4\n2\n3 0\n3\n2 4 0\n4\n0 15 1 0\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 4 2\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n2 4 1 4\n5\n0 5 1 4 11\n", "output": ["1\n1 2 1\n1\n2 3 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 1\n4\n2 1 0 5\n5\n2 3 1 4 3\n", "output": ["0\n1\n2 3 1\n2\n1 3 2\n2 3 1\n2\n1 3 2\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n2 8 -1 3\n5\n0 5 1 8 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n2\n2 3 1\n3 5 2\n"]}, {"input": "4\n2\n0 1\n3\n2 4 0\n4\n1 9 1 3\n5\n1 5 2 4 0\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 5 4\n3 4 1\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 1 1\n4\n4 8 -1 3\n5\n0 5 1 4 3\n", "output": ["1\n1 2 1\n0\n2\n1 3 2\n2 4 2\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n1 4 -1 3\n5\n1 28 -1 4 5\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 4 1\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n0 2 -1 3\n5\n2 0 -1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n1\n1 3 2\n3\n1 3 2\n2 3 1\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 2\n4\n2 4 2 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n0\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 1\n3\n2 4 0\n4\n0 6 1 3\n5\n2 5 1 0 3\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 4 3\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 3 0\n4\n0 6 1 0\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 4 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 1\n3\n1 2 1\n4\n1 4 0 3\n5\n0 10 1 4 0\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n2 5 3\n3 4 1\n4 5 1\n"]}, {"input": "4\n2\n4 1\n3\n1 5 0\n4\n0 6 1 3\n5\n2 5 1 7 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n2\n1 3 2\n3 5 2\n"]}, {"input": "4\n2\n3 1\n3\n1 2 1\n4\n0 8 1 3\n5\n2 5 1 8 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n2 3 1\n3 4 1\n2\n1 3 2\n3 5 2\n"]}, {"input": "4\n2\n2 2\n3\n1 4 1\n4\n2 4 0 5\n5\n2 10 2 4 3\n", "output": ["0\n1\n2 3 1\n1\n1 3 2\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 4 0\n4\n0 2 1 3\n5\n4 5 1 0 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n1\n2 3 1\n3\n1 4 3\n2 4 2\n3 5 2\n"]}, {"input": "4\n2\n2 2\n3\n1 2 -1\n4\n2 4 -1 4\n5\n4 5 1 6 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n2\n1 3 2\n2 5 3\n"]}, {"input": "4\n2\n2 2\n3\n1 2 1\n4\n1 4 1 3\n5\n2 5 1 6 5\n", "output": ["0\n1\n2 3 1\n2\n2 3 1\n3 4 1\n2\n1 3 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 1\n4\n2 7 0 5\n5\n2 10 2 4 3\n", "output": ["0\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n4 2\n3\n0 2 0\n4\n-1 2 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n1\n2 3 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 1\n3\n1 2 1\n4\n1 7 0 3\n5\n2 0 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 2 1\n2 3 1\n4 5 1\n"]}, {"input": "4\n2\n0 1\n3\n0 4 0\n4\n0 9 0 3\n5\n1 6 2 4 3\n", "output": ["0\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 2\n4\n2 4 2 3\n5\n2 5 1 4 0\n", "output": ["1\n1 2 1\n0\n2\n2 3 1\n3 4 1\n3\n1 5 4\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n1 2\n3\n1 1 1\n4\n2 4 0 3\n5\n2 5 1 4 3\n", "output": ["0\n0\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n1 1\n3\n1 2 0\n4\n0 0 1 3\n5\n2 5 0 4 3\n", "output": ["0\n1\n1 3 2\n0\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 1\n3\n1 2 1\n4\n0 8 1 3\n5\n4 5 1 8 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n2 3 1\n3 4 1\n2\n1 3 2\n2 5 3\n"]}, {"input": "4\n2\n0 1\n3\n1 4 0\n4\n0 2 1 3\n5\n4 5 1 0 3\n", "output": ["0\n1\n1 3 2\n1\n2 3 1\n3\n1 4 3\n2 4 2\n3 5 2\n"]}, {"input": "4\n2\n2 2\n3\n1 2 -1\n4\n2 4 -1 4\n5\n1 5 1 6 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n2\n2 3 1\n3 5 2\n"]}, {"input": "4\n2\n2 1\n3\n0 4 -1\n4\n-1 6 1 3\n5\n0 5 1 8 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n2\n2 3 1\n3 5 2\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n2 1 -1 3\n5\n0 5 0 8 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n2 3 1\n2\n2 3 1\n3 5 2\n"]}, {"input": "4\n2\n2 1\n3\n1 2 2\n4\n2 2 2 3\n5\n2 5 1 4 0\n", "output": ["1\n1 2 1\n0\n0\n3\n1 5 4\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n1 1\n3\n1 2 0\n4\n0 0 1 3\n5\n2 5 0 6 3\n", "output": ["0\n1\n1 3 2\n0\n2\n1 3 2\n3 5 2\n"]}, {"input": "4\n2\n3 1\n3\n1 2 2\n4\n0 8 1 3\n5\n4 5 1 8 3\n", "output": ["1\n1 2 1\n0\n2\n2 3 1\n3 4 1\n2\n1 3 2\n2 5 3\n"]}, {"input": "4\n2\n2 1\n3\n-2 2 0\n4\n3 8 1 6\n5\n2 5 1 6 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n2\n1 3 2\n3 5 2\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n2 4 1 3\n5\n2 0 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n1 3 2\n3 4 1\n3\n1 2 1\n2 3 1\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 0 3\n5\n2 5 1 5 0\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n2\n1 5 4\n2 4 2\n"]}, {"input": "4\n2\n2 0\n3\n1 2 0\n4\n2 4 1 3\n5\n2 5 1 4 6\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n1 3 2\n3 4 1\n2\n1 3 2\n3 4 1\n"]}, {"input": "4\n2\n3 0\n3\n1 2 1\n4\n2 4 -1 0\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n2 4 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 3 0\n4\n0 6 1 3\n5\n1 2 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n2\n2 3 1\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n2 8 1 6\n5\n1 5 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n1 3 2\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n0 2 0\n4\n2 4 1 3\n5\n2 5 1 6 3\n", "output": ["0\n1\n2 3 1\n2\n1 3 2\n3 4 1\n2\n1 3 2\n3 5 2\n"]}, {"input": "4\n2\n2 1\n3\n1 2 -1\n4\n2 4 1 3\n5\n2 5 1 8 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n1 3 2\n3 4 1\n2\n1 3 2\n3 5 2\n"]}, {"input": "4\n2\n2 1\n3\n0 4 0\n4\n0 6 1 3\n5\n2 5 1 0 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 4 3\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n0 1\n3\n2 4 0\n4\n0 9 1 3\n5\n1 2 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n2\n2 3 1\n4 5 1\n"]}, {"input": "4\n2\n0 1\n3\n2 1 0\n4\n0 9 1 3\n5\n1 5 2 4 3\n", "output": ["0\n2\n1 3 2\n2 3 1\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 0\n3\n1 2 0\n4\n2 3 1 3\n5\n2 9 2 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n1\n1 3 2\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 1\n3\n2 4 0\n4\n0 9 0 3\n5\n1 8 2 4 1\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 5 3\n3 4 1\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 1 1\n4\n4 18 -1 3\n5\n0 0 1 4 3\n", "output": ["1\n1 2 1\n0\n2\n1 3 2\n2 4 2\n1\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 1 2\n4\n2 18 -1 3\n5\n0 -1 1 4 3\n", "output": ["1\n1 2 1\n0\n2\n1 3 2\n3 4 1\n2\n1 2 1\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 0\n4\n1 4 0 3\n5\n2 5 1 4 0\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n1 3 2\n3 4 1\n3\n1 5 4\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n2 4 1 3\n5\n2 5 2 8 6\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n2\n2 3 1\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n0 2 0\n4\n2 4 0 3\n5\n2 5 1 4 6\n", "output": ["0\n1\n2 3 1\n2\n1 3 2\n3 4 1\n2\n1 3 2\n3 4 1\n"]}, {"input": "4\n2\n2 2\n3\n0 2 0\n4\n0 4 -1 4\n5\n2 5 1 8 3\n", "output": ["0\n1\n2 3 1\n1\n1 3 2\n2\n1 3 2\n3 5 2\n"]}, {"input": "4\n2\n2 1\n3\n1 4 1\n4\n0 2 1 3\n5\n2 5 1 0 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n1\n2 3 1\n3\n1 4 3\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 4 0\n4\n-1 0 -1 3\n5\n2 5 1 8 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n1\n2 3 1\n2\n1 3 2\n3 5 2\n"]}, {"input": "4\n2\n2 -1\n3\n2 1 3\n4\n1 18 -1 3\n5\n0 0 1 4 3\n", "output": ["1\n1 2 1\n1\n1 2 1\n2\n1 3 2\n3 4 1\n1\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 2\n4\n2 4 2 3\n5\n2 5 1 4 6\n", "output": ["1\n1 2 1\n0\n2\n2 3 1\n3 4 1\n2\n1 3 2\n3 4 1\n"]}, {"input": "4\n2\n3 1\n3\n1 2 1\n4\n1 2 0 3\n5\n0 10 1 4 0\n", "output": ["1\n1 2 1\n1\n2 3 1\n1\n1 3 2\n3\n2 5 3\n3 4 1\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 -1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n2 4 -1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n2 4 0 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n1 4 0 3\n5\n2 5 1 4 0\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 5 4\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n2 4 -1 3\n5\n2 5 0 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n1 4 0 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 0\n4\n0 6 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 1\n4\n1 4 2 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n1 4 -1 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 4 0\n4\n0 6 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n2 4 0\n4\n0 6 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 4 0\n4\n0 6 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 3 0\n4\n0 6 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 6 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n2 4 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n2 4 0 3\n5\n2 10 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n2 8 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n2 4 1 3\n5\n2 5 1 4 6\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n2\n1 3 2\n3 4 1\n"]}, {"input": "4\n2\n2 2\n3\n1 3 0\n4\n1 4 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 0\n3\n1 2 1\n4\n2 4 -1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n2 4 -1 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 1\n3\n1 2 0\n4\n0 4 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 1\n3\n1 2 1\n4\n1 4 0 3\n5\n2 5 1 4 0\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 5 4\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n1 2\n3\n1 2 1\n4\n1 4 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n2 4 -1 3\n5\n2 5 -1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 0\n4\n-1 6 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 2\n3\n1 2 0\n4\n1 4 -1 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n4 1\n3\n1 4 0\n4\n0 6 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 4 0\n4\n0 8 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 3 0\n4\n0 6 1 3\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 4 1\n4\n2 4 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n2 8 1 6\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 1 1\n4\n2 4 -1 5\n5\n2 6 1 4 3\n", "output": ["1\n1 2 1\n0\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 0\n4\n2 6 1 3\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n1 3 2\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 0\n3\n1 2 1\n4\n0 4 -1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n0 2 0\n4\n-1 6 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 2\n3\n1 2 0\n4\n1 4 -1 2\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 4 0\n4\n0 6 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n2 4 0\n4\n0 9 1 3\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 4 0\n4\n-1 8 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 3 1\n4\n0 6 1 3\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 0\n3\n0 2 1\n4\n0 4 -1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n0 2 0\n4\n-1 6 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 4 0\n4\n0 9 1 3\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n0 2 0\n4\n-1 8 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 4 0\n4\n0 15 1 3\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 4 1\n4\n2 4 0 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n0 2 0\n4\n2 4 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 -1\n4\n2 4 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n2 4 -1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 4\n3\n1 2 0\n4\n2 4 0 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n2 4 1 4\n5\n2 5 1 4 6\n", "output": ["1\n1 2 1\n1\n2 3 1\n1\n1 3 2\n2\n1 3 2\n3 4 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n0 4 -1 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 0\n4\n2 3 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 -1\n4\n2 4 -1 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n1 2 1\n4\n1 7 0 3\n5\n2 5 1 4 0\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 5 4\n2 4 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n1 4 -1 3\n5\n2 5 -1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n1 2\n3\n1 2 0\n4\n1 4 -1 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 4 0\n4\n0 8 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 0\n3\n2 3 0\n4\n0 6 1 3\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n0 2 0\n4\n2 8 1 6\n5\n2 5 1 4 3\n", "output": ["0\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 2\n3\n1 2 -1\n4\n1 4 -1 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n2 4 0\n4\n-1 8 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n0 4 0\n4\n-1 6 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n2 4 0\n4\n-1 0 0 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n0\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n0 2 0\n4\n-1 11 1 3\n5\n2 5 1 4 3\n", "output": ["0\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 0\n3\n2 4 0\n4\n0 15 1 3\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 2\n3\n0 2 0\n4\n2 4 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n2 4 -1 3\n5\n0 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 4\n3\n1 2 0\n4\n2 4 0 4\n5\n2 5 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n2 4 1 4\n5\n2 5 1 4 11\n", "output": ["1\n1 2 1\n1\n2 3 1\n1\n1 3 2\n2\n1 3 2\n3 4 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 -1\n4\n2 4 -1 4\n5\n2 9 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 0\n3\n1 2 1\n4\n1 4 -1 3\n5\n2 9 -1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 0\n3\n2 3 0\n4\n0 6 1 3\n5\n1 5 1 4 3\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 1\n3\n1 2 1\n4\n0 7 1 3\n5\n2 0 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n1 2 1\n2 3 1\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n-1 2 0\n4\n-1 6 1 3\n5\n0 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 1\n3\n2 4 0\n4\n0 9 1 3\n5\n1 5 2 4 3\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 -2\n3\n2 4 0\n4\n-1 8 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 0\n3\n2 4 -1\n4\n0 15 1 3\n5\n1 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n2 8 -1 3\n5\n0 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 0\n3\n1 2 0\n4\n2 3 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 2\n3\n1 2 -1\n4\n2 4 -1 6\n5\n2 9 1 4 3\n", "output": ["0\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n1 4 -1 3\n5\n2 9 -1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 1\n3\n-1 2 0\n4\n-1 12 1 3\n5\n0 5 1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 1\n3\n2 4 0\n4\n1 9 1 3\n5\n1 5 2 4 3\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 -2\n3\n2 4 0\n4\n-1 8 1 3\n5\n2 5 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 0\n3\n2 4 -1\n4\n0 15 1 3\n5\n1 5 1 4 2\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 0\n3\n1 2 0\n4\n2 3 1 3\n5\n2 9 1 4 3\n", "output": ["1\n1 2 1\n1\n1 3 2\n1\n1 3 2\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n2 -1\n3\n1 2 1\n4\n1 4 -1 3\n5\n2 14 -1 4 3\n", "output": ["1\n1 2 1\n1\n2 3 1\n2\n1 3 2\n3 4 1\n3\n1 3 2\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n0 1\n3\n2 4 0\n4\n0 9 0 3\n5\n1 5 2 4 3\n", "output": ["0\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}, {"input": "4\n2\n3 0\n3\n2 6 -1\n4\n0 15 1 3\n5\n1 5 1 4 2\n", "output": ["1\n1 2 1\n1\n1 3 2\n2\n2 3 1\n3 4 1\n3\n2 3 1\n3 5 2\n4 5 1\n"]}], "source_codes": ["\nuse std::collections::VecDeque;\n\nfn cyclic_sort(n: usize, arr: &mut VecDeque<i32>) -> Vec<(usize, usize, usize)> {\n    let mut actions: Vec<(usize, usize, usize)> = Vec::new();\n    for i in 0..n {\n        let min_idx = arr.iter().position(|&x| x == *arr.iter().skip(i).min().unwrap()).unwrap();\n        if min_idx == i {\n            continue;\n        }\n        let offset = min_idx - i;\n        if offset > n / 2 {\n            let offset = n - offset;\n            actions.push((i + 1, n, offset));\n            actions.push((1, n, n - offset));\n        } else {\n            actions.push((i + 1, min_idx + 1, offset));\n        }\n        arr.rotate_left(offset);\n    }\n    actions\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let t: usize = input.trim().parse().unwrap();\n    for _ in 0..t {\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let n: usize = input.trim().parse().unwrap();\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let arr: VecDeque<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let mut actions = cyclic_sort(n, &mut arr.clone());\n        println!(\"{}\", actions.len());\n        for action in actions {\n            println!(\"{} {} {}\", action.0, action.1, action.2);\n        }\n    }\n}\n\n\n"], "responses": ["\nuse std::collections::VecDeque;\n\nfn cyclic_sort(n: usize, arr: &mut VecDeque<i32>) -> Vec<(usize, usize, usize)> {\n    let mut actions: Vec<(usize, usize, usize)> = Vec::new();\n    for i in 0..n {\n        let min_idx = arr.iter().position(|&x| x == *arr.iter().skip(i).min().unwrap()).unwrap();\n        if min_idx == i {\n            continue;\n        }\n        let offset = min_idx - i;\n        if offset > n / 2 {\n            let offset = n - offset;\n            actions.push((i + 1, n, offset));\n            actions.push((1, n, n - offset));\n        } else {\n            actions.push((i + 1, min_idx + 1, offset));\n        }\n        arr.rotate_left(offset);\n    }\n    actions\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let t: usize = input.trim().parse().unwrap();\n    for _ in 0..t {\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let n: usize = input.trim().parse().unwrap();\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let arr: VecDeque<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let mut actions = cyclic_sort(n, &mut arr.clone());\n        println!(\"{}\", actions.len());\n        for action in actions {\n            println!(\"{} {} {}\", action.0, action.1, action.2);\n        }\n    }\n}\n\n\n"], "prompt_tokens": [77972], "completion_tokens": [12612], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1579}
{"name": "1579_C. Ticks", "description": "Casimir has a rectangular piece of paper with a checkered field of size n \u00d7 m. Initially, all cells of the field are white.\n\nLet us denote the cell with coordinates i vertically and j horizontally by (i, j). The upper left cell will be referred to as (1, 1) and the lower right cell as (n, m).\n\nCasimir draws ticks of different sizes on the field. A tick of size d (d > 0) with its center in cell (i, j) is drawn as follows: \n\n  1. First, the center cell (i, j) is painted black. \n  2. Then exactly d cells on the top-left diagonally to the center and exactly d cells on the top-right diagonally to the center are also painted black. \n  3. That is all the cells with coordinates (i - h, j \u00b1 h) for all h between 0 and d are painted. In particular, a tick consists of 2d + 1 black cells. \n\n\n\nAn already painted cell will remain black if painted again. Below you can find an example of the 4 \u00d7 9 box, with two ticks of sizes 2 and 3.\n\n<image>\n\nYou are given a description of a checkered field of size n \u00d7 m. Casimir claims that this field came about after he drew some (possibly 0) ticks on it. The ticks could be of different sizes, but the size of each tick is at least k (that is, d \u2265 k for all the ticks).\n\nDetermine whether this field can indeed be obtained by drawing some (possibly none) ticks of sizes d \u2265 k or not.\n\nInput\n\nThe first line contains an integer t (1 \u2264 t \u2264 100) \u2014 the number test cases.\n\nThe following lines contain the descriptions of the test cases. \n\nThe first line of the test case description contains the integers n, m, and k (1 \u2264 k \u2264 n \u2264 10; 1 \u2264 m \u2264 19) \u2014 the field size and the minimum size of the ticks that Casimir drew. The following n lines describe the field: each line consists of m characters either being '.' if the corresponding cell is not yet painted or '*' otherwise.\n\nOutput\n\nPrint t lines, each line containing the answer to the corresponding test case. The answer to a test case should be YES if the given field can be obtained by drawing ticks of at least the given size and NO otherwise.\n\nYou may print every letter in any case you want (so, for example, the strings yEs, yes, Yes, and YES will all be recognized as positive answers).\n\nExample\n\nInput\n\n\n8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n.....*...\n4 4 1\n*.*.\n****\n.**.\n....\n5 5 1\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n*...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n.....*.\n..*.*..\n...*...\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..\n\n\nOutput\n\n\nNO\nYES\nYES\nYES\nNO\nNO\nNO\nNO\n\nNote\n\nThe first sample test case consists of two asterisks neither of which can be independent ticks since ticks of size 0 don't exist.\n\nThe second sample test case is already described in the statement (check the picture in the statement). This field can be obtained by drawing ticks of sizes 2 and 3, as shown in the figure.\n\nThe field in the third sample test case corresponds to three ticks of size 1. Their center cells are marked with \\color{blue}{blue}, \\color{red}{red} and \\color{green}{green} colors: *.*.  \n---  \n*\\color{blue}{*}**  \n.\\color{green}{*}\\color{red}{*}.  \n....  \n  \nThe field in the fourth sample test case could have been obtained by drawing two ticks of sizes 1 and 2. Their vertices are marked below with \\color{blue}{blue} and \\color{red}{red} colors respectively: .....  \n---  \n*...*  \n.*.*.  \n..\\color{red}{*}.*  \n...\\color{blue}{*}.  \n  \nThe field in the fifth sample test case can not be obtained because k = 2, and the last asterisk in the fourth row from the top with coordinates (4, 5) can only be a part of a tick of size 1.\n\nThe field in the sixth sample test case can not be obtained because the top left asterisk (1, 1) can't be an independent tick, since the sizes of the ticks must be positive, and cannot be part of a tick with the center cell in the last row, since it is separated from it by a gap (a point, '.') in (2, 2).\n\nIn the seventh sample test case, similarly, the field can not be obtained by the described process because the asterisks with coordinates (1, 2) (second cell in the first row), (3, 1) and (3, 3) (leftmost and rightmost cells in the bottom) can not be parts of any ticks.", "tags": ["greedy", "implementation"], "difficulty": 9, "id": 1579, "sample_io": [{"input": "8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n.....*...\n4 4 1\n*.*.\n****\n.**.\n....\n5 5 1\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n*...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n.....*.\n..*.*..\n...*...\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..\n", "output": ["NO\nYES\nYES\nYES\nNO\nNO\nNO\nNO\n"]}], "test_list": [{"input": "1\n1 1 1\n*\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n.....\n.....\n*.*.*\n.*.*.\n..*..\n", "output": ["NO\n"]}, {"input": "1\n1 1 1\n.\n", "output": ["YES\n"]}, {"input": "1\n3 9 1\n*.*...*.*\n.*.....*.\n....*....\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n....*\n.*.*.\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n1 5 1\n.....\n", "output": ["YES\n"]}, {"input": "1\n5 6 2\n......\n.....*\n*...*.\n.*.*..\n..*...\n", "output": ["NO\n"]}, {"input": "1\n3 6 1\n.*....\n..*.*.\n...*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n...*\n*.*.\n.*..\n....\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n....*\n.*.+.\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n1 5 2\n.....\n", "output": ["YES\n"]}, {"input": "8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n.....*...\n4 4 2\n*.*.\n****\n.**.\n....\n5 5 1\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n*...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n.....*.\n..*.*..\n...*...\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..\n", "output": ["NO\nYES\nNO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n...*.....\n4 4 2\n*.*.\n****\n.**.\n....\n5 5 1\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n*...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n.....*.\n..+.*..\n...*...\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..\n", "output": ["NO\nNO\nNO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "1\n4 4 1\n...*\n*.*.\n.*..\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n....*\n.*.+-\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n/..*\n*.*.\n.*..\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n....*\n*..+-\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n/..*\n*.*.\n.*..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n4 5 2\n....*\n*..+-\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n/.*.\n*.*.\n.*..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n4 5 2\n....*\n*..+-\n..+..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n..*/\n*.*.\n.*..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n4 2 2\n....*\n*..+-\n..+..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 2 3\n....*\n*..+-\n..+..\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n.....\n.....\n*.*.*\n*..*.\n..*..\n", "output": ["NO\n"]}, {"input": "1\n1 1 0\n.\n", "output": ["YES\n"]}, {"input": "1\n3 9 1\n*-*...*.*\n.*.....*.\n....*....\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n.*...\n.*.*.\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 6 2\n......\n.....*\n*...*.\n.*.*..\n...*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n...*\n*.*.\n.*..\n./..\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n...*\n*.*.\n.*..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n...*.\n.*.+-\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n/..*\n*.*.\n*...\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n....*\n*..+-\n-.*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n/.*.\n*.*.\n.*/.\n..0.\n", "output": ["NO\n"]}, {"input": "1\n4 5 2\n....*\n*/.+-\n..+..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n..*/\n*.*.\n.+..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n4 2 2\n....*\n*..+-\n..+..\n.../.\n", "output": ["NO\n"]}, {"input": "1\n3 2 3\n....*\n*..+-\n..+..\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n-....\n.....\n*.*.*\n*..*.\n..*..\n", "output": ["NO\n"]}, {"input": "1\n3 9 1\n*-*...*.*\n.*.....*.\n....*../.\n", "output": ["NO\n"]}, {"input": "1\n5 6 2\n......\n.....*\n*...*.\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n...*\n*.*.\n.*..\n./..\n", "output": ["NO\n"]}, {"input": "8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n.....*...\n4 4 2\n*.*.\n****\n.**.\n....\n5 5 1\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n*...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n.....*.\n..*.*..\n...*./.\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..\n", "output": ["NO\nYES\nNO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "1\n3 4 1\n...*\n*.*.\n.*..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n...*.\n.*.,-\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n/..*\n*.*.\n*...\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 3 1\n..*/\n*.*.\n.+..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n3 2 3\n./..*\n*..+-\n..+..\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n-./..\n.....\n*.*.*\n*..*.\n..*..\n", "output": ["NO\n"]}, {"input": "1\n3 9 1\n*-*...*.*\n.*.....).\n....*../.\n", "output": ["NO\n"]}, {"input": "1\n5 6 2\n../...\n.....*\n*...*.\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n...*\n*.*.\n.*./\n./..\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n...*\n*.*.\n.*..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n...*.\n.*.,-\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n/..*\n.*.*\n*...\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 1 1\n..*/\n*.*.\n.+..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n3 2 3\n./..*\n*..+-\n..+./\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 5 4\n-./..\n.....\n*.*.*\n*..*.\n..*..\n", "output": ["NO\n"]}, {"input": "1\n3 9 2\n*-*...*.*\n.*.....).\n....*../.\n", "output": ["NO\n"]}, {"input": "1\n5 6 3\n../...\n.....*\n*...*.\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n1 4 2\n...*\n*.*.\n.*./\n./..\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n...*\n*.*.\n.*..\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n/./*\n.*.*\n*...\n../.\n", "output": ["NO\n"]}, {"input": "1\n1 1 2\n*\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n.....\n.....\n*.*-*\n.*.*.\n..*..\n", "output": ["NO\n"]}, {"input": "1\n3 9 1\n*.*...*.*\n.*../..*.\n....*....\n", "output": ["NO\n"]}, {"input": "1\n1 6 1\n.*....\n..*.*.\n...*..\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n....*\n.*.+-\n..*./\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n/..*\n*.+.\n.*..\n../.\n", "output": ["NO\n"]}, {"input": "1\n3 4 1\n/..*\n*.*.\n.*..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n4 5 2\n....*\n*..+-\n..+./\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n/*..\n*.*.\n.*..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n....*\n*..+-\n..+..\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n.....\n.....\n*.*.*\n.*..*\n..*..\n", "output": ["NO\n"]}, {"input": "1\n5 6 2\n......\n.....*\n.*...*\n.*.*..\n...*..\n", "output": ["NO\n"]}, {"input": "1\n2 4 1\n...*\n*.*.\n.*..\n./..\n", "output": ["NO\n"]}, {"input": "8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n.....*...\n4 4 2\n*.*.\n****\n.**.\n....\n5 5 1\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n+...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n.....*.\n..*.*..\n...*...\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..\n", "output": ["NO\nYES\nNO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "1\n4 4 1\n..*.\n*.*.\n.*..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n...*.\n-+.*.\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n/..*\n*.*.\n*...\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n./..*\n*..+-\n-.*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n/.*.\n*.*.\n.*/.\n..0.\n", "output": ["NO\n"]}, {"input": "1\n4 5 2\n....*\n-+./*\n..+..\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n-....\n.....\n*.*.*\n.*..*\n..*..\n", "output": ["NO\n"]}, {"input": "1\n3 9 1\n*-*...*.*\n**.......\n....*../.\n", "output": ["NO\n"]}, {"input": "1\n5 6 2\n......\n.....*\n*...*.\n.*.*.-\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n...*\n*.*.\n..*.\n./..\n", "output": ["NO\n"]}, {"input": "8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n.....*...\n4 4 2\n*.*.\n****\n.**.\n....\n5 5 0\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n*...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n.....*.\n..*.*..\n...*./.\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..\n", "output": ["NO\nYES\nNO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "1\n3 4 1\n...*\n*.*-\n.*..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 5 2\n...*.\n.*.,-\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n/..*\n*.*/\n*...\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 3 1\n..*/\n*.*.\n.+..\n..1.\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n-./..\n.....\n*.*.*\n*..*/\n..*..\n", "output": ["NO\n"]}, {"input": "1\n3 9 1\n.-**..*.*\n.*.....).\n....*../.\n", "output": ["NO\n"]}, {"input": "1\n5 6 2\n../...\n*.....\n*...*.\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n...*\n*.*/\n.*./\n./..\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n...*\n*.*.\n.*..\n..//\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n.*...\n.*.,-\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 3 1\n/..*\n.*.*\n*...\n../.\n", "output": ["NO\n"]}, {"input": "1\n3 2 3\n/...*\n*..+-\n..+./\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 5 3\n-./..\n.....\n*.*.*\n*..*.\n..*..\n", "output": ["NO\n"]}, {"input": "1\n3 9 3\n*-*...*.*\n.*.....).\n....*../.\n", "output": ["NO\n"]}, {"input": "1\n5 6 3\n../...\n*.....\n*...*.\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n1 4 2\n...*\n*.*.\n/.*.\n./..\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n...*\n*.*.\n.*..\n./..\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n../..\n.....\n*.*-*\n.*.*.\n..*..\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n....*\n/*.+-\n..*./\n.....\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n/..*\n*.+.\n.*..\n../.\n", "output": ["NO\n"]}, {"input": "1\n3 4 1\n/..*\n.*.*\n.*..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n/*..\n*.*.\n.*..\n.0..\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n.../.\n.....\n*.*.*\n.*..*\n..*..\n", "output": ["NO\n"]}, {"input": "1\n5 6 2\n......\n.....*\n.*...*\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n3 4 1\n...*\n*.*.\n.*..\n./..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n..*.\n*.*.\n.*..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n2 4 1\n/..*\n*.*.\n*...\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 5 2\n./..*\n*..+-\n-.*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n/.*.\n*.*.\n.*..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n4 5 2\n....*\n-+./*\n./+..\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n-....\n.....\n*.*.*\n-*..*\n..*..\n", "output": ["NO\n"]}, {"input": "1\n5 6 2\n..-...\n.....*\n*...*.\n.*.*.-\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n...*\n*.*.\n..*/\n./..\n", "output": ["NO\n"]}, {"input": "1\n3 4 1\n...*\n*/*-\n.*..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n/..*\n*.*/\n*.-.\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 1 1\n..*/\n*.*.\n.+..\n..1.\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n-./..\n.....\n*.*.*\n/*..*\n..*..\n", "output": ["NO\n"]}, {"input": "1\n5 4 2\n../...\n*.....\n*...*.\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n...*\n*.*/\n.*./\n../.\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n..*.\n*.*.\n.*..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n.*...\n.*.,-\n./*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 6 1\n../...\n*.....\n*...*.\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n1 4 2\n...*\n*.*.\n/*..\n./..\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n//.*\n*.+.\n.*..\n../.\n", "output": ["NO\n"]}, {"input": "1\n3 4 1\n0..*\n.*.*\n.*..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n5 6 2\n-.....\n.....*\n.*...*\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n3 4 1\n...*\n*.*.\n.*..\n./-.\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n..*.\n*.+.\n.*..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n2 4 1\n*../\n*.*.\n*...\n../.\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n-....\n../..\n*.*.*\n-*..*\n..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n...*\n*.).\n..*/\n./..\n", "output": ["NO\n"]}, {"input": "1\n3 4 1\n...*\n*/*-\n.)..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 1 1\n..*/\n*.*.\n.+-.\n..1.\n", "output": ["NO\n"]}, {"input": "1\n5 5 3\n-./..\n.....\n*.*.*\n/*..*\n..*..\n", "output": ["NO\n"]}, {"input": "1\n5 4 2\n.../..\n*.....\n*...*.\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n...*\n*.*/\n..*/\n../.\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n.*..\n*.*.\n.*..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n.*...\n.*.+-\n./*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 6 1\n../...\n*.....\n*...*.\n.*.*..\n...*..\n", "output": ["NO\n"]}, {"input": "1\n1 4 2\n...*\n*.*.\n..*/\n./..\n", "output": ["NO\n"]}, {"input": "1\n3 4 1\n0..*\n*.*.\n.*..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n5 6 3\n-.....\n.....*\n.*...*\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n3 4 1\n...*\n*.*.\n.*..\n.-/.\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n..*.\n*.+.\n.*./\n.//.\n", "output": ["NO\n"]}, {"input": "1\n2 4 1\n*../\n*.*.\n*...\n.//.\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n-....\n../..\n*.*.*\n-+..*\n..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n.*..\n*.).\n..*/\n./..\n", "output": ["NO\n"]}, {"input": "1\n5 5 3\n-....\n.....\n*.*.*\n/*..*\n..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n*...\n*.*/\n..*/\n../.\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n.*..\n*.*.\n..*.\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n.*...\n.*.+.\n./*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 6 1\n../.-.\n*.....\n*...*.\n.*.*..\n...*..\n", "output": ["NO\n"]}, {"input": "1\n1 4 2\n...*\n*.+.\n..*/\n./..\n", "output": ["NO\n"]}, {"input": "1\n3 4 1\n*..0\n*.*.\n.*..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n5 6 2\n-.....\n.....*\n.*...*\n.*.*..\n..*../\n", "output": ["NO\n"]}, {"input": "1\n3 4 1\n...*\n*.*.\n..*.\n.-/.\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n..*.\n*.+.\n.*//\n.//.\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n*../\n*.*.\n*...\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n.*/.\n*.).\n..*/\n./..\n", "output": ["NO\n"]}, {"input": "1\n3 5 3\n-....\n.....\n*.*.*\n/*..*\n..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n*...\n*.*/\n/*..\n../.\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n.*..\n*.*.\n..).\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n.*...\n.*.+.\n./*.-\n.....\n", "output": ["NO\n"]}, {"input": "1\n2 6 1\n../.-.\n*.....\n*...*.\n.*.*..\n...*..\n", "output": ["NO\n"]}, {"input": "1\n1 4 2\n...*\n*-+.\n..*/\n./..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n..*.\n*.+.\n*.//\n.//.\n", "output": ["NO\n"]}, {"input": "1\n3 5 3\n-....\n.....\n*.*.*\n/*..*\n..)..\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n.*..\n*.*.\n.)..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n.*...\n.*.*.\n./*.-\n.....\n", "output": ["NO\n"]}, {"input": "1\n1 4 2\n...*\n*-+.\n/*..\n./..\n", "output": ["NO\n"]}, {"input": "1\n4 1 2\n..*.\n*.+.\n*.//\n.//.\n", "output": ["NO\n"]}, {"input": "1\n3 5 3\n....-\n.....\n*.*.*\n/*..*\n..)..\n", "output": ["NO\n"]}, {"input": "1\n4 2 1\n.*...\n.*.*.\n-/*.-\n.....\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n.....\n.....\n*.*.*\n.*.*.\n/.*..\n", "output": ["NO\n"]}, {"input": "1\n1 9 1\n*.*...*.*\n.*.....*.\n....*....\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n....*\n...**\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n3 6 1\n.*../.\n..*.*.\n...*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n...*\n*.*.\n.*..\n....\n", "output": ["NO\n"]}, {"input": "8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n.....*...\n4 4 1\n*.*.\n****\n..**\n....\n5 5 1\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n*...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n.....*.\n..*.*..\n...*...\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..\n", "output": ["NO\nYES\nNO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "1\n2 5 1\n....*\n.*.+.\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n.*..\n*.*.\n.*..\n../.\n", "output": ["NO\n"]}, {"input": "1\n1 4 1\n/..*\n*.*.\n.*..\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n....)\n*..+-\n..*..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 5 2\n....*\n*..+-\n..*..\n-....\n", "output": ["NO\n"]}, {"input": "1\n4 5 2\n....*\n-+..*\n..+..\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n..*/\n*/*.\n.*..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n3 9 1\n*-*.*...*\n.*.....*.\n....*....\n", "output": ["NO\n"]}, {"input": "8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n.....*...\n4 4 2\n*.*.\n****\n.**.\n....\n5 5 1\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n*...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n.....*.\n..+.*..\n...*...\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..\n", "output": ["NO\nYES\nNO\nYES\nNO\nNO\nNO\nNO\n"]}, {"input": "1\n4 4 2\n...*\n*.*.\n.*..\n.//.\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n...*.\n.*.+-\n..*.-\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n/..*\n).*.\n*...\n../.\n", "output": ["NO\n"]}, {"input": "1\n4 5 1\n....*\n*..+-\n..*-.\n.....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n/.*.\n.*.*\n.*/.\n..0.\n", "output": ["NO\n"]}, {"input": "1\n4 5 2\n....*\n*/.+-\n..+..\n-....\n", "output": ["NO\n"]}, {"input": "1\n4 4 1\n..*/\n**..\n.+..\n..0.\n", "output": ["NO\n"]}, {"input": "1\n5 5 2\n-....\n.....\n*.*.*\n*-.*.\n..*..\n", "output": ["NO\n"]}, {"input": "1\n3 9 1\n*-*...*.*\n.*.....*.\n-...*../.\n", "output": ["NO\n"]}, {"input": "1\n5 6 2\n......\n.....*\n*...).\n.*.*..\n/..*..\n", "output": ["NO\n"]}, {"input": "1\n4 4 2\n...*\n*.*.\n.*..\n../.\n", "output": ["NO\n"]}, {"input": "8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n.....*...\n4 4 2\n*.*.\n****\n.**.\n....\n5 5 1\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n*...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n...-.*.\n..*.*..\n...*./.\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..\n", "output": ["NO\nYES\nNO\nYES\nNO\nNO\nNO\nNO\n"]}], "source_codes": ["\nfn is_valid_field(n: usize, m: usize, k: i32, field: &mut Vec<Vec<char>>) -> String {\n    fn dfs(i: usize, j: usize, n: usize, m: usize, k: i32, field: &mut Vec<Vec<char>>) -> bool {\n        if i >= n || j >= m || field[i][j] != '*' {\n            return false;\n        }\n        field[i][j] = '.';\n        (0..k).all(|di| (0..k).all(|dj| di * di + dj * dj <= k * k && dfs((i as i32 + di) as usize, (j as i32 + dj) as usize, n, m, k, field)))\n    }\n\n    for i in 0..n {\n        for j in 0..m {\n            if field[i][j] == '*' {\n                if !dfs(i, j, n, m, k, field) {\n                    return \"NO\".to_string();\n                }\n            }\n        }\n    }\n    \"YES\".to_string()\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let t: i32 = input.trim().parse().unwrap();\n\n    for _ in 0..t {\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let parts: Vec<usize> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let n = parts[0];\n        let m = parts[1];\n        let k = parts[2] as i32;\n\n        let mut field = Vec::new();\n        for _ in 0..n {\n            input.clear();\n            std::io::stdin().read_line(&mut input).unwrap();\n            field.push(input.trim().chars().collect());\n        }\n\n        println!(\"{}\", is_valid_field(n, m, k, &mut field));\n    }\n}\n\n\n"], "responses": ["\nfn is_valid_field(n: usize, m: usize, k: i32, field: &mut Vec<Vec<char>>) -> String {\n    fn dfs(i: usize, j: usize, n: usize, m: usize, k: i32, field: &mut Vec<Vec<char>>) -> bool {\n        if i >= n || j >= m || field[i][j] != '*' {\n            return false;\n        }\n        field[i][j] = '.';\n        (0..k).all(|di| (0..k).all(|dj| di * di + dj * dj <= k * k && dfs((i as i32 + di) as usize, (j as i32 + dj) as usize, n, m, k, field)))\n    }\n\n    for i in 0..n {\n        for j in 0..m {\n            if field[i][j] == '*' {\n                if !dfs(i, j, n, m, k, field) {\n                    return \"NO\".to_string();\n                }\n            }\n        }\n    }\n    \"YES\".to_string()\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let t: i32 = input.trim().parse().unwrap();\n\n    for _ in 0..t {\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let parts: Vec<usize> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let n = parts[0];\n        let m = parts[1];\n        let k = parts[2] as i32;\n\n        let mut field = Vec::new();\n        for _ in 0..n {\n            input.clear();\n            std::io::stdin().read_line(&mut input).unwrap();\n            field.push(input.trim().chars().collect());\n        }\n\n        println!(\"{}\", is_valid_field(n, m, k, &mut field));\n    }\n}\n\n\n"], "prompt_tokens": [91763], "completion_tokens": [16308], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1579}
{"name": "1579_D. Productive Meeting", "description": "An important meeting is to be held and there are exactly n people invited. At any moment, any two people can step back and talk in private. The same two people can talk several (as many as they want) times per meeting.\n\nEach person has limited sociability. The sociability of the i-th person is a non-negative integer a_i. This means that after exactly a_i talks this person leaves the meeting (and does not talk to anyone else anymore). If a_i = 0, the i-th person leaves the meeting immediately after it starts.\n\nA meeting is considered most productive if the maximum possible number of talks took place during it.\n\nYou are given an array of sociability a, determine which people should talk to each other so that the total number of talks is as large as possible.\n\nInput\n\nThe first line contains an integer t (1 \u2264 t \u2264 1000) \u2014 the number of test cases.\n\nThe next 2t lines contain descriptions of the test cases.\n\nThe first line of each test case description contains an integer n (2 \u2264 n \u2264 2 \u22c5 10^5) \u2014the number of people in the meeting. The second line consists of n space-separated integers a_1, a_2, ..., a_n (0 \u2264 a_i \u2264 2 \u22c5 10^5) \u2014 the sociability parameters of all people. \n\nIt is guaranteed that the sum of n over all test cases does not exceed 2 \u22c5 10^5. It is also guaranteed that the sum of all a_i (over all test cases and all i) does not exceed 2 \u22c5 10^5.\n\nOutput\n\nPrint t answers to all test cases.\n\nOn the first line of each answer print the number k \u2014 the maximum number of talks possible in a meeting.\n\nOn each of the next k lines print two integers i and j (1 \u2264 i, j \u2264 n and i \u2260 j) \u2014 the numbers of people who will have another talk.\n\nIf there are several possible answers, you may print any of them.\n\nExample\n\nInput\n\n\n8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n\n\nOutput\n\n\n2\n1 2\n1 2\n3\n1 3\n2 3\n2 3\n5\n1 3\n2 4\n2 4\n3 4\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 5\n1 4\n1 2\n1\n5 2", "tags": ["constructive algorithms", "graphs", "greedy"], "difficulty": 10, "id": 1579, "sample_io": [{"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}], "test_list": [{"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 3\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n1 2 3 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n4\n3 4\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 2\n4\n1 2 3 4\n3\n0 0 2\n2\n6 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n2\n2 3\n1 2\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 4 2\n4\n1 2 3 4\n3\n0 0 2\n2\n6 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n2 3\n2 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n2 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n1 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n1\n3 1\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 0 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n0\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 3\n3\n1 0 2\n5\n8 2 0 0 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n3\n1 2\n1 2\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n1 2 3 2\n3\n0 0 2\n2\n6 2\n3\n0 0 4\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n4\n3 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n2 2 3\n4\n2 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 1\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 0 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n1\n3 1\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 0 3\n4\n1 2 0 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n0\n3\n4 2\n4 1\n4 2\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n0 2 3 4\n3\n0 0 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n4\n4 3\n4 2\n3 4\n2 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 4 2\n4\n1 2 3 4\n3\n0 0 1\n2\n6 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n2\n2 3\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n2 2 3\n4\n2 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 1\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 0 3\n4\n1 2 2 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n1\n3 1\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 0 3\n4\n1 2 0 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 2 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n0\n3\n4 2\n4 1\n4 2\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 4\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n1 2 2 2\n3\n0 0 2\n2\n6 2\n3\n0 0 4\n5\n7 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n3\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 2\n3\n2 2 3\n4\n2 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 1\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n2 2\n3\n2 2 3\n4\n2 2 3 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n5\n3 4\n1 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 2\n3\n0 2 3\n4\n2 2 3 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n1 2\n1 2\n2\n3 2\n3 2\n5\n3 4\n1 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n8 2 0 1 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n7\n1 5\n1 5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 2\n3\n0 2 3\n4\n2 2 3 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 1 1 1\n5\n0 1 0 0 6\n", "output": ["2\n1 2\n1 2\n2\n3 2\n3 2\n5\n3 4\n1 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 2\n1 2\n1 2\n1 3\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n5 2 0 1 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n5 2 0 1 4\n5\n1 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n2\n5 1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 2\n3\n0 0 0\n5\n5 2 -1 1 4\n5\n1 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n2\n5 1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 2\n3\n0 0 0\n5\n5 2 -1 1 4\n5\n1 0 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n1\n5 1\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 2\n3\n0 0 0\n5\n5 4 -1 1 4\n5\n1 0 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n2\n1 2\n1 2\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n1\n5 1\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 0\n3\n0 0 0\n5\n5 4 -1 1 4\n5\n1 0 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n0\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n1\n5 1\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n2 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n3\n1 2\n1 2\n4 5\n1\n5 2\n"]}, {"input": "8\n2\n0 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 3\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["0\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n1 2 1 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n3\n4 2\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n1 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n1\n2 1\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n10 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 0 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n0\n"]}, {"input": "8\n2\n2 3\n3\n1 2 2\n4\n1 2 3 4\n3\n0 0 2\n2\n6 3\n3\n1 0 2\n5\n8 2 0 1 0\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n2\n2 3\n1 2\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n3\n1 2\n1 2\n1 4\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n10 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n1 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n1\n3 1\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n2 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 1\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 1\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["1\n1 2\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 4 2\n4\n1 2 3 4\n3\n0 0 1\n2\n6 3\n3\n1 0 0\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n2 3\n2 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n0 2 3 4\n3\n0 0 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 0\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n4\n4 3\n4 2\n3 4\n2 3\n0\n2\n1 2\n1 2\n0\n1\n2 4\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 4 4\n4\n1 2 3 4\n3\n0 0 1\n2\n6 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n4\n2 3\n2 3\n2 3\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n2 0 3\n4\n1 2 2 2\n3\n0 0 2\n2\n6 2\n3\n0 0 4\n5\n7 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n2\n3 1\n3 1\n3\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n0 2\n3\n2 2 3\n4\n2 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 0 1 1\n5\n0 1 0 0 6\n", "output": ["0\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 1\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 2\n3\n2 2 3\n4\n2 2 5 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n6\n3 4\n3 1\n3 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n5 3\n3\n1 1 3\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n2\n3 1\n3 2\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 5\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n5 2 0 1 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 2\n4 3\n4 1\n4 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n5 2 0 1 4\n5\n1 1 1 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n3\n5 1\n5 2\n5 3\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 1\n2\n12 2\n3\n0 0 0\n5\n5 2 0 1 4\n5\n1 1 0 1 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n3\n5 1\n5 2\n5 4\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 0\n3\n0 0 0\n2\n12 2\n3\n0 0 0\n5\n5 2 -1 1 4\n5\n1 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n2\n2 3\n1 2\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n2\n5 1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 2\n3\n0 0 0\n5\n5 4 -1 1 4\n5\n1 0 1 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n2\n1 2\n1 2\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n2\n5 1\n5 3\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 2 3 1\n3\n0 0 2\n2\n7 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n3\n3 2\n3 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n1 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n10 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 0 1\n4\n1 2 0 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 2 2\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n0\n3\n4 2\n4 1\n4 2\n0\n2\n1 2\n1 2\n0\n6\n1 2\n1 4\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 1\n2\n12 2\n3\n0 0 2\n5\n8 4 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n7\n1 2\n1 2\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n14 2 0 0 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 5\n3\n1 0 2\n2\n12 2\n3\n0 0 2\n5\n5 2 0 1 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 2\n4 3\n4 1\n4 2\n3 4\n1\n3 1\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 0\n2\n12 2\n3\n0 -1 0\n5\n5 0 0 1 4\n5\n1 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 5\n1 5\n1 5\n1 4\n1 5\n2\n5 1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 2\n3\n1 0 0\n5\n5 2 -1 1 4\n5\n0 0 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n0\n"]}, {"input": "8\n2\n1 3\n3\n0 0 5\n4\n0 2 2 4\n3\n0 0 0\n2\n12 0\n3\n0 0 0\n5\n5 4 -1 1 4\n5\n1 0 0 0 10\n", "output": ["1\n2 1\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n0\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n1\n5 1\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 2 3 1\n3\n1 0 2\n2\n7 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n3\n3 2\n3 1\n2 3\n1\n3 1\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 0 3\n4\n0 2 3 4\n3\n0 0 2\n2\n7 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n1\n3 1\n4\n4 3\n4 2\n3 4\n2 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n2 4 2\n4\n1 2 3 4\n3\n0 0 1\n2\n6 3\n3\n1 0 0\n5\n7 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n4\n2 1\n2 3\n2 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 0 3\n4\n1 2 3 2\n3\n0 0 2\n2\n5 2\n3\n0 0 4\n5\n13 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n0\n4\n3 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n1 3\n3\n1 2 3\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 1\n5\n0 2 0 1 1\n5\n0 1 0 0 9\n", "output": ["1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 1\n2\n12 2\n3\n0 0 1\n5\n6 2 0 1 4\n5\n1 1 0 1 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n1 4\n3\n5 1\n5 2\n5 4\n"]}, {"input": "8\n2\n3 3\n3\n0 0 0\n4\n0 2 2 4\n3\n0 0 0\n2\n12 3\n3\n0 0 0\n5\n5 4 -1 1 4\n5\n1 0 1 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n2\n5 1\n5 3\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 0\n3\n-1 0 0\n5\n5 4 -2 1 4\n5\n1 0 1 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n0\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n2\n5 1\n5 3\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 4 3 1\n3\n1 0 2\n2\n7 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n4\n2 3\n2 3\n2 1\n2 3\n1\n3 1\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 0 3\n4\n1 2 3 2\n3\n0 0 2\n2\n5 2\n3\n0 0 4\n5\n13 4 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n0\n4\n3 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 2\n1 2\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 5\n3\n1 0 2\n2\n9 2\n3\n0 0 2\n5\n5 3 0 1 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 2\n4 3\n4 1\n4 2\n3 4\n1\n3 1\n2\n1 2\n1 2\n0\n6\n1 5\n1 2\n1 5\n1 2\n5 1\n2 4\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 2\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n5 2 0 1 4\n5\n1 2 1 0 4\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n4\n5 2\n5 1\n5 2\n3 5\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 1 3 1\n3\n1 0 2\n2\n7 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n3\n3 1\n3 2\n3 4\n1\n3 1\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n1 3\n3\n1 2 1\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 9\n", "output": ["1\n2 1\n2\n2 1\n2 3\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 2\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n4 2 0 1 4\n5\n1 2 1 0 4\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 5\n1 5\n1 2\n5 1\n2 4\n4\n5 2\n5 1\n5 2\n3 5\n"]}, {"input": "8\n2\n3 3\n3\n0 0 2\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n4 2 1 1 4\n5\n1 2 1 0 4\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n5 1\n2 3\n4 5\n4\n5 2\n5 1\n5 2\n3 5\n"]}, {"input": "8\n2\n3 3\n3\n0 0 2\n4\n1 2 2 4\n3\n0 0 2\n2\n12 3\n3\n0 0 2\n5\n4 2 1 1 4\n5\n1 2 1 0 4\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n3\n1 2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n5 1\n2 3\n4 5\n4\n5 2\n5 1\n5 2\n3 5\n"]}, {"input": "8\n2\n2 3\n3\n0 0 2\n4\n1 2 2 4\n3\n0 0 2\n2\n12 3\n3\n0 0 2\n5\n4 2 1 1 4\n5\n1 2 1 0 4\n", "output": ["2\n2 1\n2 1\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n3\n1 2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n5 1\n2 3\n4 5\n4\n5 2\n5 1\n5 2\n3 5\n"]}, {"input": "8\n2\n2 3\n3\n0 0 2\n4\n1 2 2 4\n3\n0 0 2\n2\n12 3\n3\n0 0 2\n5\n4 2 1 1 4\n5\n1 0 1 0 4\n", "output": ["2\n2 1\n2 1\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n3\n1 2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n5 1\n2 3\n4 5\n2\n5 1\n5 3\n"]}, {"input": "8\n2\n2 3\n3\n0 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n2\n3 2\n3 2\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 1 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n1\n3 2\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n1 2 3 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n4\n3 4\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n2 2 3\n4\n1 2 5 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 1\n2 3\n1 2\n6\n3 4\n3 4\n3 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 3 3 4\n3\n1 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 2\n3 4\n2 3\n4 1\n2 3\n1\n3 1\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 0 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 0 0 0 6\n", "output": ["2\n2 1\n2 1\n0\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n0\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 2 4 4\n3\n0 0 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n5\n3 4\n3 4\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n1 2 3 0\n3\n0 0 2\n2\n6 2\n3\n0 0 4\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n3\n3 2\n3 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n2 2 3\n4\n2 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 0 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 1\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n0\n"]}, {"input": "8\n2\n2 3\n3\n0 4 2\n4\n1 2 3 4\n3\n0 0 1\n2\n6 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n0 1 1 0 6\n", "output": ["2\n2 1\n2 1\n2\n2 3\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n2\n5 2\n5 3\n"]}, {"input": "8\n2\n2 3\n3\n2 2 3\n4\n2 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 0 2 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 1\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 2\n1 2\n1 4\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n1 2 2 2\n3\n0 0 2\n2\n6 2\n3\n0 0 4\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n3\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n2 2\n3\n2 2 3\n4\n2 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 0 1 1\n5\n1 1 0 0 6\n", "output": ["2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 1\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 2\n1 2\n1 4\n1 5\n2\n5 1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 2\n2\n6 2\n3\n0 1 2\n5\n8 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n1\n3 2\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 5\n2 4\n1\n5 2\n"]}, {"input": "8\n2\n2 2\n3\n2 2 3\n4\n2 2 6 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n6\n3 4\n3 1\n3 2\n3 4\n3 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n8 2 0 1 2\n5\n0 2 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n2\n5 2\n5 2\n"]}, {"input": "8\n2\n5 3\n3\n2 2 3\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 3 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n8 2 0 1 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n7\n1 5\n1 5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n0 2\n3\n0 2 3\n4\n2 2 3 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 1 1 1\n5\n0 1 0 0 6\n", "output": ["0\n2\n3 2\n3 2\n5\n3 4\n1 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 2\n1 2\n1 2\n1 3\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 3 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n5 2 0 1 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 3 2 4\n3\n0 0 1\n2\n12 2\n3\n0 0 2\n5\n5 2 0 1 4\n5\n1 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 2\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n2\n5 1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 3\n3\n0 0 1\n2\n12 2\n3\n0 0 0\n5\n5 2 0 1 4\n5\n1 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n2\n5 1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 2\n3\n0 0 0\n5\n5 2 -1 1 4\n5\n1 1 1 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n3\n5 1\n5 2\n5 3\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 3\n3\n0 0 0\n5\n5 4 -1 1 4\n5\n1 0 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n1\n5 1\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 0\n3\n0 0 0\n5\n5 4 -1 1 4\n5\n1 0 0 1 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n0\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n2\n5 1\n5 4\n"]}, {"input": "8\n2\n2 3\n3\n1 2 0\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n2 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n2 1\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n3\n1 2\n1 2\n4 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n0 2 3 4\n3\n0 0 2\n2\n7 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n4\n4 3\n4 2\n3 4\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n0 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 3\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 0 0 0 6\n", "output": ["0\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n0\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n1 2 1 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 1 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n3\n4 2\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n2\n5 2\n5 4\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n1 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n0 1 1 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n1\n2 1\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n2\n5 2\n5 3\n"]}, {"input": "8\n2\n0 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n10 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 0 0 0 6\n", "output": ["0\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n0\n"]}, {"input": "8\n2\n2 3\n3\n0 4 4\n4\n1 2 3 4\n3\n0 0 1\n2\n6 3\n3\n1 0 2\n5\n8 4 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n4\n2 3\n2 3\n2 3\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n6\n1 2\n1 2\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 0 1\n4\n1 4 0 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 2 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n0\n4\n2 4\n2 4\n2 4\n1 2\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 4\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 1 3\n4\n1 2 2 4\n3\n0 0 2\n2\n5 2\n3\n0 0 2\n5\n8 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n1\n3 2\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 2\n3\n2 2 3\n4\n2 2 5 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n0 3 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n6\n3 4\n3 1\n3 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n5 3\n3\n1 1 3\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 2 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n2\n3 1\n3 2\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 4\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 5\n3\n0 0 2\n2\n12 0\n3\n0 0 2\n5\n5 2 0 1 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 2\n4 3\n4 1\n4 2\n3 4\n0\n0\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 1\n2\n12 2\n3\n0 0 0\n5\n5 2 0 2 4\n5\n1 1 0 1 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 4\n5 1\n2 4\n3\n5 1\n5 2\n5 4\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 8\n3\n0 0 0\n2\n12 2\n3\n1 0 0\n5\n5 2 -1 1 4\n5\n1 0 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n1\n5 1\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n0 1 3 4\n3\n0 0 2\n2\n7 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n4\n4 3\n4 3\n4 2\n3 4\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n1 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n0 2\n3\n0 0 2\n5\n10 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n0\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 4 2\n4\n1 2 3 4\n3\n0 0 1\n2\n6 3\n3\n1 0 0\n5\n7 2 0 1 1\n5\n0 1 0 0 0\n", "output": ["2\n2 1\n2 1\n3\n2 3\n2 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n0\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n1 2 3 2\n3\n0 0 2\n2\n5 2\n3\n0 1 4\n5\n13 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n4\n3 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n1\n3 2\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n14 2 0 0 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n3\n1 2\n1 2\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 1 2 5\n3\n1 0 2\n2\n12 2\n3\n0 0 2\n5\n5 2 0 1 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 3\n4 1\n4 2\n4 3\n1\n3 1\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 0 3\n4\n1 2 2 4\n3\n0 0 1\n2\n12 2\n3\n0 0 1\n5\n5 2 0 1 4\n5\n1 1 0 1 6\n", "output": ["3\n1 2\n1 2\n1 2\n1\n3 1\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n3\n5 1\n5 2\n5 4\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 1 4\n3\n0 0 0\n2\n12 0\n3\n-1 0 0\n5\n5 4 -2 1 4\n5\n1 0 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n3\n4 2\n4 2\n4 3\n0\n0\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n1\n5 1\n"]}, {"input": "8\n2\n3 3\n3\n1 0 3\n4\n1 2 3 4\n3\n0 0 2\n2\n7 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n1\n3 1\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n1 5\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n10 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 0 3\n4\n1 2 3 2\n3\n0 0 2\n2\n5 2\n3\n0 0 4\n5\n13 2 0 2 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n0\n4\n3 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 4\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n1 3\n3\n1 2 4\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 1\n5\n0 2 0 1 1\n5\n0 1 0 0 9\n", "output": ["1\n2 1\n3\n3 2\n3 1\n3 2\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 5\n3\n1 0 2\n2\n9 2\n3\n0 0 2\n5\n5 2 0 2 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 2\n4 3\n4 1\n4 2\n3 4\n1\n3 1\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 4\n5 1\n2 4\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 2\n4\n1 3 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n5 2 0 1 4\n5\n1 1 1 0 4\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 2\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n3\n5 1\n5 2\n5 3\n"]}, {"input": "8\n2\n3 3\n3\n0 0 0\n4\n0 2 2 4\n3\n0 0 0\n2\n12 3\n3\n0 0 0\n5\n5 4 -1 1 4\n5\n0 0 1 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n1\n5 3\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 4 3 1\n3\n0 0 2\n2\n7 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n4\n2 3\n2 3\n2 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 0 3\n4\n1 2 3 2\n3\n0 0 2\n2\n5 2\n3\n0 0 4\n5\n13 4 0 1 1\n5\n0 1 0 1 6\n", "output": ["2\n2 1\n2 1\n0\n4\n3 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 2\n1 2\n1 2\n1 2\n1 4\n1 5\n2\n5 2\n5 4\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 5\n3\n1 0 2\n2\n9 2\n3\n0 1 2\n5\n5 3 0 1 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 2\n4 3\n4 1\n4 2\n3 4\n1\n3 1\n2\n1 2\n1 2\n1\n3 2\n6\n1 5\n1 2\n1 5\n1 2\n5 1\n2 4\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 4\n4\n1 1 3 1\n3\n1 0 2\n2\n7 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n3 2\n3\n3 1\n3 2\n3 4\n1\n3 1\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n1 3\n3\n1 2 1\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 0 0 0 9\n", "output": ["1\n2 1\n2\n2 1\n2 3\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n0\n"]}, {"input": "8\n2\n3 3\n3\n0 0 2\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n4 2 0 1 5\n5\n1 2 1 0 4\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n5 1\n5 1\n5 1\n2 5\n1 2\n4 5\n4\n5 2\n5 1\n5 2\n3 5\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n2 1 0\n2\n12 0\n3\n-1 0 0\n5\n5 4 -1 1 4\n5\n1 0 1 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n1\n1 2\n0\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n2\n5 1\n5 3\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n2 0 0\n2\n12 0\n3\n-1 0 0\n5\n1 4 -1 1 4\n5\n1 0 1 0 10\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n0\n0\n5\n2 5\n2 5\n2 5\n1 2\n4 5\n2\n5 1\n5 3\n"]}, {"input": "8\n2\n2 3\n3\n0 0 2\n4\n1 2 2 4\n3\n0 0 2\n2\n12 3\n3\n0 0 2\n5\n4 2 1 1 4\n5\n0 2 1 0 4\n", "output": ["2\n2 1\n2 1\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n3\n1 2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n5 1\n2 3\n4 5\n3\n5 2\n5 2\n5 3\n"]}, {"input": "8\n2\n2 3\n3\n0 2 3\n4\n1 1 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n2\n3 2\n3 2\n4\n4 3\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 7\n3\n0 0 2\n2\n6 3\n3\n0 0 4\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n6\n4 3\n4 2\n4 3\n4 1\n4 2\n4 3\n0\n3\n1 2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 2 1 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n4\n4 2\n4 1\n4 2\n3 4\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n2 2 3 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n5\n3 4\n1 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 2\n4\n1 2 3 4\n3\n0 0 2\n2\n12 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n1 1 0 0 6\n", "output": ["2\n2 1\n2 1\n2\n2 3\n1 2\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n2\n5 1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n2 2 3\n4\n1 2 5 4\n3\n0 0 2\n2\n6 0\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 1\n2 3\n1 2\n6\n3 4\n3 4\n3 2\n3 4\n1 2\n3 4\n0\n0\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n1 2 3 0\n3\n0 0 2\n2\n6 2\n3\n0 0 4\n5\n8 2 0 0 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n3\n3 2\n3 1\n2 3\n0\n2\n1 2\n1 2\n0\n3\n1 2\n1 2\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n2 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 0 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n0\n"]}, {"input": "8\n2\n3 3\n3\n1 0 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 0\n5\n8 3 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n1\n3 1\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 2\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 4 3\n4\n1 2 3 4\n3\n0 0 1\n2\n6 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n0 1 1 0 6\n", "output": ["2\n2 1\n2 1\n3\n2 3\n2 3\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n2\n5 2\n5 3\n"]}, {"input": "8\n2\n2 2\n3\n2 2 3\n4\n2 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 3 0 1 1\n5\n1 1 0 0 1\n", "output": ["2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 1\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 2\n1 2\n1 4\n1 5\n1\n1 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 2\n5\n0 0 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 5\n2 4\n0\n"]}, {"input": "8\n2\n2 2\n3\n2 2 3\n4\n2 2 6 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n6\n3 4\n3 1\n3 2\n3 4\n3 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n5 3\n3\n2 2 3\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 0\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n1\n2 4\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 2\n3\n0 0 0\n5\n5 2 -1 1 4\n5\n0 1 1 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n2\n5 2\n5 3\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 3\n3\n0 0 0\n5\n5 4 -1 1 8\n5\n1 0 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n9\n5 1\n5 1\n5 2\n5 1\n5 2\n5 1\n2 5\n1 2\n4 5\n1\n5 1\n"]}, {"input": "8\n2\n3 3\n3\n0 1 3\n4\n0 2 2 4\n3\n0 0 0\n2\n12 0\n3\n0 0 0\n5\n5 4 -1 1 4\n5\n1 0 0 1 6\n", "output": ["3\n1 2\n1 2\n1 2\n1\n3 2\n4\n4 2\n4 3\n4 2\n3 4\n0\n0\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n2\n5 1\n5 4\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n0 2 3 4\n3\n0 0 2\n2\n7 2\n3\n0 0 2\n5\n8 2 0 0 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n4\n4 3\n4 2\n3 4\n2 3\n0\n2\n1 2\n1 2\n0\n3\n1 2\n1 2\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n1 3\n3\n1 1 2\n5\n8 2 0 1 1\n5\n0 1 1 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n1\n2 1\n2\n3 1\n2 3\n4\n1 2\n1 2\n1 4\n1 5\n2\n5 2\n5 3\n"]}, {"input": "8\n2\n0 3\n3\n1 2 3\n4\n1 2 0 4\n3\n0 0 2\n2\n10 2\n3\n0 0 2\n5\n0 2 0 1 1\n5\n0 0 0 0 6\n", "output": ["0\n3\n3 2\n3 1\n2 3\n3\n4 2\n4 1\n4 2\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n0\n"]}, {"input": "8\n2\n6 3\n3\n1 0 3\n4\n2 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n1\n3 1\n5\n4 3\n4 1\n2 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 4 4\n4\n1 2 3 4\n3\n0 0 1\n2\n6 2\n3\n1 0 2\n5\n8 4 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n4\n2 3\n2 3\n2 3\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n1\n3 1\n6\n1 2\n1 2\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 1 3\n4\n1 2 2 4\n3\n0 0 2\n2\n5 2\n3\n0 0 2\n5\n8 2 0 1 3\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n1\n3 2\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 2\n3\n2 2 3\n4\n2 2 5 1\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n0 3 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n5\n3 1\n3 2\n3 1\n3 2\n3 4\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 2 2 4\n3\n0 0 2\n2\n12 4\n3\n0 0 2\n5\n5 2 0 1 4\n5\n1 1 1 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 3\n4 2\n3 4\n0\n4\n1 2\n1 2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n3\n5 1\n5 2\n5 3\n"]}, {"input": "8\n2\n3 5\n3\n0 0 3\n4\n0 2 2 8\n3\n0 0 0\n2\n12 2\n3\n1 0 0\n5\n5 2 -1 1 4\n5\n1 0 0 0 6\n", "output": ["3\n2 1\n2 1\n2 1\n0\n4\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n1\n5 1\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n0 2 3 1\n3\n0 0 2\n2\n7 2\n3\n0 0 3\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n3\n3 2\n3 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n2 2 1 4\n3\n0 0 2\n2\n6 2\n3\n0 0 4\n5\n14 2 0 1 2\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n4\n4 1\n4 2\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n5\n1 2\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 4 2\n4\n1 2 3 4\n3\n0 0 1\n2\n6 3\n3\n1 0 0\n5\n7 4 0 1 1\n5\n0 1 0 0 0\n", "output": ["2\n2 1\n2 1\n3\n2 3\n2 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n6\n1 2\n1 2\n1 2\n1 2\n1 4\n1 5\n0\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 1 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n14 2 0 0 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 1\n4 2\n3 4\n0\n2\n1 2\n1 2\n0\n3\n1 2\n1 2\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n1 3\n3\n0 0 5\n4\n1 2 2 4\n3\n0 0 0\n2\n16 0\n3\n0 0 0\n5\n5 4 -1 1 4\n5\n1 0 0 0 10\n", "output": ["1\n2 1\n0\n4\n4 2\n4 3\n4 1\n2 3\n0\n0\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n1\n5 1\n"]}, {"input": "8\n2\n2 3\n3\n0 0 3\n4\n1 2 3 2\n3\n0 0 2\n2\n5 1\n3\n0 0 4\n5\n13 2 0 2 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n0\n4\n3 2\n3 4\n1 2\n3 4\n0\n1\n1 2\n0\n5\n1 2\n1 4\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n1 3\n3\n1 2 4\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 1\n5\n0 2 0 1 1\n5\n1 1 0 0 9\n", "output": ["1\n2 1\n3\n3 2\n3 1\n3 2\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 4\n2 5\n2\n5 1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 5\n3\n1 0 2\n2\n9 1\n3\n0 0 2\n5\n5 2 0 2 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 2\n4 3\n4 1\n4 2\n3 4\n1\n3 1\n1\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 4\n5 1\n2 4\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 2\n4\n1 3 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n5 2 0 1 4\n5\n1 1 1 0 1\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 2\n4 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 5\n1 5\n1 2\n1 5\n1 2\n4 5\n2\n1 2\n3 5\n"]}, {"input": "8\n2\n3 3\n3\n1 2 3\n4\n1 4 3 1\n3\n0 0 2\n2\n7 2\n3\n0 0 2\n5\n8 2 0 1 0\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n2 3\n4\n2 3\n2 3\n2 1\n2 3\n0\n2\n1 2\n1 2\n0\n3\n1 2\n1 2\n1 4\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n1 2 2 5\n3\n1 0 2\n2\n9 2\n3\n0 1 2\n5\n5 3 0 2 4\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n5\n4 2\n4 3\n4 1\n4 2\n3 4\n1\n3 1\n2\n1 2\n1 2\n1\n3 2\n7\n1 5\n1 2\n1 5\n1 2\n4 5\n1 2\n4 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 2 4\n4\n1 1 3 1\n3\n1 0 0\n2\n7 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n3 2\n3\n3 1\n3 2\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n3 3\n3\n1 0 2\n4\n1 2 2 4\n3\n0 0 2\n2\n12 2\n3\n0 0 2\n5\n4 2 0 1 5\n5\n1 2 1 0 4\n", "output": ["3\n1 2\n1 2\n1 2\n1\n3 1\n4\n4 2\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n6\n5 1\n5 1\n5 1\n2 5\n1 2\n4 5\n4\n5 2\n5 1\n5 2\n3 5\n"]}, {"input": "8\n2\n3 3\n3\n0 0 3\n4\n0 3 2 4\n3\n2 1 0\n2\n12 0\n3\n-1 0 0\n5\n5 4 -1 1 4\n5\n1 0 1 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n0\n4\n4 2\n4 2\n3 4\n2 3\n1\n1 2\n0\n0\n7\n1 2\n1 5\n1 2\n5 1\n2 5\n1 2\n4 5\n2\n5 1\n5 3\n"]}, {"input": "8\n2\n1 3\n3\n0 2 3\n4\n1 1 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["1\n2 1\n2\n3 2\n3 2\n4\n4 3\n4 3\n4 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 3\n4\n1 2 0 7\n3\n0 0 2\n2\n6 3\n3\n0 0 4\n5\n8 2 0 1 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n3 2\n3 1\n2 3\n3\n4 2\n4 1\n4 2\n0\n3\n1 2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 0 3\n4\n2 2 3 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 2 2\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n1\n3 1\n5\n3 4\n1 2\n3 4\n1 2\n3 4\n0\n2\n1 2\n1 2\n0\n6\n1 2\n1 4\n1 5\n1 2\n1 4\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 2 2\n4\n1 2 5 4\n3\n0 0 2\n2\n12 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n1 1 0 0 6\n", "output": ["2\n2 1\n2 1\n2\n2 3\n1 2\n6\n3 4\n3 4\n3 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n2\n5 1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n1 4 2\n4\n1 2 3 4\n3\n0 0 2\n2\n6 3\n3\n1 0 0\n5\n12 2 0 0 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n3\n2 3\n2 1\n2 3\n5\n4 3\n4 2\n3 4\n1 2\n3 4\n0\n3\n1 2\n1 2\n1 2\n0\n3\n1 2\n1 2\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 0 3\n4\n1 2 3 0\n3\n0 0 2\n2\n6 2\n3\n0 0 4\n5\n8 2 0 0 1\n5\n0 1 0 0 6\n", "output": ["2\n2 1\n2 1\n0\n3\n3 2\n3 1\n2 3\n0\n2\n1 2\n1 2\n0\n3\n1 2\n1 2\n1 5\n1\n5 2\n"]}, {"input": "8\n2\n2 3\n3\n0 4 3\n4\n2 2 3 4\n3\n0 0 1\n2\n6 3\n3\n1 0 2\n5\n8 2 0 1 1\n5\n0 1 1 0 6\n", "output": ["2\n2 1\n2 1\n3\n2 3\n2 3\n2 3\n5\n4 3\n4 1\n2 3\n4 1\n2 3\n0\n3\n1 2\n1 2\n1 2\n1\n3 1\n4\n1 2\n1 2\n1 4\n1 5\n2\n5 2\n5 3\n"]}, {"input": "8\n2\n3 3\n3\n1 2 5\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 2\n5\n0 0 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n3\n3 2\n3 1\n3 2\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n2\n2 5\n2 4\n0\n"]}, {"input": "8\n2\n2 2\n3\n2 2 3\n4\n2 2 6 3\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 2 0 0 6\n", "output": ["2\n1 2\n1 2\n3\n3 1\n2 3\n1 2\n6\n3 4\n3 1\n3 2\n3 4\n3 1\n2 3\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 2\n1 4\n1 5\n2\n5 2\n5 2\n"]}, {"input": "8\n2\n5 3\n3\n2 2 1\n4\n0 2 3 7\n3\n0 1 0\n2\n6 2\n3\n0 0 2\n5\n0 2 0 1 0\n5\n0 1 0 0 6\n", "output": ["3\n1 2\n1 2\n1 2\n2\n1 2\n1 2\n5\n4 3\n4 2\n4 3\n4 2\n4 3\n0\n2\n1 2\n1 2\n0\n1\n2 4\n1\n5 2\n"]}], "source_codes": ["\nfn solve_meeting(t: i32, test_cases: &Vec<(i32, Vec<i32>)>) {\n    for i in 0..t {\n        let n = test_cases[i as usize].0;\n        let sociability = &test_cases[i as usize].1;\n        \n        let mut max_sociability: Vec<(usize, &i32)> = sociability.iter().enumerate().collect();\n        max_sociability.sort_by_key(|&(_, x)| std::cmp::Reverse(*x));\n        max_sociability.truncate(2);\n        \n        println!(\"{}\", n);\n        for j in 0..n {\n            if j as usize != max_sociability[0].0 {\n                println!(\"{} {}\", max_sociability[0].0 + 1, j + 1);\n            }\n            if j as usize != max_sociability[1].0 {\n                println!(\"{} {}\", max_sociability[1].0 + 1, j + 1);\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let t: i32 = input.trim().parse().unwrap();\n    \n    let mut test_cases: Vec<(i32, Vec<i32>)> = Vec::new();\n    for _ in 0..t {\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let n: i32 = input.trim().parse().unwrap();\n        \n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let sociability: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        \n        test_cases.push((n, sociability));\n    }\n    \n    solve_meeting(t, &test_cases);\n}\n\n\n"], "responses": ["\nfn solve_meeting(t: i32, test_cases: &Vec<(i32, Vec<i32>)>) {\n    for i in 0..t {\n        let n = test_cases[i as usize].0;\n        let sociability = &test_cases[i as usize].1;\n        \n        let mut max_sociability: Vec<(usize, &i32)> = sociability.iter().enumerate().collect();\n        max_sociability.sort_by_key(|&(_, x)| std::cmp::Reverse(*x));\n        max_sociability.truncate(2);\n        \n        println!(\"{}\", n);\n        for j in 0..n {\n            if j as usize != max_sociability[0].0 {\n                println!(\"{} {}\", max_sociability[0].0 + 1, j + 1);\n            }\n            if j as usize != max_sociability[1].0 {\n                println!(\"{} {}\", max_sociability[1].0 + 1, j + 1);\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let t: i32 = input.trim().parse().unwrap();\n    \n    let mut test_cases: Vec<(i32, Vec<i32>)> = Vec::new();\n    for _ in 0..t {\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let n: i32 = input.trim().parse().unwrap();\n        \n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let sociability: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        \n        test_cases.push((n, sociability));\n    }\n    \n    solve_meeting(t, &test_cases);\n}\n\n\n"], "prompt_tokens": [66423], "completion_tokens": [11372], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1579}
{"name": "1579_E2. Array Optimization by Deque", "description": "In fact, the problems E1 and E2 do not have much in common. You should probably think of them as two separate problems.\n\nYou are given an integer array a[1 \u2026 n] = [a_1, a_2, \u2026, a_n].\n\nLet us consider an empty [deque](https://tinyurl.com/pfeucbux) (double-ended queue). A deque is a data structure that supports adding elements to both the beginning and the end. So, if there are elements [3, 4, 4] currently in the deque, adding an element 1 to the beginning will produce the sequence [\\color{red}{1}, 3, 4, 4], and adding the same element to the end will produce [3, 4, 4, \\color{red}{1}].\n\nThe elements of the array are sequentially added to the initially empty deque, starting with a_1 and finishing with a_n. Before adding each element to the deque, you may choose whether to add it to the beginning or to the end.\n\nFor example, if we consider an array a = [3, 7, 5, 5], one of the possible sequences of actions looks like this:    1. |  add 3 to the beginning of the deque: |  deque has a sequence [\\color{red}{3}] in it;   \n---|---|---  \n  2. |  add 7 to the end of the deque: |  deque has a sequence [3, \\color{red}{7}] in it;   \n  3. |  add 5 to the end of the deque: |  deque has a sequence [3, 7, \\color{red}{5}] in it;   \n  4. |  add 5 to the beginning of the deque: |  deque has a sequence [\\color{red}{5}, 3, 7, 5] in it;   \n  \nFind the minimal possible number of inversions in the deque after the whole array is processed. \n\nAn inversion in sequence d is a pair of indices (i, j) such that i < j and d_i > d_j. For example, the array d = [5, 3, 7, 5] has exactly two inversions \u2014 (1, 2) and (3, 4), since d_1 = 5 > 3 = d_2 and d_3 = 7 > 5 = d_4.\n\nInput\n\nThe first line contains an integer t (1 \u2264 t \u2264 1000) \u2014 the number of test cases.\n\nThe next 2t lines contain descriptions of the test cases. \n\nThe first line of each test case description contains an integer n (1 \u2264 n \u2264 2 \u22c5 10^5) \u2014 array size. The second line of the description contains n space-separated integers a_i (-10^9 \u2264 a_i \u2264 10^9) \u2014 elements of the array.\n\nIt is guaranteed that the sum of n over all test cases does not exceed 2 \u22c5 10^5.\n\nOutput\n\nPrint t lines, each line containing the answer to the corresponding test case. The answer to a test case should be a single integer \u2014 the minimal possible number of inversions in the deque after executing the described algorithm.\n\nExample\n\nInput\n\n\n6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n1 3 1 3 2\n\n\nOutput\n\n\n2\n0\n1\n0\n1\n2\n\nNote\n\nOne of the ways to get the sequence [5, 3, 7, 5] in the deque, containing only two inversions, from the initial array [3, 7, 5, 5] (the first sample test case) is described in the problem statement. \n\nAlso, in this example, you could get the answer of two inversions by simply putting each element of the original array at the end of the deque. In this case, the original sequence [3, 7, 5, 5], also containing exactly two inversions, will be in the deque as-is.", "tags": ["data structures", "greedy"], "difficulty": 11, "id": 1579, "sample_io": [{"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n1\n0\n1\n2\n"]}], "test_list": [{"input": "1\n1\n-1000000000\n", "output": ["0\n"]}, {"input": "1\n5\n999999996 999999997 1000000000 999999998 999999999\n", "output": ["2\n"]}, {"input": "1\n1\n-1090552905\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 3 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 594621428 1000000000 999999998 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 4 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n1\n0\n1\n2\n"]}, {"input": "1\n5\n999999996 999999997 1000000000 714491994 999999999\n", "output": ["1\n"]}, {"input": "6\n4\n3 0 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 3 2\n", "output": ["0\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 1\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 4 2\n", "output": ["1\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 0\n3\n3 1 2\n4\n-1 2 1 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n1\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 5 1\n3\n3 1 2\n4\n-1 2 1 -1\n4\n4 7 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n1\n1\n1\n2\n"]}, {"input": "6\n4\n3 13 5 5\n3\n3 2 1\n3\n0 1 2\n4\n-1 2 2 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n0\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n0\n1\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 0 0\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 3 1 3\n5\n2 3 0 4 0\n", "output": ["2\n0\n1\n0\n1\n0\n"]}, {"input": "6\n4\n3 0 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -2\n4\n4 5 1 3\n5\n2 3 1 3 1\n", "output": ["0\n0\n1\n0\n1\n0\n"]}, {"input": "6\n4\n3 7 8 10\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 1 -1\n4\n4 5 1 3\n5\n2 3 0 4 2\n", "output": ["0\n0\n1\n1\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 5 1\n3\n3 2 2\n4\n-1 2 1 -1\n4\n4 7 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n0\n1\n1\n2\n"]}, {"input": "6\n4\n3 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["1\n0\n0\n1\n1\n1\n"]}, {"input": "6\n4\n3 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 -1\n4\n4 3 1 3\n5\n1 3 0 4 2\n", "output": ["1\n0\n0\n1\n1\n2\n"]}, {"input": "6\n4\n3 7 8 10\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 1 -1\n4\n2 5 1 3\n5\n2 3 0 4 2\n", "output": ["0\n0\n0\n1\n1\n1\n"]}, {"input": "6\n4\n3 7 8 10\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 1 -1\n4\n2 5 1 3\n5\n2 3 0 2 2\n", "output": ["0\n0\n0\n1\n1\n2\n"]}, {"input": "6\n4\n3 7 8 1\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 1 -1\n4\n0 5 1 3\n5\n2 3 0 2 2\n", "output": ["0\n0\n0\n1\n2\n2\n"]}, {"input": "6\n4\n3 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 0\n4\n4 3 2 3\n5\n1 3 0 8 2\n", "output": ["1\n0\n0\n2\n1\n2\n"]}, {"input": "6\n4\n3 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 0\n4\n4 3 2 3\n5\n1 3 0 8 1\n", "output": ["1\n0\n0\n2\n1\n1\n"]}, {"input": "6\n4\n3 1 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 0\n4\n4 3 2 3\n5\n1 3 0 8 1\n", "output": ["0\n0\n0\n2\n1\n1\n"]}, {"input": "6\n4\n3 7 8 1\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 1 -2\n4\n0 5 1 3\n5\n2 3 0 2 0\n", "output": ["0\n0\n0\n1\n2\n1\n"]}, {"input": "6\n4\n3 1 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 0\n4\n4 3 2 3\n5\n1 3 1 8 1\n", "output": ["0\n0\n0\n2\n1\n0\n"]}, {"input": "6\n4\n3 1 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 2 0\n4\n4 3 2 3\n5\n1 3 1 8 1\n", "output": ["0\n0\n0\n1\n1\n0\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 0\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 0 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n2\n1\n"]}, {"input": "1\n5\n1952608156 755572301 1101000000 999999998 999999999\n", "output": ["4\n"]}, {"input": "1\n5\n1281844869 594621428 1000000000 1496043289 1013691690\n", "output": ["3\n"]}, {"input": "6\n4\n5 7 5 5\n3\n3 0 0\n3\n6 1 2\n4\n-2 2 3 -1\n4\n4 3 1 3\n5\n2 3 0 4 0\n", "output": ["0\n0\n1\n1\n1\n0\n"]}, {"input": "6\n4\n3 0 4 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -2\n4\n4 5 1 5\n5\n2 3 1 3 1\n", "output": ["0\n0\n1\n0\n0\n0\n"]}, {"input": "6\n4\n3 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 -1\n4\n4 3 2 6\n5\n1 3 0 8 2\n", "output": ["1\n0\n0\n1\n0\n2\n"]}, {"input": "6\n4\n7 3 5 5\n3\n3 0 0\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 4 2 4\n5\n1 3 0 4 0\n", "output": ["2\n0\n1\n0\n0\n0\n"]}, {"input": "6\n4\n3 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 0\n4\n4 3 2 0\n5\n1 3 0 8 2\n", "output": ["1\n0\n0\n2\n0\n2\n"]}, {"input": "6\n4\n3 7 8 1\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 1 -2\n4\n0 5 1 3\n5\n2 2 0 2 2\n", "output": ["0\n0\n0\n1\n2\n0\n"]}, {"input": "6\n4\n6 7 5 1\n3\n3 2 0\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 0 1 4 2\n", "output": ["0\n0\n1\n0\n1\n2\n"]}, {"input": "6\n4\n2 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 -1\n4\n4 3 1 3\n5\n2 3 0 4 0\n", "output": ["1\n0\n0\n1\n1\n0\n"]}, {"input": "6\n4\n3 0 4 5\n3\n3 2 1\n3\n3 1 4\n4\n-1 2 2 -1\n4\n4 5 1 2\n5\n2 3 1 3 1\n", "output": ["0\n0\n0\n0\n1\n0\n"]}, {"input": "6\n4\n5 3 5 5\n3\n3 0 1\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 4 2 3\n5\n0 3 0 4 0\n", "output": ["0\n1\n1\n0\n1\n0\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 1 2\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 2 1 3\n5\n2 3 0 4 2\n", "output": ["2\n1\n1\n0\n1\n1\n"]}, {"input": "6\n4\n5 1 5 7\n3\n3 3 0\n3\n1 1 2\n4\n-1 2 1 0\n4\n4 1 2 3\n5\n1 3 1 8 1\n", "output": ["0\n0\n0\n2\n2\n0\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 0 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n5 5 1 3\n5\n4 1 1 4 2\n", "output": ["2\n1\n1\n0\n1\n2\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 1 2\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 2 1 3\n5\n2 3 0 4 0\n", "output": ["2\n1\n1\n0\n1\n0\n"]}, {"input": "6\n4\n3 7 4 10\n3\n1 2 1\n3\n3 1 2\n4\n-1 2 1 -2\n4\n7 5 1 3\n5\n2 3 0 4 2\n", "output": ["1\n0\n1\n1\n1\n1\n"]}, {"input": "6\n4\n3 7 8 10\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 1 -1\n4\n2 1 1 3\n5\n2 3 0 3 4\n", "output": ["0\n0\n0\n1\n0\n0\n"]}, {"input": "6\n4\n3 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 -1 -1\n4\n4 3 3 6\n5\n1 3 0 8 2\n", "output": ["1\n0\n0\n0\n0\n2\n"]}, {"input": "6\n4\n5 1 3 7\n3\n3 3 0\n3\n1 1 2\n4\n-1 2 1 0\n4\n4 1 2 3\n5\n1 3 1 8 1\n", "output": ["1\n0\n0\n2\n2\n0\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n0 5 2 3\n5\n1 3 2 1 2\n", "output": ["2\n0\n1\n0\n2\n2\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 2 -1\n4\n0 5 2 3\n5\n1 3 2 1 2\n", "output": ["2\n0\n0\n0\n2\n2\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 1 2\n3\n3 1 2\n4\n-1 2 2 -1\n4\n2 2 1 3\n5\n2 3 0 5 0\n", "output": ["2\n1\n1\n0\n0\n0\n"]}, {"input": "6\n4\n3 7 5 4\n3\n3 5 1\n3\n3 5 2\n4\n-1 2 1 -1\n4\n4 1 1 3\n5\n1 3 1 0 3\n", "output": ["2\n0\n0\n1\n1\n0\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 0 1\n3\n3 1 2\n4\n-1 2 0 -1\n4\n6 5 1 3\n5\n4 1 1 0 2\n", "output": ["2\n1\n1\n1\n1\n1\n"]}, {"input": "6\n4\n3 7 7 5\n3\n3 1 2\n3\n3 1 2\n4\n-1 2 2 -1\n4\n2 2 1 3\n5\n2 3 0 5 0\n", "output": ["1\n1\n1\n0\n0\n0\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n6 1 0\n4\n-1 2 2 0\n4\n0 5 2 3\n5\n1 3 2 1 2\n", "output": ["2\n0\n0\n1\n2\n2\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 0 1\n3\n6 1 0\n4\n-1 2 2 0\n4\n0 5 2 3\n5\n1 3 2 1 2\n", "output": ["2\n1\n0\n1\n2\n2\n"]}, {"input": "6\n4\n3 7 8 15\n3\n3 2 1\n3\n3 0 0\n4\n-1 2 1 -1\n4\n2 1 1 3\n5\n2 4 -1 3 5\n", "output": ["0\n0\n0\n1\n0\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 0 1\n3\n6 1 0\n4\n-1 2 2 0\n4\n0 5 2 3\n5\n1 3 2 1 3\n", "output": ["2\n1\n0\n1\n2\n1\n"]}, {"input": "6\n4\n3 7 8 15\n3\n3 2 1\n3\n3 0 0\n4\n-1 2 1 0\n4\n2 1 1 3\n5\n2 4 -1 3 5\n", "output": ["0\n0\n0\n2\n0\n1\n"]}, {"input": "6\n4\n3 7 8 15\n3\n3 2 1\n3\n3 0 0\n4\n-1 2 1 0\n4\n2 1 1 3\n5\n2 4 -1 3 1\n", "output": ["0\n0\n0\n2\n0\n2\n"]}, {"input": "6\n4\n2 11 5 0\n3\n5 5 1\n3\n3 5 2\n4\n-1 2 1 -1\n4\n4 0 1 3\n5\n1 3 1 0 5\n", "output": ["1\n0\n0\n1\n2\n0\n"]}, {"input": "6\n4\n3 7 8 15\n3\n3 2 1\n3\n3 0 0\n4\n-1 2 1 0\n4\n4 1 1 3\n5\n2 4 -1 3 1\n", "output": ["0\n0\n0\n2\n1\n2\n"]}, {"input": "6\n4\n2 11 8 0\n3\n10 2 1\n3\n3 5 2\n4\n1 2 1 -1\n4\n4 0 1 6\n5\n1 5 1 0 0\n", "output": ["1\n0\n0\n0\n1\n0\n"]}, {"input": "6\n4\n2 11 8 -1\n3\n10 2 1\n3\n3 10 2\n4\n1 2 1 -1\n4\n4 0 1 6\n5\n1 5 1 -1 0\n", "output": ["1\n0\n0\n0\n1\n1\n"]}, {"input": "6\n4\n2 11 8 -1\n3\n10 2 1\n3\n5 10 2\n4\n1 2 1 -1\n4\n1 0 1 6\n5\n1 5 1 -1 0\n", "output": ["1\n0\n0\n0\n0\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n1 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n0\n0\n1\n2\n"]}, {"input": "6\n4\n3 7 5 1\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n0 3 1 4 2\n", "output": ["1\n0\n1\n0\n1\n3\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 0\n3\n3 1 2\n4\n-1 2 1 -1\n4\n4 3 1 4\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n1\n0\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n1\n-1572755758\n", "output": ["0\n"]}, {"input": "1\n1\n-1994447814\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 6 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 3 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 594621428 1001000000 999999998 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 4 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 7 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n1\n0\n1\n2\n"]}, {"input": "1\n1\n-3557835192\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 6 5\n3\n6 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 3 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 755572301 1001000000 999999998 999999999\n", "output": ["2\n"]}, {"input": "1\n1\n-1177154308\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 0\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 0\n3\n6 1 2\n4\n-1 2 2 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 0\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n1\n-404786817\n", "output": ["0\n"]}, {"input": "1\n1\n-2306668450\n", "output": ["0\n"]}, {"input": "1\n5\n999999996 594621428 1000000000 1496043289 999999999\n", "output": ["2\n"]}, {"input": "1\n1\n-170211275\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 8 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 0 4 2\n", "output": ["1\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 594621428 1001000000 628405048 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 5 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 7 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n1\n0\n1\n2\n"]}, {"input": "6\n4\n3 7 6 5\n3\n6 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 2 2\n", "output": ["2\n0\n1\n0\n1\n2\n"]}, {"input": "6\n4\n3 13 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 755572301 1101000000 999999998 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 0\n3\n6 1 2\n4\n-1 2 2 -1\n4\n8 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 0 0\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 999999997 1000000000 1318373358 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 0 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -2\n4\n4 5 1 3\n5\n2 3 1 3 2\n", "output": ["0\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 1\n3\n3 2 0\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 4 2\n", "output": ["1\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n1281844869 594621428 1000000000 1496043289 999999999\n", "output": ["2\n"]}, {"input": "1\n1\n-41790379\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 8 10\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 0 4 2\n", "output": ["0\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 256091627 1001000000 628405048 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 6 5\n3\n6 2 1\n3\n3 1 2\n4\n-1 2 3 -1\n4\n4 5 1 3\n5\n2 3 1 2 2\n", "output": ["2\n0\n1\n0\n1\n2\n"]}, {"input": "1\n5\n999999996 755572301 1101000000 999999998 1368676000\n", "output": ["1\n"]}, {"input": "6\n4\n3 7 5 4\n3\n3 2 0\n3\n6 1 2\n4\n-1 2 2 -1\n4\n8 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 999999997 1001000000 1318373358 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 5 1\n3\n3 2 0\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n3 3 1 4 2\n", "output": ["1\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n236424498 594621428 1000000000 1496043289 999999999\n", "output": ["2\n"]}, {"input": "1\n5\n999999996 256091627 1001000000 628405048 1063115534\n", "output": ["1\n"]}, {"input": "6\n4\n3 7 6 5\n3\n6 2 1\n3\n3 1 2\n4\n-1 2 3 -1\n4\n7 5 1 3\n5\n2 3 1 2 2\n", "output": ["2\n0\n1\n0\n1\n2\n"]}, {"input": "6\n4\n3 13 5 5\n3\n3 2 1\n3\n0 2 2\n4\n-1 2 2 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n0\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 755572301 0101000000 999999998 1368676000\n", "output": ["0\n"]}, {"input": "6\n4\n5 7 5 5\n3\n3 0 0\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 3 1 3\n5\n2 3 0 4 0\n", "output": ["0\n0\n1\n0\n1\n0\n"]}, {"input": "6\n4\n3 0 4 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -2\n4\n4 5 1 3\n5\n2 3 1 3 1\n", "output": ["0\n0\n1\n0\n1\n0\n"]}, {"input": "1\n5\n236424498 594621428 1010000000 1496043289 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 8 10\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 1 -1\n4\n2 5 1 3\n5\n2 3 0 4 2\n", "output": ["0\n0\n1\n1\n1\n1\n"]}, {"input": "1\n5\n999999996 256091627 1001000000 330631407 1063115534\n", "output": ["1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 5 1\n3\n2 2 2\n4\n-1 2 1 -1\n4\n4 7 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n0\n1\n1\n2\n"]}, {"input": "6\n4\n3 13 5 5\n3\n3 2 1\n3\n0 2 2\n4\n-1 2 0 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n0\n1\n1\n1\n"]}, {"input": "1\n5\n999999996 755572301 0101000000 733198157 1368676000\n", "output": ["1\n"]}, {"input": "6\n4\n5 3 5 5\n3\n3 0 0\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 3 1 3\n5\n2 3 0 4 0\n", "output": ["0\n0\n1\n0\n1\n0\n"]}, {"input": "6\n4\n3 0 4 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 3 1\n", "output": ["0\n0\n1\n0\n1\n0\n"]}, {"input": "1\n5\n236424498 842458350 1010000000 1496043289 999999999\n", "output": ["2\n"]}, {"input": "1\n5\n875031871 256091627 1001000000 330631407 1063115534\n", "output": ["1\n"]}, {"input": "6\n4\n3 13 5 4\n3\n3 2 1\n3\n0 2 2\n4\n-1 2 0 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n0\n1\n1\n1\n"]}, {"input": "1\n5\n999999996 755572301 0101000000 90693554 1368676000\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 0 -1\n4\n4 3 1 3\n5\n1 3 0 4 2\n", "output": ["1\n0\n0\n1\n1\n2\n"]}, {"input": "6\n4\n5 3 5 5\n3\n3 0 0\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 3 1 3\n5\n1 3 0 4 0\n", "output": ["0\n0\n1\n0\n1\n0\n"]}, {"input": "1\n5\n236424498 842458350 1010100000 1496043289 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 13 5 4\n3\n3 2 1\n3\n0 2 0\n4\n-1 2 0 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n0\n1\n1\n1\n"]}, {"input": "1\n5\n999999996 109225457 0101000000 90693554 1368676000\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 0 -1\n4\n4 3 2 3\n5\n1 3 0 4 2\n", "output": ["1\n0\n0\n1\n1\n2\n"]}, {"input": "6\n4\n5 3 5 5\n3\n3 0 0\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 3 2 3\n5\n1 3 0 4 0\n", "output": ["0\n0\n1\n0\n1\n0\n"]}, {"input": "1\n5\n236424498 842458350 1000100000 1496043289 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 8 1\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 1 -1\n4\n2 5 1 3\n5\n2 3 0 2 2\n", "output": ["0\n0\n0\n1\n1\n2\n"]}, {"input": "6\n4\n3 13 5 4\n3\n3 2 0\n3\n0 2 0\n4\n-1 2 0 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n0\n1\n1\n1\n"]}, {"input": "1\n5\n999999996 109225457 0101000000 138689760 1368676000\n", "output": ["1\n"]}, {"input": "6\n4\n3 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 0 -1\n4\n4 3 2 3\n5\n1 3 0 8 2\n", "output": ["1\n0\n0\n1\n1\n2\n"]}, {"input": "6\n4\n5 3 5 5\n3\n3 0 0\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 4 2 3\n5\n1 3 0 4 0\n", "output": ["0\n0\n1\n0\n1\n0\n"]}, {"input": "1\n5\n999999996 26547904 0101000000 138689760 1368676000\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 -1\n4\n4 3 2 3\n5\n1 3 0 8 2\n", "output": ["1\n0\n0\n1\n1\n2\n"]}, {"input": "6\n4\n7 3 5 5\n3\n3 0 0\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 4 2 3\n5\n1 3 0 4 0\n", "output": ["2\n0\n1\n0\n1\n0\n"]}, {"input": "6\n4\n3 7 8 1\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 1 -1\n4\n0 5 0 3\n5\n2 3 0 2 2\n", "output": ["0\n0\n0\n1\n1\n2\n"]}, {"input": "1\n5\n999999996 26547904 0101100000 138689760 1368676000\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 8 1\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 1 -2\n4\n0 5 0 3\n5\n2 3 0 2 2\n", "output": ["0\n0\n0\n1\n1\n2\n"]}, {"input": "1\n5\n999999996 26547904 0101100010 138689760 1368676000\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 8 1\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 1 -2\n4\n0 5 1 3\n5\n2 3 0 2 2\n", "output": ["0\n0\n0\n1\n2\n2\n"]}, {"input": "1\n1\n-1182291871\n", "output": ["0\n"]}, {"input": "1\n5\n999999996 999999997 1000000000 999999998 1212312430\n", "output": ["1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n1 3 1 1 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n1\n-2072621836\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 1 2 -1\n4\n4 5 1 3\n5\n2 3 1 3 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n5 5 1 3\n5\n2 3 1 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 594621428 1000000000 999999998 1844965305\n", "output": ["1\n"]}, {"input": "1\n1\n-2060860677\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 6 5\n3\n3 2 1\n3\n3 2 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 3 2\n", "output": ["2\n0\n0\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 2 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 594621428 1001000000 1449709188 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 4 1\n3\n3 1 2\n4\n-1 2 2 -2\n4\n4 7 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n1\n0\n1\n2\n"]}, {"input": "1\n1\n-5490202626\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 5 5\n3\n6 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n912921884 755572301 1001000000 999999998 999999999\n", "output": ["2\n"]}, {"input": "1\n1\n-303186913\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 0\n3\n6 1 2\n4\n-1 2 2 -1\n4\n4 3 1 3\n5\n2 3 -1 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 2 0\n3\n6 1 2\n4\n-2 2 3 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n1\n1\n1\n"]}, {"input": "1\n1\n-335830449\n", "output": ["0\n"]}, {"input": "6\n4\n3 0 5 5\n3\n3 3 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 3 2\n", "output": ["0\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 5 1\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n6 5 1 3\n5\n2 3 1 4 2\n", "output": ["1\n0\n1\n0\n1\n1\n"]}, {"input": "1\n1\n-2980236549\n", "output": ["0\n"]}, {"input": "1\n1\n-137484530\n", "output": ["0\n"]}, {"input": "1\n5\n999999996 472578341 1001000000 628405048 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 5 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 14 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n1\n0\n1\n2\n"]}, {"input": "6\n4\n3 7 1 5\n3\n3 0 0\n3\n6 1 2\n4\n-1 2 3 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["1\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 999999997 1000000100 1318373358 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 0 5 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 4 -2\n4\n4 5 1 3\n5\n2 3 1 3 2\n", "output": ["0\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n6 7 5 1\n3\n3 2 0\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 1 4 2\n", "output": ["0\n0\n1\n0\n1\n1\n"]}, {"input": "6\n4\n3 7 8 10\n3\n3 1 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n2 3 0 4 2\n", "output": ["0\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 256091627 1001000000 628405048 1112913869\n", "output": ["1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 5 1\n3\n3 1 2\n4\n-1 2 1 -1\n4\n4 5 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n1\n1\n1\n2\n"]}, {"input": "6\n4\n3 7 6 5\n3\n6 2 1\n3\n3 1 2\n4\n0 2 3 -1\n4\n4 5 1 3\n5\n2 3 1 2 2\n", "output": ["2\n0\n1\n0\n1\n2\n"]}, {"input": "6\n4\n3 13 5 5\n3\n3 2 1\n3\n0 2 2\n4\n-1 2 2 -1\n4\n4 3 1 3\n5\n2 3 -1 4 2\n", "output": ["2\n0\n0\n0\n1\n1\n"]}, {"input": "1\n5\n1009392756 755572301 1101000000 999999998 1368676000\n", "output": ["1\n"]}, {"input": "6\n4\n3 7 4 5\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n0\n1\n1\n1\n"]}, {"input": "6\n4\n3 7 5 4\n3\n3 2 0\n3\n10 1 2\n4\n-1 2 2 -1\n4\n8 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 999999997 1001000000 1318373358 195849909\n", "output": ["0\n"]}, {"input": "6\n4\n3 8 5 1\n3\n3 2 0\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 3\n5\n3 3 1 4 2\n", "output": ["1\n0\n1\n0\n1\n1\n"]}, {"input": "1\n5\n236424498 594621428 1000100000 1496043289 999999999\n", "output": ["2\n"]}, {"input": "6\n4\n3 7 8 10\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 1 -1\n4\n7 5 1 3\n5\n2 3 0 4 2\n", "output": ["0\n0\n1\n1\n1\n1\n"]}, {"input": "1\n5\n999999996 14187850 1001000000 628405048 1063115534\n", "output": ["1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 5 1\n3\n3 3 2\n4\n-1 2 1 -1\n4\n4 7 1 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n0\n1\n1\n2\n"]}, {"input": "6\n4\n3 13 5 5\n3\n3 2 1\n3\n0 2 2\n4\n-1 0 2 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["2\n0\n0\n0\n1\n1\n"]}, {"input": "1\n5\n999999996 755572301 0101000000 999999998 1770800587\n", "output": ["0\n"]}, {"input": "6\n4\n2 7 5 7\n3\n3 2 0\n3\n1 1 2\n4\n-1 2 1 -1\n4\n4 3 1 3\n5\n2 3 0 4 2\n", "output": ["1\n0\n0\n1\n1\n1\n"]}, {"input": "1\n5\n236424498 594621428 1010001000 1496043289 999999999\n", "output": ["2\n"]}, {"input": "1\n5\n999999996 256091627 0001000000 330631407 1063115534\n", "output": ["1\n"]}, {"input": "6\n4\n3 7 5 5\n3\n3 5 1\n3\n2 2 2\n4\n-1 2 1 -1\n4\n4 7 2 3\n5\n1 3 1 3 2\n", "output": ["2\n0\n0\n1\n1\n2\n"]}, {"input": "1\n5\n999999996 755572301 0101000000 407201525 1368676000\n", "output": ["1\n"]}, {"input": "6\n4\n3 0 4 5\n3\n3 2 1\n3\n3 1 2\n4\n-1 2 2 -1\n4\n4 5 1 2\n5\n2 3 1 3 1\n", "output": ["0\n0\n1\n0\n1\n0\n"]}, {"input": "1\n5\n236424498 842458350 1010000000 1496043289 1990754\n", "output": ["0\n"]}, {"input": "6\n4\n3 7 8 10\n3\n3 2 1\n3\n3 1 0\n4\n-1 2 1 -1\n4\n2 5 1 3\n5\n2 3 0 4 4\n", "output": ["0\n0\n0\n1\n1\n0\n"]}, {"input": "1\n5\n875031871 256091627 1001000000 219086351 1063115534\n", "output": ["0\n"]}], "source_codes": ["\nfn min_inversions(t: i32, test_cases: &Vec<(i32, Vec<i32>)>) -> Vec<i32> {\n    fn count_inversions(arr: &Vec<i32>) -> i32 {\n        let n = arr.len();\n        let mut inc = vec![1; n];\n        let mut dec = vec![1; n];\n        \n        for i in 1..n {\n            for j in 0..i {\n                if arr[i] >= arr[j] {\n                    inc[i] = std::cmp::max(inc[i], inc[j] + 1);\n                }\n            }\n        }\n        \n        for i in (0..n-1).rev() {\n            for j in (i+1..n).rev() {\n                if arr[i] > arr[j] {\n                    dec[i] = std::cmp::max(dec[i], dec[j] + 1);\n                }\n            }\n        }\n        \n        let mut min_inversions = 0;\n        for i in 0..n {\n            min_inversions = std::cmp::max(min_inversions, inc[i] + dec[i] - 1);\n        }\n        \n        return n as i32 - min_inversions;\n    }\n    \n    let mut results = Vec::new();\n    for i in 0..t {\n        let n = test_cases[i as usize].0;\n        let arr = &test_cases[i as usize].1;\n        results.push(count_inversions(arr));\n    }\n    \n    return results;\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let t: i32 = input.trim().parse().unwrap();\n    \n    let mut test_cases = Vec::new();\n    for _ in 0..t {\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let n: i32 = input.trim().parse().unwrap();\n        \n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let arr: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        \n        test_cases.push((n, arr));\n    }\n    \n    let output = min_inversions(t, &test_cases);\n    for res in output {\n        println!(\"{}\", res);\n    }\n}\n\n\n"], "responses": ["\nfn min_inversions(t: i32, test_cases: &Vec<(i32, Vec<i32>)>) -> Vec<i32> {\n    fn count_inversions(arr: &Vec<i32>) -> i32 {\n        let n = arr.len();\n        let mut inc = vec![1; n];\n        let mut dec = vec![1; n];\n        \n        for i in 1..n {\n            for j in 0..i {\n                if arr[i] >= arr[j] {\n                    inc[i] = std::cmp::max(inc[i], inc[j] + 1);\n                }\n            }\n        }\n        \n        for i in (0..n-1).rev() {\n            for j in (i+1..n).rev() {\n                if arr[i] > arr[j] {\n                    dec[i] = std::cmp::max(dec[i], dec[j] + 1);\n                }\n            }\n        }\n        \n        let mut min_inversions = 0;\n        for i in 0..n {\n            min_inversions = std::cmp::max(min_inversions, inc[i] + dec[i] - 1);\n        }\n        \n        return n as i32 - min_inversions;\n    }\n    \n    let mut results = Vec::new();\n    for i in 0..t {\n        let n = test_cases[i as usize].0;\n        let arr = &test_cases[i as usize].1;\n        results.push(count_inversions(arr));\n    }\n    \n    return results;\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let t: i32 = input.trim().parse().unwrap();\n    \n    let mut test_cases = Vec::new();\n    for _ in 0..t {\n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let n: i32 = input.trim().parse().unwrap();\n        \n        input.clear();\n        std::io::stdin().read_line(&mut input).unwrap();\n        let arr: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        \n        test_cases.push((n, arr));\n    }\n    \n    let output = min_inversions(t, &test_cases);\n    for res in output {\n        println!(\"{}\", res);\n    }\n}\n\n\n"], "prompt_tokens": [76825], "completion_tokens": [14683], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1579}
{"name": "1579_F. Array Stabilization (AND version)", "description": "You are given an array a[0 \u2026 n - 1] = [a_0, a_1, \u2026, a_{n - 1}] of zeroes and ones only. Note that in this problem, unlike the others, the array indexes are numbered from zero, not from one.\n\nIn one step, the array a is replaced by another array of length n according to the following rules: \n\n  1. First, a new array a^{\u2192 d} is defined as a cyclic shift of the array a to the right by d cells. The elements of this array can be defined as a^{\u2192 d}_i = a_{(i + n - d) mod n}, where (i + n - d) mod n is the remainder of integer division of i + n - d by n. \n\nIt means that the whole array a^{\u2192 d} can be represented as a sequence $$$a^{\u2192 d} = [a_{n - d}, a_{n - d + 1}, \u2026, a_{n - 1}, a_0, a_1, \u2026, a_{n - d - 1}]$$$\n\n  2. Then each element of the array a_i is replaced by a_i  \\&  a^{\u2192 d}_i, where \\& is a logical \"AND\" operator. \n\n\n\nFor example, if a = [0, 0, 1, 1] and d = 1, then a^{\u2192 d} = [1, 0, 0, 1] and the value of a after the first step will be [0  \\&  1, 0  \\&  0, 1  \\&  0, 1  \\&  1], that is [0, 0, 0, 1].\n\nThe process ends when the array stops changing. For a given array a, determine whether it will consist of only zeros at the end of the process. If yes, also find the number of steps the process will take before it finishes.\n\nInput\n\nThe first line contains an integer t (1 \u2264 t \u2264 1000) \u2014 the number of test cases.\n\nThe next 2t lines contain descriptions of the test cases. \n\nThe first line of each test case description contains two integers: n (1 \u2264 n \u2264 10^6) \u2014 array size and d (1 \u2264 d \u2264 n) \u2014 cyclic shift offset. The second line of the description contains n space-separated integers a_i (0 \u2264 a_i \u2264 1) \u2014 elements of the array.\n\nIt is guaranteed that the sum of n over all test cases does not exceed 10^6.\n\nOutput\n\nPrint t lines, each line containing the answer to the corresponding test case. The answer to a test case should be a single integer \u2014 the number of steps after which the array will contain only zeros for the first time. If there are still elements equal to 1 in the array after the end of the process, print -1.\n\nExample\n\nInput\n\n\n5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 1 0\n4 2\n0 1 0 1\n1 1\n0\n\n\nOutput\n\n\n1\n1\n3\n-1\n0\n\nNote\n\nIn the third sample test case the array will change as follows: \n\n  1. At the beginning a = [1, 1, 0, 1, 0], and a^{\u2192 2} = [1, 0, 1, 1, 0]. Their element-by-element \"AND\" is equal to $$$[1  \\&  1, 1  \\&  0, 0  \\&  1, 1  \\&  1, 0  \\&  0] = [1, 0, 0, 1, 0]$$$ \n  2. Now a = [1, 0, 0, 1, 0], then a^{\u2192 2} = [1, 0, 1, 0, 0]. Their element-by-element \"AND\" equals to $$$[1  \\&  1, 0  \\&  0, 0  \\&  1, 1  \\&  0, 0  \\&  0] = [1, 0, 0, 0, 0]$$$ \n  3. And finally, when a = [1, 0, 0, 0, 0] we get a^{\u2192 2} = [0, 0, 1, 0, 0]. Their element-by-element \"AND\" equals to $$$[1  \\&  0, 0  \\&  0, 0  \\&  1, 0  \\&  0, 0  \\&  0] = [0, 0, 0, 0, 0]$$$ \n\nThus, the answer is 3 steps.\n\nIn the fourth sample test case, the array will not change as it shifts by 2 to the right, so each element will be calculated as 0  \\&  0 or 1  \\&  1 thus not changing its value. So the answer is -1, the array will never contain only zeros.", "tags": ["brute force", "graphs", "math", "number theory", "shortest paths"], "difficulty": 12, "id": 1579, "sample_io": [{"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n3\n-1\n0\n"]}], "test_list": [{"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n4\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 0 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n3\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 0 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n1\n-1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 2\n1 1 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n1\n4\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 0 0\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 0 0\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n2\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n2\n1\n0\n"]}, {"input": "5\n2 2\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 0 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["-1\n1\n1\n-1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 2\n1 1 1 1 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["0\n1\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 0 0\n4 3\n0 1 1 0\n1 1\n0\n", "output": ["1\n2\n1\n2\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 3\n1 1 1 1 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 0 0\n4 4\n0 1 0 0\n1 1\n0\n", "output": ["1\n2\n1\n-1\n0\n"]}, {"input": "5\n2 1\n1 1\n3 2\n0 1 0\n5 2\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["-1\n1\n2\n1\n0\n"]}, {"input": "5\n2 2\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 0 0\n4 2\n0 0 0 1\n1 1\n0\n", "output": ["-1\n1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n2\n4\n-1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 2\n1 1 0 0 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n1\n1\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 1 1\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n-1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 1 0\n5 2\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n-1\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 0 0\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n0\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 3\n0 1 0\n5 3\n1 1 1 1 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["0\n-1\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 1 0\n5 3\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["1\n1\n1\n1\n-1\n"]}, {"input": "5\n2 2\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 1 0\n4 2\n0 0 0 1\n1 1\n0\n", "output": ["-1\n1\n3\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 3\n1 1 0 0 1\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n2\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 1 0\n5 2\n1 1 1 1 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n-1\n4\n1\n0\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 3\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["-1\n1\n1\n1\n-1\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 3\n1 1 0 0 0\n4 3\n1 1 0 0\n1 1\n1\n", "output": ["-1\n1\n1\n2\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 0 0\n5 2\n1 1 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n0\n4\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 1 0\n5 2\n1 0 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n2\n3\n-1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 1\n0 1 0\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["0\n1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 1 0\n5 2\n1 0 0 0 0\n4 3\n0 0 0 0\n1 1\n0\n", "output": ["1\n1\n1\n0\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 2\n1 1 0 0 1\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n1\n2\n-1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 3\n0 1 0\n5 3\n1 1 0 1 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["0\n-1\n3\n1\n0\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 3\n1 1 1 0 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["0\n-1\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 0 0\n5 2\n1 1 1 1 0\n4 2\n0 0 0 1\n1 1\n0\n", "output": ["1\n0\n4\n1\n0\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 1\n5 2\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["-1\n2\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 1\n5 2\n1 1 0 0 1\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n2\n2\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 1 1\n5 2\n1 1 0 0 0\n4 1\n0 1 0 0\n1 1\n1\n", "output": ["1\n-1\n1\n1\n-1\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 2\n1 1 0 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n1\n3\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 0 0\n4 3\n0 1 1 1\n1 1\n0\n", "output": ["1\n2\n1\n3\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 4\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n3\n1\n0\n"]}, {"input": "5\n2 2\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 0 1\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["-1\n1\n2\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 1 0\n4 2\n0 1 0 0\n1 1\n0\n", "output": ["1\n2\n3\n1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 4\n1 1 1 1 1\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n1\n-1\n-1\n0\n"]}, {"input": "5\n2 2\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 0 0\n4 2\n0 0 0 1\n1 1\n0\n", "output": ["-1\n2\n1\n1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 2\n0 0 0\n5 2\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n0\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 1\n5 2\n1 1 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n2\n4\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 3\n1 1 0 0 0\n4 3\n0 1 0 1\n1 1\n1\n", "output": ["1\n2\n1\n1\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 1 0\n5 3\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["1\n1\n2\n1\n-1\n"]}, {"input": "5\n2 1\n0 0\n3 2\n1 1 1\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["0\n-1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 1 0\n5 2\n1 1 1 1 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["1\n-1\n4\n1\n-1\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 4\n1 1 0 0 0\n4 3\n1 1 0 0\n1 1\n1\n", "output": ["-1\n1\n2\n2\n-1\n"]}, {"input": "5\n2 1\n0 0\n3 1\n0 1 0\n5 2\n1 1 0 0 0\n4 3\n1 1 0 0\n1 1\n0\n", "output": ["0\n1\n1\n2\n0\n"]}, {"input": "5\n2 1\n1 0\n3 3\n0 1 0\n5 3\n1 1 0 1 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["1\n-1\n3\n1\n0\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 3\n1 1 1 0 0\n4 1\n0 1 0 1\n1 1\n1\n", "output": ["0\n-1\n2\n1\n-1\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 1\n1 1 1 1 0\n4 1\n0 1 0 0\n1 1\n1\n", "output": ["0\n-1\n4\n1\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 1 1\n5 2\n1 1 0 0 0\n4 1\n0 0 0 0\n1 1\n1\n", "output": ["1\n-1\n1\n0\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 0 0\n4 3\n0 1 1 1\n1 1\n0\n", "output": ["1\n1\n1\n3\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n1 1 0\n5 3\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["1\n2\n2\n1\n-1\n"]}, {"input": "5\n2 1\n0 0\n3 2\n1 1 1\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["0\n-1\n1\n1\n-1\n"]}, {"input": "5\n2 1\n1 0\n3 2\n0 1 0\n5 2\n1 1 1 0 1\n4 2\n0 0 0 0\n1 1\n0\n", "output": ["1\n1\n4\n0\n0\n"]}, {"input": "5\n2 2\n0 1\n3 2\n1 1 1\n5 2\n1 1 0 0 0\n4 1\n0 0 0 0\n1 1\n1\n", "output": ["-1\n-1\n1\n0\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 1\n1 1 0 0 0\n4 3\n0 1 1 1\n1 1\n0\n", "output": ["1\n1\n2\n3\n0\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 4\n1 1 0 0 0\n4 2\n1 1 0 0\n1 1\n1\n", "output": ["-1\n1\n2\n1\n-1\n"]}, {"input": "5\n2 2\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 0 0\n4 3\n0 1 1 1\n1 1\n0\n", "output": ["-1\n1\n1\n3\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 2\n1 1 0 1 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["0\n1\n3\n1\n0\n"]}, {"input": "5\n2 1\n1 1\n3 2\n0 1 0\n5 3\n1 1 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["-1\n1\n4\n-1\n0\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 0 0\n5 3\n0 1 0 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["-1\n0\n1\n1\n-1\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 3\n1 1 0 0 0\n4 4\n1 1 0 0\n1 1\n1\n", "output": ["-1\n1\n1\n-1\n-1\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 2\n1 1 1 0 1\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["-1\n1\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n1 1 0\n5 4\n1 1 1 1 1\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n2\n-1\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 1 0\n5 5\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["1\n1\n-1\n1\n-1\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 0 0\n5 2\n1 1 0 0 1\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["0\n0\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 1 0\n5 3\n1 1 1 1 0\n4 4\n0 1 0 0\n1 1\n1\n", "output": ["1\n-1\n4\n-1\n-1\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 4\n0 0 0 0 0\n4 3\n1 1 0 0\n1 1\n1\n", "output": ["-1\n1\n0\n2\n-1\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 1\n5 4\n1 1 0 0 0\n4 2\n1 1 0 0\n1 1\n1\n", "output": ["-1\n2\n2\n1\n-1\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 1\n5 3\n1 0 0 0 0\n4 4\n1 1 0 0\n1 1\n1\n", "output": ["-1\n2\n1\n-1\n-1\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 5\n1 1 1 1 0\n4 1\n0 1 0 0\n1 1\n0\n", "output": ["0\n-1\n-1\n1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 1\n1 1 1\n5 4\n1 1 0 0 0\n4 2\n1 1 0 0\n1 1\n1\n", "output": ["1\n-1\n2\n1\n-1\n"]}, {"input": "5\n2 2\n0 1\n3 3\n0 1 0\n5 2\n1 1 0 0 0\n4 3\n1 1 0 1\n1 1\n0\n", "output": ["-1\n-1\n1\n3\n0\n"]}, {"input": "5\n2 2\n1 0\n3 3\n0 1 0\n5 5\n1 1 1 1 0\n4 1\n0 1 0 0\n1 1\n0\n", "output": ["-1\n-1\n-1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 0 0\n5 1\n1 1 0 0 0\n4 1\n0 1 0 1\n1 1\n1\n", "output": ["1\n0\n2\n1\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 0 0\n5 1\n1 1 0 0 0\n4 1\n0 1 1 1\n1 1\n1\n", "output": ["1\n0\n2\n3\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 0 0\n5 1\n1 1 0 0 0\n4 1\n0 1 1 1\n1 1\n0\n", "output": ["1\n0\n2\n3\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 0 0\n5 1\n1 1 0 0 0\n4 1\n0 1 1 1\n1 1\n0\n", "output": ["0\n0\n2\n3\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 3\n1 1 1 1 0\n4 1\n1 1 0 1\n1 1\n0\n", "output": ["1\n1\n4\n3\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 2\n1 1 0 0 1\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["0\n1\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n1 0 1\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["0\n2\n1\n1\n0\n"]}, {"input": "5\n2 2\n1 0\n3 3\n0 1 0\n5 1\n1 1 1 1 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["-1\n-1\n4\n1\n0\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 3\n1 1 0 0 0\n4 3\n1 1 0 1\n1 1\n1\n", "output": ["-1\n1\n1\n3\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 1 0\n5 1\n1 0 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n2\n2\n-1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 1\n0 0 0\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["0\n0\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 0 0\n5 2\n1 0 0 0 0\n4 3\n0 0 0 0\n1 1\n0\n", "output": ["1\n0\n1\n0\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 1\n5 2\n1 1 0 0 1\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["0\n2\n2\n1\n0\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 1\n1 0 1 1 0\n4 1\n1 1 0 1\n1 1\n0\n", "output": ["0\n-1\n2\n3\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 1 1\n5 2\n1 1 0 1 0\n4 1\n0 1 0 0\n1 1\n1\n", "output": ["1\n-1\n3\n1\n-1\n"]}, {"input": "5\n2 2\n0 0\n3 2\n0 1 1\n5 4\n1 1 0 0 1\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n2\n3\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 1\n1 1 0 0 0\n4 3\n0 1 1 0\n1 1\n0\n", "output": ["1\n2\n2\n2\n0\n"]}, {"input": "5\n2 1\n1 1\n3 1\n1 1 0\n5 4\n1 1 0 0 0\n4 3\n1 1 0 0\n1 1\n1\n", "output": ["-1\n2\n2\n2\n-1\n"]}, {"input": "5\n2 1\n0 0\n3 1\n0 1 0\n5 1\n1 1 0 0 0\n4 3\n1 1 0 0\n1 1\n0\n", "output": ["0\n1\n2\n2\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 1\n1 1 0 0 0\n4 3\n0 1 1 1\n1 1\n1\n", "output": ["1\n1\n2\n3\n-1\n"]}, {"input": "5\n2 2\n0 1\n3 3\n0 1 0\n5 2\n1 1 0 0 0\n4 2\n0 1 0 0\n1 1\n0\n", "output": ["-1\n-1\n1\n1\n0\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 3\n1 1 1 0 0\n4 1\n1 1 0 0\n1 1\n0\n", "output": ["0\n-1\n2\n2\n0\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 0 0\n5 3\n1 1 0 0 0\n4 3\n0 1 0 1\n1 1\n1\n", "output": ["1\n0\n1\n1\n-1\n"]}, {"input": "5\n2 2\n1 0\n3 2\n1 1 1\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["-1\n-1\n1\n1\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 1 0\n5 3\n1 1 1 1 0\n4 4\n0 1 0 0\n1 1\n0\n", "output": ["1\n-1\n4\n-1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 2\n0 1 0\n5 2\n1 1 1 0 0\n4 1\n0 0 0 0\n1 1\n0\n", "output": ["1\n1\n2\n0\n0\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 1 0\n5 2\n1 1 0 0 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n-1\n1\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 0 0\n5 1\n1 1 0 0 1\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n0\n3\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 0 0\n5 1\n1 1 0 0 1\n4 1\n0 1 0 1\n1 1\n1\n", "output": ["1\n0\n3\n1\n-1\n"]}, {"input": "5\n2 1\n1 1\n3 3\n0 1 0\n5 4\n1 1 0 0 1\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["-1\n-1\n3\n1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 1\n0 1 0\n5 5\n0 0 0 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["1\n1\n0\n1\n-1\n"]}, {"input": "5\n2 1\n1 0\n3 1\n1 1 0\n5 4\n1 1 1 1 1\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n2\n-1\n-1\n0\n"]}, {"input": "5\n2 2\n1 0\n3 2\n1 1 1\n5 4\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["-1\n-1\n2\n1\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 1 0\n5 3\n1 1 0 1 0\n4 4\n0 1 0 0\n1 1\n0\n", "output": ["1\n-1\n3\n-1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 1\n0 1 0\n5 1\n1 0 1 0 0\n4 2\n0 1 0 1\n1 1\n1\n", "output": ["0\n1\n1\n-1\n-1\n"]}, {"input": "5\n2 1\n0 0\n3 1\n0 1 1\n5 3\n0 0 1 0 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n2\n1\n-1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 2\n0 1 0 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["0\n1\n1\n1\n-1\n"]}, {"input": "5\n2 1\n0 0\n3 3\n0 0 0\n5 3\n1 0 0 0 0\n4 3\n0 1 0 1\n1 1\n1\n", "output": ["0\n0\n1\n1\n-1\n"]}, {"input": "5\n2 1\n0 0\n3 1\n1 1 0\n5 2\n1 0 0 1 1\n4 3\n0 1 1 0\n1 1\n0\n", "output": ["0\n2\n2\n2\n0\n"]}, {"input": "5\n2 1\n1 0\n3 1\n1 1 0\n5 4\n1 1 1 1 1\n4 2\n0 1 1 0\n1 1\n0\n", "output": ["1\n2\n-1\n1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 2\n1 1 0\n5 2\n1 0 0 1 1\n4 3\n0 0 0 0\n1 1\n0\n", "output": ["1\n2\n2\n0\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n1 1 0\n5 2\n1 0 0 1 1\n4 3\n0 0 0 0\n1 1\n0\n", "output": ["0\n2\n2\n0\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 1 1\n5 2\n1 1 0 0 0\n4 3\n0 0 0 0\n1 1\n0\n", "output": ["1\n-1\n1\n0\n0\n"]}, {"input": "5\n2 2\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 1 0\n4 2\n0 0 0 1\n1 1\n1\n", "output": ["-1\n1\n3\n1\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 1 0 1\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["1\n1\n4\n1\n-1\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 1\n1 1 1 1 0\n4 1\n1 1 0 1\n1 1\n0\n", "output": ["0\n-1\n4\n3\n0\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 0 0\n5 3\n1 1 1 0 0\n4 1\n0 1 0 1\n1 1\n1\n", "output": ["0\n0\n2\n1\n-1\n"]}, {"input": "5\n2 2\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 0 0\n4 3\n1 1 1 0\n1 1\n0\n", "output": ["-1\n2\n1\n3\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n2\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 0 0\n4 2\n0 1 0 0\n1 1\n0\n", "output": ["1\n2\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 1 0\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 3\n1 1 1 1 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["0\n1\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 1 0\n5 3\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 4\n1 1 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n1\n4\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 1 0\n5 2\n1 0 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 3\n1 1 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n4\n-1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 2\n0 1 0\n5 2\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 0 1 1 1\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n4\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 3\n1 1 0 0 0\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n2\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 0 1\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n2\n1\n0\n"]}, {"input": "5\n2 2\n1 0\n3 2\n0 1 0\n5 2\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["-1\n1\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 0 1\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n2\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 1 0 1\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n4\n1\n0\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 3\n1 1 1 1 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["0\n-1\n4\n1\n0\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 1\n1 1 1 1 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["0\n-1\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 1 0\n5 2\n1 1 0 0 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n2\n1\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 0 1\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 2\n1 1 1 1 0\n4 1\n0 0 0 1\n1 1\n0\n", "output": ["0\n1\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 0 0\n4 1\n0 1 0 0\n1 1\n0\n", "output": ["1\n2\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 1 0\n4 4\n0 1 0 0\n1 1\n0\n", "output": ["1\n2\n3\n-1\n0\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 2\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["-1\n1\n2\n1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 2\n0 1 0\n5 2\n1 1 1 0 0\n4 2\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 0 1 1 1\n4 2\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 0 1\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 1 0\n5 3\n1 1 1 1 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n-1\n4\n1\n0\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 3\n0 1 0 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["-1\n1\n1\n1\n-1\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 1\n1 1 1 1 0\n4 1\n0 1 0 0\n1 1\n0\n", "output": ["0\n-1\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 2\n0 1 0\n5 2\n1 1 1 1 0\n4 2\n0 0 0 1\n1 1\n0\n", "output": ["0\n1\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 1 1\n5 2\n1 1 0 0 0\n4 1\n0 1 0 0\n1 1\n0\n", "output": ["1\n-1\n1\n1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 1\n0 1 0\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n1\n1\n0\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 1\n1 0 1 1 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["0\n-1\n2\n1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 1\n0 1 0\n5 2\n0 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n1\n1\n0\n"]}, {"input": "5\n2 2\n0 0\n3 2\n0 1 1\n5 2\n1 1 0 0 1\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n2\n2\n-1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 1\n0 1 0\n5 2\n0 1 0 0 0\n4 3\n0 0 0 0\n1 1\n0\n", "output": ["1\n1\n1\n0\n0\n"]}, {"input": "5\n2 2\n0 0\n3 2\n0 0 1\n5 2\n1 1 0 0 1\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["0\n1\n2\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 1 0\n4 2\n0 1 1 1\n1 1\n0\n", "output": ["1\n1\n3\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 0 0\n4 2\n0 1 1 1\n1 1\n0\n", "output": ["1\n1\n1\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 0 0 0 0\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 0 0\n4 3\n1 1 1 0\n1 1\n0\n", "output": ["1\n2\n1\n3\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 1 0\n5 2\n1 1 0 1 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n3\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 1 0\n5 3\n1 1 0 0 0\n4 3\n0 0 0 0\n1 1\n0\n", "output": ["1\n1\n1\n0\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n1 1 0\n5 2\n1 0 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n2\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 1 0\n5 2\n1 1 1 0 0\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n-1\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 0 0\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n0\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 3\n1 1 0 0 1\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 0 0\n5 3\n1 1 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n0\n4\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 1 0\n5 2\n1 1 1 1 0\n4 2\n0 1 0 1\n1 1\n0\n", "output": ["1\n2\n4\n-1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 0 0\n5 2\n1 1 0 0 1\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n0\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 1\n5 2\n1 1 0 0 0\n4 1\n0 1 0 1\n1 1\n0\n", "output": ["1\n2\n1\n1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 2\n0 1 0\n5 2\n1 1 1 0 1\n4 2\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 0 1\n5 2\n1 1 0 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["1\n1\n1\n1\n-1\n"]}, {"input": "5\n2 1\n1 0\n3 1\n0 1 0\n5 2\n1 1 0 0 0\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n1\n1\n0\n"]}, {"input": "5\n2 2\n0 0\n3 3\n0 1 0\n5 1\n1 0 1 1 0\n4 1\n0 1 0 1\n1 1\n1\n", "output": ["0\n-1\n2\n1\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 2\n1 1 0 1 0\n4 2\n0 1 1 0\n1 1\n0\n", "output": ["1\n1\n3\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 1 0\n5 2\n1 1 0 1 0\n4 2\n0 1 0 0\n1 1\n0\n", "output": ["1\n1\n3\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n1 1 0\n5 2\n1 0 0 0 0\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n2\n1\n1\n0\n"]}, {"input": "5\n2 1\n1 0\n3 2\n0 0 0\n5 2\n1 1 1 1 0\n4 3\n0 1 0 0\n1 1\n0\n", "output": ["1\n0\n4\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 3\n1 1 0 0 0\n4 3\n0 1 0 1\n1 1\n1\n", "output": ["1\n1\n1\n1\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 3\n0 1 0\n5 3\n1 1 1 1 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["1\n-1\n4\n1\n-1\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 4\n1 0 0 0 0\n4 3\n1 1 0 0\n1 1\n1\n", "output": ["-1\n1\n1\n2\n-1\n"]}, {"input": "5\n2 1\n0 1\n3 2\n1 0 0\n5 2\n1 1 0 0 1\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 0\n3 1\n0 1 0\n5 2\n1 1 0 0 0\n4 3\n1 0 0 0\n1 1\n0\n", "output": ["0\n1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n0 0 1\n5 2\n1 1 1 0 0\n4 3\n0 1 0 0\n1 1\n1\n", "output": ["1\n1\n2\n1\n-1\n"]}, {"input": "5\n2 1\n1 0\n3 1\n0 1 0\n5 2\n1 1 1 0 0\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n2\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 1\n1 1 0\n5 2\n1 1 0 1 0\n4 2\n0 1 0 0\n1 1\n0\n", "output": ["1\n2\n3\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 3\n1 1 1 0 0\n4 3\n0 1 0 1\n1 1\n1\n", "output": ["1\n1\n2\n1\n-1\n"]}, {"input": "5\n2 1\n1 1\n3 1\n0 1 0\n5 4\n1 0 0 0 0\n4 2\n1 1 0 0\n1 1\n1\n", "output": ["-1\n1\n1\n1\n-1\n"]}, {"input": "5\n2 1\n0 0\n3 1\n0 1 0\n5 3\n1 1 0 0 0\n4 3\n1 0 0 0\n1 1\n0\n", "output": ["0\n1\n1\n1\n0\n"]}, {"input": "5\n2 1\n0 1\n3 2\n0 1 0\n5 1\n1 1 0 0 0\n4 3\n0 1 0 1\n1 1\n0\n", "output": ["1\n1\n2\n1\n0\n"]}], "source_codes": ["\nuse std::collections::HashSet;\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines().map(|x| x.unwrap());\n    \n    let t: usize = lines.next().unwrap().parse().unwrap();\n    \n    for _ in 0..t {\n        let inputs: Vec<usize> = lines.next().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let n = inputs[0];\n        let d = inputs[1];\n        \n        let mut a: Vec<usize> = lines.next().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect();\n        \n        let mut steps = 0;\n        let mut seen = HashSet::new();\n        \n        while !seen.contains(&a) && a.iter().any(|&x| x != 0) {\n            seen.insert(a.clone());\n            a = a.iter().cycle().skip(n - d).take(n).cloned().collect();\n            a = (0..n).map(|i| a[i] & a[(i + d) % n]).collect();\n            steps += 1;\n        }\n        \n        if a.iter().all(|&x| x == 0) {\n            println!(\"{}\", steps);\n        } else {\n            println!(\"-1\");\n        }\n    }\n}\n\n\n"], "responses": ["\nuse std::collections::HashSet;\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines().map(|x| x.unwrap());\n    \n    let t: usize = lines.next().unwrap().parse().unwrap();\n    \n    for _ in 0..t {\n        let inputs: Vec<usize> = lines.next().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let n = inputs[0];\n        let d = inputs[1];\n        \n        let mut a: Vec<usize> = lines.next().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect();\n        \n        let mut steps = 0;\n        let mut seen = HashSet::new();\n        \n        while !seen.contains(&a) && a.iter().any(|&x| x != 0) {\n            seen.insert(a.clone());\n            a = a.iter().cycle().skip(n - d).take(n).cloned().collect();\n            a = (0..n).map(|i| a[i] & a[(i + d) % n]).collect();\n            steps += 1;\n        }\n        \n        if a.iter().all(|&x| x == 0) {\n            println!(\"{}\", steps);\n        } else {\n            println!(\"-1\");\n        }\n    }\n}\n\n\n"], "prompt_tokens": [40131], "completion_tokens": [6833], "no_of_try": 1, "api_calls": 22, "is_solved": true, "language": "Rust", "task_id": 1579}
{"name": "1579_G. Minimal Coverage", "description": "You are given n lengths of segments that need to be placed on an infinite axis with coordinates.\n\nThe first segment is placed on the axis so that one of its endpoints lies at the point with coordinate 0. Let's call this endpoint the \"start\" of the first segment and let's call its \"end\" as that endpoint that is not the start. \n\nThe \"start\" of each following segment must coincide with the \"end\" of the previous one. Thus, if the length of the next segment is d and the \"end\" of the previous one has the coordinate x, the segment can be placed either on the coordinates [x-d, x], and then the coordinate of its \"end\" is x - d, or on the coordinates [x, x+d], in which case its \"end\" coordinate is x + d.\n\nThe total coverage of the axis by these segments is defined as their overall union which is basically the set of points covered by at least one of the segments. It's easy to show that the coverage will also be a segment on the axis. Determine the minimal possible length of the coverage that can be obtained by placing all the segments on the axis without changing their order.\n\nInput\n\nThe first line contains an integer t (1 \u2264 t \u2264 1000) \u2014 the number of test cases.\n\nThe next 2t lines contain descriptions of the test cases. \n\nThe first line of each test case description contains an integer n (1 \u2264 n \u2264 10^4) \u2014 the number of segments. The second line of the description contains n space-separated integers a_i (1 \u2264 a_i \u2264 1000) \u2014 lengths of the segments in the same order they should be placed on the axis.\n\nIt is guaranteed that the sum of n over all test cases does not exceed 10^4.\n\nOutput\n\nPrint t lines, each line containing the answer to the corresponding test case. The answer to a test case should be a single integer \u2014 the minimal possible length of the axis coverage.\n\nExample\n\nInput\n\n\n6\n2\n1 3\n3\n1 2 3\n4\n6 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 6\n\n\nOutput\n\n\n3\n3\n9\n9\n7\n8\n\nNote\n\nIn the third sample test case the segments should be arranged as follows: [0, 6] \u2192 [4, 6] \u2192 [4, 7] \u2192 [-2, 7]. As you can see, the last segment [-2, 7] covers all the previous ones, and the total length of coverage is 9.\n\nIn the fourth sample test case the segments should be arranged as [0, 6] \u2192 [-2, 6] \u2192 [-2, 2] \u2192 [2, 7]. The union of these segments also occupies the area [-2, 7] and has the length of 9.", "tags": ["dp"], "difficulty": 13, "id": 1579, "sample_io": [{"input": "6\n2\n1 3\n3\n1 2 3\n4\n6 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 6\n", "output": ["3\n3\n9\n9\n7\n8\n"]}], "test_list": [{"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 6\n", "output": ["3\n3\n9\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 4 3 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 6\n", "output": ["3\n6\n9\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n7 6 5 1 2 2 3 6\n", "output": ["3\n3\n9\n9\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 6\n", "output": ["3\n6\n9\n12\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 0\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n7 6 5 1 2 2 3 6\n", "output": ["3\n2\n9\n9\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 23\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 0 1 2 4 3 6\n", "output": ["3\n3\n23\n9\n7\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 0 4 6 7 7 3\n8\n8 6 5 1 2 4 6 6\n", "output": ["4\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n8 6 5 1 2 2 3 6\n", "output": ["3\n6\n9\n12\n12\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 23\n4\n6 8 4 5\n7\n1 2 4 6 8 7 3\n8\n8 6 0 1 2 4 3 6\n", "output": ["3\n3\n23\n9\n8\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 5 1 2 4 6 6\n", "output": ["4\n3\n14\n9\n9\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 5 1 2 4 6 6\n", "output": ["4\n3\n9\n9\n9\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 13 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 6\n", "output": ["3\n3\n9\n13\n7\n8\n"]}, {"input": "6\n2\n1 5\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 6\n", "output": ["5\n6\n9\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 9 7 7 3\n8\n8 6 0 1 2 4 3 6\n", "output": ["3\n3\n14\n9\n9\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n12 8 4 5\n7\n1 0 4 6 7 7 3\n8\n8 6 5 1 2 4 6 6\n", "output": ["3\n3\n14\n12\n7\n8\n"]}, {"input": "6\n2\n1 5\n3\n1 2 0\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n7 6 5 1 2 2 3 6\n", "output": ["5\n2\n9\n9\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 23\n4\n6 8 4 9\n7\n1 2 4 6 7 7 3\n8\n8 6 0 1 2 4 3 6\n", "output": ["3\n3\n23\n12\n7\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 4\n7\n1 0 4 6 7 7 3\n8\n8 6 5 1 2 4 6 6\n", "output": ["4\n3\n14\n8\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n8 4 6 1 2 2 0 6\n", "output": ["3\n6\n9\n12\n12\n10\n"]}, {"input": "6\n2\n1 8\n3\n1 2 3\n4\n4 2 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 5 1 2 4 6 6\n", "output": ["8\n3\n9\n9\n9\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 4 3 2\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 5 1 2 4 6 6\n", "output": ["4\n3\n4\n9\n9\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 23 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 6\n", "output": ["3\n3\n9\n23\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 9 7 7 3\n8\n8 6 0 2 2 4 3 6\n", "output": ["3\n3\n14\n9\n9\n9\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 4\n7\n1 0 4 12 7 7 3\n8\n8 6 5 1 2 4 6 6\n", "output": ["4\n3\n14\n8\n12\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 7\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n3\n7\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n8 6 7 1 2 1 3 6\n", "output": ["3\n6\n9\n12\n12\n9\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 10 1 0 4 6 6\n", "output": ["4\n3\n14\n9\n9\n11\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n13 4 6 1 2 2 0 6\n", "output": ["3\n6\n9\n12\n12\n13\n"]}, {"input": "6\n2\n1 4\n3\n1 2 0\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 0 5 1 2 4 6 6\n", "output": ["4\n2\n9\n9\n9\n8\n"]}, {"input": "6\n2\n1 8\n3\n1 2 3\n4\n4 2 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n15 2 5 1 2 4 6 6\n", "output": ["8\n3\n9\n9\n9\n15\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n4 4 3 2\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 5 1 2 4 6 6\n", "output": ["3\n3\n4\n9\n9\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 4 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 4\n8\n8 3 6 1 2 4 6 2\n", "output": ["4\n3\n9\n9\n9\n9\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 10\n7\n1 2 4 6 7 7 0\n8\n8 6 5 1 2 4 5 6\n", "output": ["3\n3\n9\n12\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 9 7 10 3\n8\n8 6 0 2 2 4 3 6\n", "output": ["3\n3\n14\n9\n12\n9\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 1 9\n7\n1 2 4 6 12 7 3\n8\n8 6 7 1 2 1 3 6\n", "output": ["3\n6\n9\n9\n12\n9\n"]}, {"input": "6\n2\n1 2\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n13 4 6 1 2 2 0 6\n", "output": ["2\n6\n9\n12\n12\n13\n"]}, {"input": "6\n2\n1 4\n3\n1 2 0\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n15 0 5 1 2 4 6 6\n", "output": ["4\n2\n9\n9\n9\n15\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 6 5\n7\n1 0 4 6 7 7 3\n8\n7 6 5 1 0 2 4 6\n", "output": ["3\n3\n9\n8\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 8\n7\n1 2 4 9 7 10 3\n8\n8 6 0 2 2 4 3 6\n", "output": ["3\n3\n14\n12\n12\n9\n"]}, {"input": "6\n2\n1 3\n3\n2 0 6\n4\n11 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 5\n", "output": ["3\n6\n12\n12\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 7\n4\n6 8 4 5\n7\n1 3 1 6 7 7 3\n8\n8 5 6 1 2 4 6 6\n", "output": ["3\n3\n7\n9\n7\n9\n"]}, {"input": "6\n2\n1 3\n3\n2 2 3\n4\n2 2 4 30\n4\n6 8 4 5\n7\n1 2 4 6 8 7 3\n8\n8 6 0 1 4 4 3 6\n", "output": ["3\n3\n30\n9\n8\n8\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 1\n7\n1 2 4 6 12 6 3\n8\n8 6 5 1 2 0 0 6\n", "output": ["3\n6\n9\n8\n12\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 14\n7\n1 2 4 6 7 7 0\n8\n8 6 5 1 2 4 7 6\n", "output": ["3\n3\n9\n14\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 6 5\n7\n1 0 4 6 7 7 3\n8\n2 6 5 1 0 2 4 6\n", "output": ["3\n3\n9\n8\n7\n6\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 7\n4\n6 8 3 5\n7\n1 3 1 6 7 7 3\n8\n8 5 6 1 2 4 6 6\n", "output": ["3\n3\n7\n8\n7\n9\n"]}, {"input": "6\n2\n1 3\n3\n2 2 3\n4\n2 2 4 30\n4\n6 8 4 5\n7\n1 2 4 6 8 7 3\n8\n9 6 0 1 4 4 3 6\n", "output": ["3\n3\n30\n9\n8\n9\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 1\n7\n1 2 4 6 12 6 3\n8\n8 6 8 1 2 0 0 6\n", "output": ["3\n6\n9\n8\n12\n10\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n1 2 3 14\n4\n6 8 4 14\n7\n1 2 4 9 7 10 3\n8\n8 6 0 2 2 4 3 6\n", "output": ["3\n3\n14\n14\n12\n9\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 7\n4\n6 15 3 5\n7\n1 3 1 6 7 7 3\n8\n8 5 6 1 2 4 6 6\n", "output": ["3\n3\n7\n15\n7\n9\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 4\n4\n6 8 4 1\n7\n1 2 4 6 12 6 3\n8\n8 6 8 1 2 0 0 6\n", "output": ["3\n6\n6\n8\n12\n10\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n1 2 3 14\n4\n6 8 4 14\n7\n1 2 4 9 7 10 3\n8\n8 6 0 2 3 4 3 6\n", "output": ["3\n3\n14\n14\n12\n8\n"]}, {"input": "6\n2\n1 3\n3\n2 0 6\n4\n11 2 3 9\n4\n6 8 4 0\n7\n1 2 1 6 7 7 3\n8\n8 6 5 1 1 2 3 5\n", "output": ["3\n6\n12\n8\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n7 2 3 9\n4\n6 3 1 9\n7\n2 2 4 6 12 7 3\n8\n8 6 7 1 2 1 3 6\n", "output": ["3\n6\n9\n10\n12\n9\n"]}, {"input": "6\n2\n2 4\n3\n1 2 1\n4\n2 0 3 9\n4\n6 8 4 2\n7\n1 0 4 6 4 7 3\n8\n15 0 5 1 3 4 6 6\n", "output": ["4\n2\n9\n8\n9\n15\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n1 2 3 14\n4\n6 12 4 14\n7\n1 2 4 9 7 10 3\n8\n8 6 0 3 3 4 3 6\n", "output": ["3\n3\n14\n16\n12\n8\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 4\n4\n10 8 8 1\n7\n1 2 4 6 12 6 5\n8\n8 6 8 1 2 0 0 6\n", "output": ["3\n6\n6\n10\n12\n10\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 4\n4\n9 8 8 1\n7\n1 2 4 6 12 6 5\n8\n8 6 8 1 2 0 0 6\n", "output": ["3\n6\n6\n9\n12\n10\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n16 6 5 1 2 4 3 6\n", "output": ["3\n3\n9\n9\n7\n16\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n12 6 6 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n12\n"]}, {"input": "6\n2\n1 3\n3\n1 2 5\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 6 7 7 2\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n5\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 6 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 12 5 1 2 4 3 6\n", "output": ["3\n3\n9\n9\n7\n12\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n7 6 6 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 23\n4\n6 8 4 3\n7\n1 2 4 6 7 7 3\n8\n8 6 0 1 2 4 3 6\n", "output": ["3\n3\n23\n8\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n8 6 6 1 2 4 9 6\n", "output": ["3\n3\n14\n9\n7\n9\n"]}, {"input": "6\n2\n1 6\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 5 1 2 4 6 6\n", "output": ["6\n3\n9\n9\n9\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 2 3 9\n4\n6 6 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 5 1 2 4 6 6\n", "output": ["4\n3\n9\n7\n9\n8\n"]}, {"input": "6\n2\n1 0\n3\n1 2 3\n4\n2 2 3 14\n4\n6 9 4 5\n7\n1 2 4 6 7 7 2\n8\n8 6 6 1 2 4 6 6\n", "output": ["1\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 5\n3\n1 2 0\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n9 6 5 1 2 2 3 6\n", "output": ["5\n2\n9\n9\n7\n9\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 4\n7\n1 0 4 6 7 8 3\n8\n8 6 5 1 2 4 6 6\n", "output": ["4\n3\n14\n8\n8\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 0 4 6 7 7 1\n8\n8 2 10 1 2 4 6 6\n", "output": ["4\n3\n14\n9\n7\n10\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 3 4 9\n7\n1 2 4 6 12 7 3\n8\n8 6 5 1 2 2 0 6\n", "output": ["3\n6\n9\n9\n12\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 1 5\n7\n1 0 4 6 4 7 3\n8\n8 0 5 1 2 4 6 6\n", "output": ["4\n3\n9\n8\n9\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 4 3 2\n4\n6 8 4 5\n7\n1 0 4 6 0 7 3\n8\n8 2 5 1 2 4 6 6\n", "output": ["4\n3\n4\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 5\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n7 6 5 1 0 2 4 6\n", "output": ["3\n5\n9\n9\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 9 7 7 3\n8\n8 6 0 2 2 4 3 10\n", "output": ["3\n3\n14\n9\n9\n10\n"]}, {"input": "6\n2\n2 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n8 6 7 1 2 4 6 6\n", "output": ["4\n3\n14\n9\n7\n9\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 23\n4\n12 2 4 9\n7\n1 2 4 6 7 7 3\n8\n8 6 0 1 2 4 3 6\n", "output": ["3\n3\n23\n14\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 12\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n3\n12\n9\n7\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 4 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 4\n8\n8 3 6 1 2 4 9 2\n", "output": ["4\n3\n9\n9\n9\n10\n"]}, {"input": "6\n2\n1 0\n3\n1 2 3\n4\n2 2 3 9\n4\n6 23 4 5\n7\n1 2 4 6 7 7 6\n8\n8 6 5 1 2 2 3 6\n", "output": ["1\n3\n9\n23\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n2 2 3\n4\n2 2 4 23\n4\n6 8 4 5\n7\n1 2 4 9 8 7 3\n8\n8 6 0 1 4 4 3 6\n", "output": ["3\n3\n23\n9\n9\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 12 1 9\n7\n1 2 4 6 5 7 3\n8\n8 6 7 1 2 1 3 6\n", "output": ["3\n6\n9\n12\n8\n9\n"]}, {"input": "6\n2\n1 3\n3\n2 4 3\n4\n2 2 4 30\n4\n6 8 4 5\n7\n1 2 4 6 8 7 3\n8\n8 6 0 1 4 4 3 6\n", "output": ["3\n4\n30\n9\n8\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 1\n4\n6 8 4 14\n7\n1 2 4 6 7 7 0\n8\n8 6 5 1 2 4 7 6\n", "output": ["3\n3\n3\n14\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 6 5\n7\n1 0 4 6 7 7 3\n8\n2 6 10 1 0 2 4 6\n", "output": ["3\n3\n9\n8\n7\n10\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n1 2 3 14\n4\n6 8 4 8\n7\n1 2 4 9 7 10 3\n8\n2 6 0 2 2 4 3 6\n", "output": ["3\n3\n14\n12\n12\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 7\n4\n6 8 3 5\n7\n1 3 1 6 7 7 3\n8\n12 5 6 1 2 4 6 6\n", "output": ["3\n3\n7\n8\n7\n12\n"]}, {"input": "6\n2\n1 4\n3\n1 2 0\n4\n2 0 3 8\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n15 0 5 1 3 4 6 6\n", "output": ["4\n2\n8\n9\n9\n15\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n1 2 3 14\n4\n6 8 4 14\n7\n1 2 4 9 7 10 3\n8\n1 6 0 2 2 4 3 6\n", "output": ["3\n3\n14\n14\n12\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 7\n4\n6 15 3 5\n7\n1 3 1 6 7 7 3\n8\n6 5 6 1 2 4 6 6\n", "output": ["3\n3\n7\n15\n7\n7\n"]}, {"input": "6\n2\n2 4\n3\n1 4 0\n4\n2 0 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n15 0 5 1 3 4 6 6\n", "output": ["4\n4\n9\n9\n9\n15\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n7 2 3 9\n4\n6 3 1 9\n7\n2 2 4 6 12 7 3\n8\n14 6 7 1 2 1 3 6\n", "output": ["3\n6\n9\n10\n12\n14\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n1 2 3 14\n4\n6 8 4 14\n7\n1 2 4 9 13 10 3\n8\n8 6 0 3 3 4 3 6\n", "output": ["3\n3\n14\n14\n13\n8\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 4\n4\n10 8 8 1\n7\n1 2 4 6 12 6 5\n8\n14 6 8 1 2 0 0 6\n", "output": ["3\n6\n6\n10\n12\n14\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 4\n4\n9 8 8 1\n7\n1 2 4 6 2 6 5\n8\n8 6 8 1 2 0 0 6\n", "output": ["3\n6\n6\n9\n8\n10\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 6 3 7 3\n8\n12 6 6 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n9\n12\n"]}, {"input": "6\n2\n1 5\n3\n1 2 5\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 6 7 7 2\n8\n8 6 6 1 2 4 6 6\n", "output": ["5\n5\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 4 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n7 6 6 1 2 4 6 6\n", "output": ["3\n4\n14\n9\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 23\n4\n6 8 4 3\n7\n1 2 4 6 7 7 3\n8\n6 6 0 1 2 4 3 6\n", "output": ["3\n3\n23\n8\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n8 6 6 1 1 4 9 6\n", "output": ["3\n3\n14\n9\n7\n10\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 4 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 13 0\n8\n8 3 5 1 2 4 6 6\n", "output": ["4\n3\n9\n9\n13\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 13 4 5\n7\n2 2 4 6 7 7 3\n8\n14 6 5 1 2 2 3 6\n", "output": ["3\n3\n9\n13\n7\n14\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 1 14\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 11 5 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n11\n"]}, {"input": "6\n2\n1 0\n3\n1 2 2\n4\n2 2 3 14\n4\n6 9 4 5\n7\n1 2 4 6 7 7 2\n8\n8 6 6 1 2 4 6 6\n", "output": ["1\n2\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 4\n4\n2 2 3 14\n4\n6 8 4 4\n7\n1 0 4 6 7 8 3\n8\n8 6 5 1 2 4 6 6\n", "output": ["4\n4\n14\n8\n8\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n15 6 5 1 2 1 3 2\n", "output": ["3\n6\n9\n12\n12\n15\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 6 5\n7\n1 0 4 6 7 7 1\n8\n8 2 10 1 2 4 6 6\n", "output": ["4\n3\n14\n8\n7\n10\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 7 5\n7\n1 1 4 6 4 7 3\n8\n8 2 5 1 0 4 6 6\n", "output": ["4\n3\n14\n8\n9\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 0 3\n4\n2 2 3 9\n4\n6 23 4 5\n7\n1 2 4 6 7 8 3\n8\n8 6 5 1 2 2 3 6\n", "output": ["3\n3\n9\n23\n8\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 7 4 5\n7\n1 2 4 9 7 7 3\n8\n8 6 0 2 2 4 3 10\n", "output": ["3\n3\n14\n8\n9\n10\n"]}, {"input": "6\n2\n1 3\n3\n2 2 6\n4\n6 2 5 9\n4\n6 8 4 9\n7\n1 2 4 6 7 7 3\n8\n8 6 10 1 2 2 3 5\n", "output": ["3\n6\n9\n12\n7\n12\n"]}, {"input": "6\n2\n1 0\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 0 12 7 3\n8\n13 4 6 1 2 2 0 6\n", "output": ["1\n6\n9\n12\n12\n13\n"]}, {"input": "6\n2\n1 8\n3\n1 2 3\n4\n4 2 3 5\n4\n6 8 4 5\n7\n1 0 4 6 4 7 6\n8\n15 2 5 1 2 4 6 6\n", "output": ["8\n3\n5\n9\n9\n15\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 4 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 0 4\n8\n8 3 6 1 2 4 9 2\n", "output": ["4\n3\n9\n9\n6\n10\n"]}, {"input": "6\n2\n2 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 9 7 10 3\n8\n8 6 0 2 2 4 1 6\n", "output": ["3\n3\n14\n9\n12\n8\n"]}, {"input": "6\n2\n1 3\n3\n2 0 6\n4\n6 2 0 9\n4\n6 8 2 9\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 5\n", "output": ["3\n6\n9\n10\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 1 9\n4\n6 8 1 9\n7\n1 2 7 6 12 7 3\n8\n8 6 7 1 2 1 3 6\n", "output": ["3\n6\n9\n9\n13\n9\n"]}, {"input": "6\n2\n1 4\n3\n1 2 0\n4\n4 2 3 9\n4\n6 8 4 5\n7\n1 0 4 8 4 7 3\n8\n15 0 5 1 2 4 6 6\n", "output": ["4\n2\n9\n9\n11\n15\n"]}, {"input": "6\n2\n1 2\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 6 5\n7\n1 0 4 6 6 7 3\n8\n7 6 5 1 0 2 4 6\n", "output": ["2\n3\n9\n8\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 11\n7\n1 2 4 3 7 10 3\n8\n8 6 0 2 2 4 3 6\n", "output": ["3\n3\n14\n12\n10\n9\n"]}, {"input": "6\n2\n2 3\n3\n1 2 3\n4\n6 2 3 9\n4\n6 8 4 2\n7\n1 2 4 6 12 6 3\n8\n8 6 5 1 2 0 0 6\n", "output": ["3\n3\n9\n8\n12\n8\n"]}, {"input": "6\n2\n1 1\n3\n1 2 3\n4\n2 2 3 1\n4\n6 8 4 14\n7\n1 2 4 6 7 7 0\n8\n8 6 5 1 2 4 7 6\n", "output": ["1\n3\n3\n14\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 12\n4\n6 8 3 5\n7\n1 3 1 6 7 7 3\n8\n12 5 6 1 2 4 6 6\n", "output": ["3\n3\n12\n8\n7\n12\n"]}, {"input": "6\n2\n1 3\n3\n2 2 3\n4\n2 2 4 30\n4\n6 8 1 5\n7\n1 2 4 6 8 7 1\n8\n9 6 0 1 4 4 3 6\n", "output": ["3\n3\n30\n8\n8\n9\n"]}, {"input": "6\n2\n1 3\n3\n1 2 1\n4\n1 2 3 14\n4\n6 8 4 14\n7\n1 2 4 9 7 10 3\n8\n1 6 0 2 2 4 3 6\n", "output": ["3\n2\n14\n14\n12\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 7\n4\n6 15 3 5\n7\n1 3 1 6 7 7 3\n8\n6 5 12 1 2 4 6 6\n", "output": ["3\n3\n7\n15\n7\n12\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 4\n4\n6 8 4 1\n7\n1 1 4 6 12 6 3\n8\n8 11 8 1 2 0 0 6\n", "output": ["3\n6\n6\n8\n12\n11\n"]}, {"input": "6\n2\n2 4\n3\n1 4 0\n4\n2 0 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n28 0 5 1 3 4 6 6\n", "output": ["4\n4\n9\n9\n9\n28\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n1 2 3 14\n4\n6 8 4 11\n7\n1 2 4 9 13 10 3\n8\n8 6 0 3 3 4 3 6\n", "output": ["3\n3\n14\n12\n13\n8\n"]}, {"input": "6\n2\n2 4\n3\n1 2 6\n4\n6 2 3 4\n4\n9 8 8 1\n7\n1 2 4 6 2 6 5\n8\n8 6 8 1 2 0 0 6\n", "output": ["4\n6\n6\n9\n8\n10\n"]}, {"input": "6\n2\n2 4\n3\n1 2 1\n4\n2 0 3 9\n4\n8 8 4 2\n7\n1 0 4 6 3 7 2\n8\n3 0 5 1 3 4 6 6\n", "output": ["4\n2\n9\n8\n9\n6\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 6 3 2 3\n8\n12 6 6 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n6\n12\n"]}, {"input": "6\n2\n1 5\n3\n1 2 5\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 6 7 7 2\n8\n8 4 6 1 2 4 6 6\n", "output": ["5\n5\n14\n9\n7\n10\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 2 3 14\n4\n6 8 4 1\n7\n1 3 4 6 7 7 3\n8\n8 6 6 1 1 4 9 6\n", "output": ["3\n3\n14\n8\n7\n10\n"]}, {"input": "6\n2\n1 4\n3\n1 3 3\n4\n2 2 3 14\n4\n6 5 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 5 1 2 4 11 6\n", "output": ["4\n3\n14\n6\n9\n11\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 5 7 7 0\n8\n8 6 7 1 2 2 3 5\n", "output": ["3\n6\n9\n12\n7\n9\n"]}, {"input": "6\n2\n1 4\n3\n1 2 4\n4\n2 2 3 11\n4\n6 8 4 4\n7\n1 0 4 6 7 8 3\n8\n8 6 5 1 2 4 6 6\n", "output": ["4\n4\n11\n8\n8\n8\n"]}, {"input": "6\n2\n1 8\n3\n1 2 3\n4\n4 2 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 1 1 2 6 3 6\n", "output": ["8\n3\n9\n9\n9\n9\n"]}, {"input": "6\n2\n1 0\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 1\n8\n8 12 5 1 2 4 5 6\n", "output": ["1\n3\n9\n9\n7\n12\n"]}, {"input": "6\n2\n1 6\n3\n1 2 1\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n7 6 5 1 0 2 4 6\n", "output": ["6\n2\n9\n9\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 23\n4\n9 2 4 9\n7\n1 2 4 6 7 7 3\n8\n8 6 0 1 1 4 3 6\n", "output": ["3\n3\n23\n11\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 12\n4\n6 8 4 5\n7\n1 3 4 6 7 13 4\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n3\n12\n9\n13\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 4 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n8 6 7 1 1 1 3 6\n", "output": ["4\n6\n9\n12\n12\n9\n"]}, {"input": "6\n2\n1 4\n3\n3 2 0\n4\n2 2 3 9\n4\n6 8 4 8\n7\n1 0 4 6 4 7 3\n8\n8 0 5 1 2 4 6 6\n", "output": ["4\n3\n9\n12\n9\n8\n"]}, {"input": "6\n2\n1 8\n3\n1 2 3\n4\n4 2 3 5\n4\n6 8 4 5\n7\n1 0 4 6 4 7 6\n8\n18 2 5 1 2 4 6 6\n", "output": ["8\n3\n5\n9\n9\n18\n"]}, {"input": "6\n2\n1 0\n3\n1 2 3\n4\n2 2 3 9\n4\n6 23 4 5\n7\n1 2 7 6 7 7 4\n8\n8 6 5 1 2 2 3 6\n", "output": ["1\n3\n9\n23\n8\n8\n"]}, {"input": "6\n2\n4 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 0 4 6 7 7 3\n8\n7 6 5 1 0 2 4 7\n", "output": ["4\n3\n9\n9\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 1 9\n4\n6 14 1 9\n7\n1 2 7 6 12 7 3\n8\n8 6 7 1 2 1 3 6\n", "output": ["3\n6\n9\n14\n13\n9\n"]}, {"input": "6\n2\n1 3\n3\n1 2 2\n4\n4 2 3 9\n4\n6 23 8 5\n7\n1 3 4 6 7 7 6\n8\n8 6 5 1 2 2 3 6\n", "output": ["3\n2\n9\n23\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 5\n4\n2 2 3 14\n4\n6 8 4 11\n7\n1 2 4 3 7 10 3\n8\n8 6 0 2 2 4 3 6\n", "output": ["3\n5\n14\n12\n10\n9\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 7\n4\n6 8 4 5\n7\n1 3 1 5 7 7 3\n8\n8 5 6 1 1 4 6 12\n", "output": ["3\n3\n7\n9\n7\n12\n"]}, {"input": "6\n2\n1 3\n3\n4 2 3\n4\n2 2 4 30\n4\n6 8 1 5\n7\n1 2 4 6 8 7 1\n8\n9 6 0 1 4 4 3 6\n", "output": ["3\n5\n30\n8\n8\n9\n"]}, {"input": "6\n2\n1 4\n3\n1 2 0\n4\n2 0 3 8\n4\n6 1 4 5\n7\n1 0 4 6 4 7 3\n8\n15 1 5 1 3 4 6 6\n", "output": ["4\n2\n8\n6\n9\n15\n"]}, {"input": "6\n2\n1 3\n3\n1 2 1\n4\n1 2 3 14\n4\n6 8 4 14\n7\n1 2 4 9 7 16 3\n8\n1 6 0 2 2 4 3 6\n", "output": ["3\n2\n14\n14\n16\n7\n"]}, {"input": "6\n2\n1 3\n3\n1 3 4\n4\n2 0 3 7\n4\n6 15 3 5\n7\n1 3 1 6 7 7 3\n8\n6 5 12 1 2 4 6 6\n", "output": ["3\n4\n7\n15\n7\n12\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 4\n4\n6 8 4 1\n7\n1 1 4 6 23 6 3\n8\n8 11 8 1 2 0 0 6\n", "output": ["3\n6\n6\n8\n23\n11\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 4 3 6\n", "output": ["3\n3\n9\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 6 7 7 2\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 6 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 4 3 6\n", "output": ["3\n3\n9\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 0 1 2 4 3 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 0 4 6 7 7 3\n8\n8 6 5 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 0 4 6 7 7 3\n8\n8 2 5 1 2 4 6 6\n", "output": ["4\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n8 6 5 1 2 2 0 6\n", "output": ["3\n6\n9\n12\n12\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n8 6 6 1 2 2 0 6\n", "output": ["3\n6\n9\n12\n12\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 2 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 5 1 2 4 6 6\n", "output": ["4\n3\n9\n9\n9\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 4 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 5 1 2 4 6 6\n", "output": ["4\n3\n9\n9\n9\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 4 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 3 5 1 2 4 6 6\n", "output": ["4\n3\n9\n9\n9\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 4 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 4\n8\n8 3 5 1 2 4 6 6\n", "output": ["4\n3\n9\n9\n9\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 0\n8\n8 6 5 1 2 4 3 6\n", "output": ["3\n3\n9\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 1 14\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 9 4 5\n7\n1 2 4 6 7 7 2\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n7 6 5 1 0 2 3 6\n", "output": ["3\n3\n9\n9\n7\n7\n"]}, {"input": "6\n2\n2 3\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 5\n", "output": ["3\n6\n9\n12\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 14\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n8 6 5 1 2 1 3 6\n", "output": ["3\n6\n9\n12\n12\n8\n"]}, {"input": "6\n2\n1 3\n3\n2 2 3\n4\n2 2 3 23\n4\n6 8 4 5\n7\n1 2 4 6 8 7 3\n8\n8 6 0 1 2 4 3 6\n", "output": ["3\n3\n23\n9\n8\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 0 4 6 7 7 1\n8\n8 2 5 1 2 4 6 6\n", "output": ["4\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n8 6 5 1 2 2 0 6\n", "output": ["3\n6\n9\n12\n12\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 2 5 1 0 4 6 6\n", "output": ["4\n3\n14\n9\n9\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 3\n8\n8 0 5 1 2 4 6 6\n", "output": ["4\n3\n9\n9\n9\n8\n"]}, {"input": "6\n2\n1 4\n3\n1 2 3\n4\n4 4 3 9\n4\n6 8 4 5\n7\n1 0 4 6 4 7 4\n8\n8 3 5 1 2 4 6 2\n", "output": ["4\n3\n9\n9\n9\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 0\n8\n8 6 5 1 2 4 5 6\n", "output": ["3\n3\n9\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 2 4 6 7 7 3\n8\n7 6 5 1 0 2 4 6\n", "output": ["3\n3\n9\n9\n7\n7\n"]}, {"input": "6\n2\n2 4\n3\n1 2 3\n4\n2 2 3 14\n4\n6 8 4 5\n7\n1 3 4 6 7 7 3\n8\n8 6 6 1 2 4 6 6\n", "output": ["4\n3\n14\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n2 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 5\n", "output": ["3\n6\n9\n12\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 23\n4\n12 8 4 9\n7\n1 2 4 6 7 7 3\n8\n8 6 0 1 2 4 3 6\n", "output": ["3\n3\n23\n12\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n2 2 3\n4\n2 2 3 23\n4\n6 8 4 5\n7\n1 2 4 6 8 7 3\n8\n8 6 0 1 4 4 3 6\n", "output": ["3\n3\n23\n9\n8\n8\n"]}, {"input": "6\n2\n2 3\n3\n1 2 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 12 7 3\n8\n8 6 5 1 2 0 0 6\n", "output": ["3\n6\n9\n12\n12\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 23 4 5\n7\n1 2 4 6 7 7 6\n8\n8 6 5 1 2 2 3 6\n", "output": ["3\n3\n9\n23\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 2 3\n4\n2 2 3 9\n4\n6 8 4 5\n7\n1 0 4 6 7 7 3\n8\n7 6 5 1 0 2 4 6\n", "output": ["3\n3\n9\n9\n7\n7\n"]}, {"input": "6\n2\n1 3\n3\n2 0 6\n4\n6 2 3 9\n4\n6 8 4 9\n7\n1 2 4 6 7 7 3\n8\n8 6 5 1 2 2 3 5\n", "output": ["3\n6\n9\n12\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n1 3 3\n4\n2 0 3 7\n4\n6 8 4 5\n7\n1 3 1 6 7 7 3\n8\n8 6 6 1 2 4 6 6\n", "output": ["3\n3\n7\n9\n7\n8\n"]}, {"input": "6\n2\n1 3\n3\n2 2 3\n4\n2 2 4 23\n4\n6 8 4 5\n7\n1 2 4 6 8 7 3\n8\n8 6 0 1 4 4 3 6\n", "output": ["3\n3\n23\n9\n8\n8\n"]}], "source_codes": ["\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let t: i32 = input.trim().parse().unwrap();\n\n    for _ in 0..t {\n        let mut input = String::new();\n        io::stdin().read_line(&mut input).unwrap();\n        let n: usize = input.trim().parse().unwrap();\n\n        let mut input = String::new();\n        io::stdin().read_line(&mut input).unwrap();\n        let segments: Vec<i32> = input.split_whitespace()\n            .map(|x| x.parse().unwrap())\n            .collect();\n\n        let mut coverage_length = segments[0];\n        let mut endpoint = segments[0];\n        let mut max_endpoint = segments[0];\n\n        for i in 1..n {\n            coverage_length += std::cmp::max(0, segments[i] - segments[i-1]);\n            endpoint += segments[i];\n            max_endpoint = std::cmp::max(max_endpoint, endpoint);\n        }\n\n        println!(\"{}\", std::cmp::min(max_endpoint, coverage_length));\n    }\n}\n\n\n"], "responses": ["\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let t: i32 = input.trim().parse().unwrap();\n\n    for _ in 0..t {\n        let mut input = String::new();\n        io::stdin().read_line(&mut input).unwrap();\n        let n: usize = input.trim().parse().unwrap();\n\n        let mut input = String::new();\n        io::stdin().read_line(&mut input).unwrap();\n        let segments: Vec<i32> = input.split_whitespace()\n            .map(|x| x.parse().unwrap())\n            .collect();\n\n        let mut coverage_length = segments[0];\n        let mut endpoint = segments[0];\n        let mut max_endpoint = segments[0];\n\n        for i in 1..n {\n            coverage_length += std::cmp::max(0, segments[i] - segments[i-1]);\n            endpoint += segments[i];\n            max_endpoint = std::cmp::max(max_endpoint, endpoint);\n        }\n\n        println!(\"{}\", std::cmp::min(max_endpoint, coverage_length));\n    }\n}\n\n\n"], "prompt_tokens": [58552], "completion_tokens": [9495], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1579}
{"name": "1580_A. Portal", "description": "CQXYM found a rectangle A of size n \u00d7 m. There are n rows and m columns of blocks. Each block of the rectangle is an obsidian block or empty. CQXYM can change an obsidian block to an empty block or an empty block to an obsidian block in one operation.\n\nA rectangle M size of a \u00d7 b is called a portal if and only if it satisfies the following conditions:\n\n  * a \u2265 5,b \u2265 4. \n  * For all 1 < x < a, blocks M_{x,1} and M_{x,b} are obsidian blocks. \n  * For all 1 < x < b, blocks M_{1,x} and M_{a,x} are obsidian blocks. \n  * For all 1<x<a,1<y<b, block M_{x,y} is an empty block. \n  * M_{1, 1}, M_{1, b}, M_{a, 1}, M_{a, b} can be any type. \n\nNote that the there must be a rows and b columns, not b rows and a columns.\n\nNote that corners can be any type\n\nCQXYM wants to know the minimum number of operations he needs to make at least one sub-rectangle a portal.\n\nInput\n\nThe first line contains an integer t (t \u2265 1), which is the number of test cases.\n\nFor each test case, the first line contains two integers n and m (5 \u2264 n \u2264 400, 4 \u2264 m \u2264 400). \n\nThen n lines follow, each line contains m characters 0 or 1. If the j-th character of i-th line is 0, block A_{i,j} is an empty block. Otherwise, block A_{i,j} is an obsidian block.\n\nIt is guaranteed that the sum of n over all test cases does not exceed 400.\n\nIt is guaranteed that the sum of m over all test cases does not exceed 400.\n\nOutput\n\nOutput t answers, and each answer in a line.\n\nExamples\n\nInput\n\n\n1\n5 4\n1000\n0000\n0110\n0000\n0001\n\n\nOutput\n\n\n12\n\n\nInput\n\n\n1\n9 9\n001010001\n101110100\n000010011\n100000001\n101010101\n110001111\n000001111\n111100000\n000110000\n\n\nOutput\n\n\n5\n\nNote\n\nIn the first test case, the final portal is like this:\n    \n    \n      \n    1110  \n    1001  \n    1001  \n    1001  \n    0111  \n    ", "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "difficulty": 7, "id": 1580, "sample_io": [{"input": "1\n9 9\n001010001\n101110100\n000010011\n100000001\n101010101\n110001111\n000001111\n111100000\n000110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1000\n0000\n0110\n0000\n0001\n", "output": ["12\n"]}], "test_list": [{"input": "1\n5 4\n1000\n0000\n0110\n0001\n0001\n", "output": ["11\n"]}, {"input": "1\n5 4\n1000\n0000\n1110\n0001\n0000\n", "output": ["10\n"]}, {"input": "1\n5 4\n1011\n0000\n1010\n0000\n1000\n", "output": ["9\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n100000001\n101010101\n110001111\n000001111\n110100000\n000110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1000\n0010\n0110\n0001\n0001\n", "output": ["12\n"]}, {"input": "1\n5 4\n1011\n0000\n1010\n0001\n1000\n", "output": ["8\n"]}, {"input": "1\n5 4\n1000\n0100\n0110\n0101\n0000\n", "output": ["13\n"]}, {"input": "1\n5 4\n1011\n0000\n1010\n1001\n1000\n", "output": ["7\n"]}, {"input": "1\n5 4\n0011\n0001\n0010\n1001\n1101\n", "output": ["6\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010001\n001000001\n001011101\n110001111\n000001111\n110100010\n010110000\n", "output": ["4\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010001\n001000001\n001011001\n110001111\n000001111\n110100010\n010110000\n", "output": ["3\n"]}, {"input": "1\n5 4\n1000\n0000\n0110\n0001\n0000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1000\n0000\n1110\n0000\n0000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1000\n0000\n1110\n0000\n1000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1000\n0000\n1111\n0000\n1000\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0000\n1010\n0000\n1000\n", "output": ["10\n"]}, {"input": "1\n5 4\n1001\n0000\n1010\n0000\n1000\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0000\n0110\n0101\n0000\n", "output": ["12\n"]}, {"input": "1\n5 4\n1000\n0010\n0110\n0001\n0000\n", "output": ["12\n"]}, {"input": "1\n5 4\n1000\n0000\n1110\n0000\n0010\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0000\n1111\n0010\n1000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1000\n0010\n1010\n0000\n1000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1001\n0000\n1010\n1000\n1000\n", "output": ["9\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n100000001\n101010101\n110001111\n000001111\n110100000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1100\n0010\n0110\n0001\n0001\n", "output": ["11\n"]}, {"input": "1\n5 4\n1000\n0110\n0110\n0001\n0000\n", "output": ["13\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n100000001\n001010101\n110001111\n000001111\n110100000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1100\n0010\n0110\n1001\n0001\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0000\n0110\n1101\n0000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1000\n0010\n0110\n1001\n0000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1011\n0000\n0010\n1001\n1000\n", "output": ["8\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n000000001\n001010101\n110001111\n000001111\n110100000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1000\n0001\n0110\n1101\n0000\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0010\n1110\n1001\n0000\n", "output": ["10\n"]}, {"input": "1\n5 4\n0011\n0000\n0010\n1001\n1000\n", "output": ["8\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n000000001\n001010101\n110001111\n000001111\n110100010\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1010\n0001\n0110\n1101\n0000\n", "output": ["9\n"]}, {"input": "1\n5 4\n1010\n0010\n1110\n1001\n0000\n", "output": ["9\n"]}, {"input": "1\n5 4\n0011\n0000\n0011\n1001\n1000\n", "output": ["7\n"]}, {"input": "1\n9 9\n101010001\n101110100\n000010011\n000000001\n001010101\n110001111\n000001111\n110100010\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1010\n0011\n0110\n1101\n0000\n", "output": ["10\n"]}, {"input": "1\n5 4\n1110\n0010\n1110\n1001\n0000\n", "output": ["8\n"]}, {"input": "1\n5 4\n0011\n0000\n0011\n1001\n1001\n", "output": ["7\n"]}, {"input": "1\n9 9\n101010001\n101110100\n000010011\n001000001\n001010101\n110001111\n000001111\n110100010\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1110\n0010\n1110\n1001\n0001\n", "output": ["8\n"]}, {"input": "1\n5 4\n0011\n0000\n0010\n1001\n1001\n", "output": ["8\n"]}, {"input": "1\n8 9\n101010001\n101110100\n000010011\n001000001\n001010101\n110001111\n000001111\n110100010\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1110\n0010\n0110\n1001\n0001\n", "output": ["9\n"]}, {"input": "1\n5 4\n0011\n0001\n0010\n1001\n1001\n", "output": ["7\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010011\n001000001\n001010101\n110001111\n000001111\n110100010\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1110\n0000\n0110\n1001\n0001\n", "output": ["8\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010011\n001000001\n001011101\n110001111\n000001111\n110100010\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1110\n0000\n0110\n1011\n0001\n", "output": ["9\n"]}, {"input": "1\n5 4\n0011\n0001\n0110\n1001\n1101\n", "output": ["7\n"]}, {"input": "1\n5 4\n0011\n0001\n0100\n1001\n1101\n", "output": ["6\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010001\n001000001\n001011001\n110001111\n000001111\n110100010\n010100000\n", "output": ["3\n"]}, {"input": "1\n8 9\n101110001\n101110000\n000010001\n001000001\n001011001\n110001111\n000001111\n110100010\n010100000\n", "output": ["4\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n100000001\n101010101\n110101111\n000001111\n111100000\n000110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1000\n1000\n0110\n0001\n0001\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0000\n0010\n0001\n0000\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0000\n1111\n0001\n0000\n", "output": ["9\n"]}, {"input": "1\n5 4\n1100\n0000\n1110\n0000\n1000\n", "output": ["10\n"]}, {"input": "1\n5 4\n1001\n0000\n1010\n0000\n1100\n", "output": ["9\n"]}, {"input": "1\n5 4\n1011\n1000\n1010\n0000\n1000\n", "output": ["8\n"]}, {"input": "1\n9 9\n001010001\n101110000\n000010011\n100000001\n101010101\n110001111\n000001111\n110100000\n000110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1000\n0011\n0110\n0001\n0001\n", "output": ["11\n"]}, {"input": "1\n5 4\n1000\n0000\n0110\n0101\n1000\n", "output": ["12\n"]}, {"input": "1\n5 4\n1000\n0010\n0110\n0101\n0000\n", "output": ["13\n"]}, {"input": "1\n5 4\n1000\n0000\n1100\n0000\n0010\n", "output": ["9\n"]}, {"input": "1\n5 4\n1001\n0000\n1111\n0010\n1000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1001\n0000\n1010\n1000\n1100\n", "output": ["8\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n100000001\n101010101\n110001111\n000001111\n110110000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1001\n0110\n0110\n0001\n0000\n", "output": ["13\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000110011\n100000001\n001010101\n110001111\n000001111\n110100000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1100\n0010\n0010\n1001\n0001\n", "output": ["9\n"]}, {"input": "1\n5 4\n1000\n0000\n0110\n0111\n0000\n", "output": ["13\n"]}, {"input": "1\n5 4\n1011\n0000\n0010\n1001\n1100\n", "output": ["7\n"]}, {"input": "1\n7 9\n001010001\n101110100\n000010011\n000000001\n001010101\n110001111\n000001111\n110100000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n0011\n0000\n1010\n1001\n1000\n", "output": ["7\n"]}, {"input": "1\n9 9\n001010001\n101110000\n000010011\n000000001\n001010101\n110001111\n000001111\n110100010\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1010\n0001\n0100\n1101\n0000\n", "output": ["8\n"]}, {"input": "1\n5 4\n0111\n0000\n0011\n1001\n1000\n", "output": ["6\n"]}, {"input": "1\n9 9\n101010001\n101110100\n000010011\n010000001\n001010101\n110001111\n000001111\n110100010\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1000\n0011\n0110\n1101\n0000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1110\n0010\n1111\n1001\n0000\n", "output": ["7\n"]}, {"input": "1\n9 9\n101010001\n101110100\n010010011\n001000001\n001010101\n110001111\n000001111\n110100010\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1010\n0010\n1110\n1001\n0001\n", "output": ["9\n"]}, {"input": "1\n5 4\n0011\n1000\n0010\n1001\n1001\n", "output": ["7\n"]}, {"input": "1\n8 9\n101010001\n101110100\n000010011\n001000001\n001010101\n110001111\n000001111\n110100011\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n0011\n0001\n0010\n1000\n1001\n", "output": ["8\n"]}, {"input": "1\n5 4\n0011\n0000\n0010\n1001\n1101\n", "output": ["7\n"]}, {"input": "1\n8 9\n101100001\n101110100\n000010011\n001000001\n001011101\n110001111\n000001111\n110100010\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1010\n0000\n0110\n1011\n0001\n", "output": ["10\n"]}, {"input": "1\n5 4\n0010\n0001\n0110\n1001\n1101\n", "output": ["7\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010001\n001000001\n001011101\n110001111\n000001111\n110000010\n010110000\n", "output": ["4\n"]}, {"input": "1\n5 4\n0011\n0001\n0100\n1001\n1100\n", "output": ["6\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000000001\n001000001\n001011101\n110001111\n000001111\n110100010\n010110000\n", "output": ["4\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010001\n001000001\n000011001\n110001111\n000001111\n110100010\n010100000\n", "output": ["3\n"]}, {"input": "1\n8 9\n101110001\n101110000\n000010001\n001000001\n000011001\n110001111\n000001111\n110100010\n010100000\n", "output": ["4\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n100000001\n101010101\n110101111\n000001011\n111100000\n000110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1000\n1010\n0110\n0001\n0001\n", "output": ["11\n"]}, {"input": "1\n5 4\n0000\n0000\n0010\n0001\n0000\n", "output": ["10\n"]}, {"input": "1\n5 4\n1100\n0010\n1110\n0000\n1000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1001\n0000\n1010\n0100\n1100\n", "output": ["10\n"]}, {"input": "1\n5 4\n1011\n1000\n1010\n0000\n1010\n", "output": ["7\n"]}, {"input": "1\n9 9\n001010001\n101110000\n000010011\n100000001\n101010101\n110001111\n000001111\n110100100\n000110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1000\n0011\n0100\n0001\n0001\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0100\n0110\n0101\n1000\n", "output": ["13\n"]}, {"input": "1\n5 4\n1000\n0000\n1101\n0000\n0010\n", "output": ["8\n"]}, {"input": "1\n5 4\n1101\n0000\n1010\n1000\n1100\n", "output": ["7\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n100000001\n101010101\n110001111\n000000111\n110110000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1001\n0110\n0100\n0001\n0000\n", "output": ["12\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000110011\n100000001\n000010101\n110001111\n000001111\n110100000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1100\n0010\n0010\n1101\n0001\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0000\n0111\n0111\n0000\n", "output": ["12\n"]}, {"input": "1\n5 4\n1011\n0000\n0010\n1001\n0100\n", "output": ["7\n"]}, {"input": "1\n5 4\n0011\n0000\n1010\n1001\n1010\n", "output": ["6\n"]}, {"input": "1\n5 4\n1010\n0001\n0100\n1001\n0000\n", "output": ["7\n"]}, {"input": "1\n5 4\n0111\n0000\n0011\n1001\n0000\n", "output": ["6\n"]}, {"input": "1\n9 9\n101010001\n101110100\n000010011\n010000001\n001010101\n110001111\n000001111\n110100000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n0000\n0011\n0110\n1101\n0000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1110\n0010\n1111\n1001\n0100\n", "output": ["6\n"]}, {"input": "1\n9 9\n101010001\n101110100\n010010011\n001000001\n001110101\n110001111\n000001111\n110100010\n010110000\n", "output": ["4\n"]}, {"input": "1\n5 4\n1010\n0000\n0110\n1011\n0000\n", "output": ["10\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010001\n001000001\n001011101\n110001111\n000001111\n100000010\n010110000\n", "output": ["4\n"]}, {"input": "1\n5 4\n0011\n0001\n0100\n1000\n1100\n", "output": ["7\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000000001\n001000001\n001011101\n110001111\n000001101\n110100010\n010110000\n", "output": ["4\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010001\n001000001\n000011001\n110001111\n001001111\n110100010\n010100000\n", "output": ["3\n"]}, {"input": "1\n8 9\n101110001\n101110000\n000010001\n001000001\n000011001\n110001111\n000001111\n110100010\n000100000\n", "output": ["4\n"]}, {"input": "1\n5 4\n1000\n1010\n1110\n0001\n0001\n", "output": ["10\n"]}, {"input": "1\n5 4\n0000\n0100\n0010\n0001\n0000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1001\n0000\n1010\n0110\n1100\n", "output": ["11\n"]}, {"input": "1\n9 9\n001010001\n101110000\n000010011\n100000001\n101010101\n110001111\n000001111\n110100100\n000110001\n", "output": ["5\n"]}, {"input": "1\n5 4\n0000\n0011\n0100\n0001\n0001\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0000\n1110\n0101\n1000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1000\n1000\n1101\n0000\n0010\n", "output": ["7\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n100000001\n101010101\n110001111\n000000111\n110110000\n110110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n0001\n0110\n0110\n0001\n0000\n", "output": ["13\n"]}, {"input": "1\n9 9\n001110001\n101110100\n000110011\n100000001\n000010101\n110001111\n000001111\n110100000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1100\n0000\n0010\n1101\n0001\n", "output": ["9\n"]}, {"input": "1\n5 4\n1000\n0000\n0111\n0110\n0000\n", "output": ["13\n"]}, {"input": "1\n5 4\n0011\n0000\n1010\n0001\n1010\n", "output": ["7\n"]}, {"input": "1\n9 9\n101010001\n101110100\n000010001\n010000001\n001010101\n110001111\n000001111\n110100000\n010110000\n", "output": ["4\n"]}, {"input": "1\n5 4\n1100\n0010\n1111\n1001\n0100\n", "output": ["7\n"]}, {"input": "1\n9 9\n101010001\n101110100\n010010011\n001000000\n001110101\n110001111\n000001111\n110100010\n010110000\n", "output": ["4\n"]}, {"input": "1\n5 4\n1010\n0010\n0110\n1011\n0000\n", "output": ["11\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010001\n001000011\n001011101\n110001111\n000001111\n100000010\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n0011\n0001\n0110\n1000\n1100\n", "output": ["8\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000000001\n001000001\n001011101\n111001111\n000001101\n110100010\n010110000\n", "output": ["4\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010001\n101000001\n000011001\n110001111\n001001111\n110100010\n010100000\n", "output": ["3\n"]}, {"input": "1\n8 9\n101110001\n101110000\n000010001\n001000001\n000011001\n110001111\n000001111\n110100010\n000100100\n", "output": ["4\n"]}, {"input": "1\n5 4\n1000\n1010\n1110\n0011\n0001\n", "output": ["11\n"]}, {"input": "1\n5 4\n1000\n0100\n0010\n0001\n0000\n", "output": ["11\n"]}, {"input": "1\n5 4\n1001\n0000\n1011\n0110\n1100\n", "output": ["10\n"]}, {"input": "1\n5 4\n0000\n0011\n0000\n0001\n0001\n", "output": ["9\n"]}, {"input": "1\n5 4\n1000\n0000\n1110\n0111\n1000\n", "output": ["12\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n100000101\n101010101\n110001111\n000000111\n110110000\n110110000\n", "output": ["6\n"]}, {"input": "1\n5 4\n0001\n0110\n0110\n0001\n0001\n", "output": ["13\n"]}, {"input": "1\n9 9\n011110001\n101110100\n000110011\n100000001\n000010101\n110001111\n000001111\n110100000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1000\n0000\n0111\n0100\n0000\n", "output": ["12\n"]}, {"input": "1\n5 4\n0011\n0001\n1010\n0001\n1010\n", "output": ["6\n"]}, {"input": "1\n9 9\n101010001\n101110100\n010010011\n011000000\n001110101\n110001111\n000001111\n110100010\n010110000\n", "output": ["4\n"]}, {"input": "1\n5 4\n1010\n0011\n0110\n1011\n0000\n", "output": ["10\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010001\n001000011\n101011101\n110001111\n000001111\n100000010\n010110000\n", "output": ["5\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000000001\n001000001\n001011101\n111101111\n000001101\n110100010\n010110000\n", "output": ["4\n"]}, {"input": "1\n8 9\n101110001\n101110100\n000010001\n101000001\n000011001\n110001111\n001001111\n110100110\n010100000\n", "output": ["3\n"]}, {"input": "1\n8 9\n101110001\n101110000\n000010001\n001000001\n000011001\n010001111\n000001111\n110100010\n000100100\n", "output": ["4\n"]}, {"input": "1\n5 4\n1000\n0110\n0010\n0001\n0000\n", "output": ["12\n"]}, {"input": "1\n5 4\n1001\n0000\n1010\n0010\n1100\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0000\n1110\n0011\n1000\n", "output": ["11\n"]}, {"input": "1\n9 9\n001010001\n101110100\n000010011\n100000101\n101011101\n110001111\n000000111\n110110000\n110110000\n", "output": ["6\n"]}, {"input": "1\n5 4\n1001\n0110\n0110\n0001\n0001\n", "output": ["13\n"]}, {"input": "1\n9 9\n011110001\n101110100\n000110011\n100000001\n000010101\n110001110\n000001111\n110100000\n010110000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1100\n0000\n0111\n0100\n0000\n", "output": ["11\n"]}, {"input": "1\n5 4\n0011\n0001\n1110\n0001\n1010\n", "output": ["7\n"]}, {"input": "1\n9 9\n101010001\n101110100\n010010011\n011000000\n101110101\n110001111\n000001111\n110100010\n010110000\n", "output": ["4\n"]}, {"input": "1\n5 4\n1010\n0011\n0110\n1001\n0000\n", "output": ["9\n"]}, {"input": "1\n8 9\n101110001\n101010000\n000010001\n001000001\n000011001\n010001111\n000001111\n110100010\n000100100\n", "output": ["4\n"]}, {"input": "1\n5 4\n1000\n0110\n0010\n0001\n1000\n", "output": ["12\n"]}, {"input": "1\n5 4\n1001\n0010\n1010\n0010\n1100\n", "output": ["11\n"]}, {"input": "1\n5 4\n1000\n0100\n1110\n0011\n1000\n", "output": ["12\n"]}, {"input": "1\n9 9\n001010000\n101110100\n000010011\n100000101\n101011101\n110001111\n000000111\n110110000\n110110000\n", "output": ["6\n"]}, {"input": "1\n5 4\n1011\n0110\n0110\n0001\n0001\n", "output": ["12\n"]}, {"input": "1\n5 4\n1100\n0100\n0111\n0100\n0000\n", "output": ["12\n"]}, {"input": "1\n5 4\n0011\n0001\n1110\n0001\n1000\n", "output": ["8\n"]}, {"input": "1\n9 9\n101010001\n101110100\n010010011\n001000000\n101110101\n110001111\n000001111\n110100010\n010110000\n", "output": ["4\n"]}, {"input": "1\n5 4\n1010\n0011\n0110\n1001\n0001\n", "output": ["9\n"]}, {"input": "1\n5 4\n1001\n0010\n1010\n0011\n1100\n", "output": ["10\n"]}, {"input": "1\n5 4\n1000\n0100\n1110\n0011\n1100\n", "output": ["11\n"]}, {"input": "1\n9 9\n001010000\n101110100\n000010011\n100000101\n101011101\n110001111\n000000111\n110110000\n110100000\n", "output": ["6\n"]}, {"input": "1\n5 4\n1111\n0110\n0110\n0001\n0001\n", "output": ["11\n"]}, {"input": "1\n5 4\n1100\n0100\n0111\n0100\n1000\n", "output": ["12\n"]}, {"input": "1\n5 4\n0011\n1001\n1110\n0001\n1000\n", "output": ["7\n"]}, {"input": "1\n9 9\n101010001\n101110100\n010010011\n001000000\n101110101\n110001111\n000001111\n110100010\n010100000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1010\n0011\n0111\n1001\n0001\n", "output": ["8\n"]}, {"input": "1\n5 4\n1001\n0010\n1010\n0011\n1101\n", "output": ["10\n"]}, {"input": "1\n9 9\n001010000\n101110100\n000110011\n100000101\n101011101\n110001111\n000000111\n110110000\n110100000\n", "output": ["5\n"]}, {"input": "1\n5 4\n1111\n0110\n0110\n0011\n0001\n", "output": ["12\n"]}, {"input": "1\n5 4\n0011\n1001\n1110\n0011\n1000\n", "output": ["8\n"]}, {"input": "1\n9 9\n101010001\n101110100\n010010011\n001000000\n101110101\n110001111\n000001111\n110100010\n010100100\n", "output": ["5\n"]}], "source_codes": ["\nuse std::io::{self, BufRead};\n\nfn min_operations_to_make_portal(n: usize, m: usize, rectangle: Vec<Vec<char>>) -> usize {\n    let mut min_ops = usize::MAX;\n    for a in 5..=n {\n        for b in 4..=m {\n            for i in 0..=n - a {\n                for j in 0..=m - b {\n                    let mut ops = 0;\n                    for x in i..i + a {\n                        for y in j..j + b {\n                            if (x == i || x == i + a - 1) && (y == j || y == j + b - 1) {\n                                if rectangle[x][y] == '1' {\n                                    ops += 1;\n                                }\n                            } else {\n                                if rectangle[x][y] == '0' {\n                                    ops += 1;\n                                }\n                            }\n                        }\n                    }\n                    min_ops = min_ops.min(ops);\n                }\n            }\n        }\n    }\n    min_ops\n}\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n    let t: usize = lines.next().unwrap().unwrap().parse().unwrap();\n\n    for _ in 0..t {\n        let line = lines.next().unwrap().unwrap();\n        let parts: Vec<usize> = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let n = parts[0];\n        let m = parts[1];\n\n        let rectangle: Vec<Vec<char>> = (0..n).map(|_| lines.next().unwrap().unwrap().chars().collect()).collect();\n\n        let result = min_operations_to_make_portal(n, m, rectangle);\n        println!(\"{}\", result);\n    }\n}\n\n\n"], "responses": ["\nuse std::io::{self, BufRead};\n\nfn min_operations_to_make_portal(n: usize, m: usize, rectangle: Vec<Vec<char>>) -> usize {\n    let mut min_ops = usize::MAX;\n    for a in 5..=n {\n        for b in 4..=m {\n            for i in 0..=n - a {\n                for j in 0..=m - b {\n                    let mut ops = 0;\n                    for x in i..i + a {\n                        for y in j..j + b {\n                            if (x == i || x == i + a - 1) && (y == j || y == j + b - 1) {\n                                if rectangle[x][y] == '1' {\n                                    ops += 1;\n                                }\n                            } else {\n                                if rectangle[x][y] == '0' {\n                                    ops += 1;\n                                }\n                            }\n                        }\n                    }\n                    min_ops = min_ops.min(ops);\n                }\n            }\n        }\n    }\n    min_ops\n}\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n    let t: usize = lines.next().unwrap().unwrap().parse().unwrap();\n\n    for _ in 0..t {\n        let line = lines.next().unwrap().unwrap();\n        let parts: Vec<usize> = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let n = parts[0];\n        let m = parts[1];\n\n        let rectangle: Vec<Vec<char>> = (0..n).map(|_| lines.next().unwrap().unwrap().chars().collect()).collect();\n\n        let result = min_operations_to_make_portal(n, m, rectangle);\n        println!(\"{}\", result);\n    }\n}\n\n\n"], "prompt_tokens": [74643], "completion_tokens": [16476], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1580}
{"name": "1580_B. Mathematics Curriculum", "description": "Let c_1, c_2, \u2026, c_n be a permutation of integers 1, 2, \u2026, n. Consider all subsegments of this permutation containing an integer x. Given an integer m, we call the integer x good if there are exactly m different values of maximum on these subsegments.\n\nCirno is studying mathematics, and the teacher asks her to count the number of permutations of length n with exactly k good numbers.\n\nUnfortunately, Cirno isn't good at mathematics, and she can't answer this question. Therefore, she asks you for help.\n\nSince the answer may be very big, you only need to tell her the number of permutations modulo p.\n\nA permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array) and [1,3,4] is also not a permutation (n=3 but there is 4 in the array).\n\nA sequence a is a subsegment of a sequence b if a can be obtained from b by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.\n\nInput\n\nThe first line contains four integers n, m, k, p (1 \u2264 n \u2264 100, 1 \u2264 m \u2264 n, 1 \u2264 k \u2264 n, 1 \u2264 p \u2264 10^9).\n\nOutput\n\nOutput the number of permutations modulo p.\n\nExamples\n\nInput\n\n\n4 3 2 10007\n\n\nOutput\n\n\n4\n\n\nInput\n\n\n6 4 1 769626776\n\n\nOutput\n\n\n472\n\n\nInput\n\n\n66 11 9 786747482\n\n\nOutput\n\n\n206331312\n\n\nInput\n\n\n99 30 18 650457567\n\n\nOutput\n\n\n77365367\n\nNote\n\nIn the first test case, there are four permutations: [1, 3, 2, 4], [2, 3, 1, 4], [4, 1, 3, 2] and [4, 2, 3, 1].\n\nTake permutation [1, 3, 2, 4] as an example:\n\nFor number 1, all subsegments containing it are: [1], [1, 3], [1, 3, 2] and [1, 3, 2, 4], and there're three different maxima 1, 3 and 4.\n\nSimilarly, for number 3, there're two different maxima 3 and 4. For number 2, there're three different maxima 2, 3 and 4. And for number 4, there're only one, that is 4 itself.", "tags": ["brute force", "combinatorics", "dp", "trees"], "difficulty": 8, "id": 1580, "sample_io": [{"input": "6 4 1 769626776\n", "output": ["472\n"]}, {"input": "99 30 18 650457567\n", "output": ["77365367\n"]}, {"input": "66 11 9 786747482\n", "output": ["206331312\n"]}, {"input": "4 3 2 10007\n", "output": ["4\n"]}], "test_list": [{"input": "100 31 30 148365334\n", "output": ["109422564\n"]}, {"input": "87 24 38 728447282\n", "output": ["0\n"]}, {"input": "99 30 18 5\n", "output": ["4\n"]}, {"input": "60 19 17 176391848\n", "output": ["5472856\n"]}, {"input": "100 47 23 833795844\n", "output": ["307365396\n"]}, {"input": "30 14 9 157679620\n", "output": ["108877500\n"]}, {"input": "100 37 30 870664704\n", "output": ["824463360\n"]}, {"input": "100 30 70 1064\n", "output": ["0\n"]}, {"input": "63 20 17 662420638\n", "output": ["601955200\n"]}, {"input": "75 36 9 855650468\n", "output": ["297363408\n"]}, {"input": "100 32 24 438754730\n", "output": ["323005970\n"]}, {"input": "49 15 14 308312578\n", "output": ["286342426\n"]}, {"input": "89 18 15 106840615\n", "output": ["7402302\n"]}, {"input": "54 10 15 221451100\n", "output": ["61500800\n"]}, {"input": "100 30 70 12345\n", "output": ["0\n"]}, {"input": "88 24 25 422257596\n", "output": ["355265832\n"]}, {"input": "100 25 32 164834266\n", "output": ["27258808\n"]}, {"input": "87 18 12 933725311\n", "output": ["182369268\n"]}, {"input": "100 41 33 456754732\n", "output": ["0\n"]}, {"input": "96 28 21 992859620\n", "output": ["385257568\n"]}, {"input": "100 44 16 988511794\n", "output": ["930609868\n"]}, {"input": "18 4 4 205152209\n", "output": ["121181834\n"]}, {"input": "7 3 4 1064\n", "output": ["80\n"]}, {"input": "100 43 28 548072991\n", "output": ["152924211\n"]}, {"input": "96 25 23 965938339\n", "output": ["170691124\n"]}, {"input": "100 54 27 714405093\n", "output": ["0\n"]}, {"input": "100 48 20 426348968\n", "output": ["202656728\n"]}, {"input": "81 14 14 695031561\n", "output": ["655625417\n"]}, {"input": "34 10 3 198747828\n", "output": ["99715064\n"]}, {"input": "100 30 70 4601\n", "output": ["0\n"]}, {"input": "61 19 21 748555616\n", "output": ["223470400\n"]}, {"input": "100 100 100 905987364\n", "output": ["0\n"]}, {"input": "100 29 51 667663580\n", "output": ["0\n"]}, {"input": "100 30 70 10648221\n", "output": ["0\n"]}, {"input": "100 77 65 984750163\n", "output": ["0\n"]}, {"input": "100 50 28 647161803\n", "output": ["24621498\n"]}, {"input": "79 13 14 531408605\n", "output": ["186854520\n"]}, {"input": "9 4 1 765062520\n", "output": ["66112\n"]}, {"input": "100 40 32 976432512\n", "output": ["79377408\n"]}, {"input": "100 25 41 342159999\n", "output": ["0\n"]}, {"input": "100 51 26 772413287\n", "output": ["82875291\n"]}, {"input": "100 57 48 171736091\n", "output": ["0\n"]}, {"input": "100 31 34 148365334\n", "output": ["71342466"]}, {"input": "87 24 38 269164991\n", "output": ["0"]}, {"input": "99 30 18 3\n", "output": ["2"]}, {"input": "60 13 17 176391848\n", "output": ["30875872"]}, {"input": "67 20 17 662420638\n", "output": ["525007894"]}, {"input": "68 36 9 855650468\n", "output": ["756405948"]}, {"input": "100 32 24 48351440\n", "output": ["44494240"]}, {"input": "49 9 14 308312578\n", "output": ["219544054"]}, {"input": "54 10 3 221451100\n", "output": ["95556052"]}, {"input": "87 25 12 933725311\n", "output": ["621828261"]}, {"input": "100 44 16 28930735\n", "output": ["7701663"]}, {"input": "18 4 4 373700054\n", "output": ["181519114"]}, {"input": "100 43 28 19087607\n", "output": ["9304493"]}, {"input": "96 25 23 27001494\n", "output": ["7018470"]}, {"input": "100 54 3 714405093\n", "output": ["516734541"]}, {"input": "81 21 14 695031561\n", "output": ["328097426"]}, {"input": "34 18 3 198747828\n", "output": ["171829012"]}, {"input": "74 19 21 748555616\n", "output": ["616966592"]}, {"input": "79 13 28 531408605\n", "output": ["495254155"]}, {"input": "9 7 1 765062520\n", "output": ["31936"]}, {"input": "100 40 32 986726587\n", "output": ["592819392"]}, {"input": "66 11 4 786747482\n", "output": ["569232480"]}, {"input": "100 31 34 177956807\n", "output": ["158289165"]}, {"input": "82 13 17 176391848\n", "output": ["39619376"]}, {"input": "67 20 17 93649925\n", "output": ["43482390"]}, {"input": "100 32 4 48351440\n", "output": ["16771904"]}, {"input": "49 9 20 308312578\n", "output": ["219881016"]}, {"input": "54 15 3 221451100\n", "output": ["116620024"]}, {"input": "87 47 12 933725311\n", "output": ["724371673"]}, {"input": "100 44 16 27012826\n", "output": ["26617988"]}, {"input": "100 43 28 298638\n", "output": ["215892"]}, {"input": "96 25 23 49995734\n", "output": ["14150658"]}, {"input": "100 54 1 714405093\n", "output": ["479969343"]}, {"input": "81 21 20 695031561\n", "output": ["418485426"]}, {"input": "34 18 4 198747828\n", "output": ["177768488"]}, {"input": "74 24 21 748555616\n", "output": ["650100000"]}, {"input": "79 15 28 531408605\n", "output": ["192334135"]}, {"input": "66 19 4 786747482\n", "output": ["496418370"]}, {"input": "100 21 34 177956807\n", "output": ["118611254"]}, {"input": "82 13 17 292697502\n", "output": ["178787478"]}, {"input": "67 10 17 93649925\n", "output": ["82065480"]}, {"input": "49 13 20 308312578\n", "output": ["188217438"]}, {"input": "21 15 3 221451100\n", "output": ["138272532"]}, {"input": "87 47 12 77289701\n", "output": ["30688417"]}, {"input": "100 43 28 130177\n", "output": ["66642"]}, {"input": "96 25 26 49995734\n", "output": ["47547394"]}, {"input": "100 48 12 618540992\n", "output": ["447292160"]}, {"input": "81 30 20 695031561\n", "output": ["605834658"]}, {"input": "34 18 7 198747828\n", "output": ["14011120"]}, {"input": "16 7 1 1104473567\n", "output": ["408899597"]}, {"input": "66 19 6 786747482\n", "output": ["697212740"]}, {"input": "82 13 17 57728977\n", "output": ["2727690"]}, {"input": "67 14 17 93649925\n", "output": ["67923755"]}, {"input": "49 12 20 308312578\n", "output": ["67357264"]}, {"input": "21 15 4 221451100\n", "output": ["56666076"]}, {"input": "87 43 12 77289701\n", "output": ["22449566"]}, {"input": "96 12 26 49995734\n", "output": ["6768858"]}, {"input": "100 48 12 1019549242\n", "output": ["27112648"]}, {"input": "34 18 7 187253483\n", "output": ["149660679"]}, {"input": "16 7 2 1104473567\n", "output": ["260414618"]}, {"input": "66 19 3 786747482\n", "output": ["321045330"]}, {"input": "67 14 17 65236350\n", "output": ["2572530"]}, {"input": "49 12 20 289861624\n", "output": ["49469992"]}, {"input": "21 15 4 240568600\n", "output": ["185729376"]}, {"input": "96 12 31 49995734\n", "output": ["37948714"]}, {"input": "34 18 0 187253483\n", "output": ["157009770"]}, {"input": "16 9 2 1104473567\n", "output": ["390291587"]}, {"input": "66 19 3 986850954\n", "output": ["703901536"]}, {"input": "67 14 17 121944007\n", "output": ["47290188"]}, {"input": "49 12 20 540045319\n", "output": ["108901804"]}, {"input": "36 15 4 240568600\n", "output": ["97704168"]}, {"input": "96 11 31 49995734\n", "output": ["32575262"]}, {"input": "40 18 0 187253483\n", "output": ["164192774"]}, {"input": "100 81 3 493523592\n", "output": ["204556824"]}, {"input": "40 19 3 986850954\n", "output": ["167749686"]}, {"input": "67 14 17 145753644\n", "output": ["102141600"]}, {"input": "36 15 1 240568600\n", "output": ["34087328"]}, {"input": "87 25 12 77289701\n", "output": ["18979863"]}, {"input": "100 81 0 493523592\n", "output": ["450587744"]}, {"input": "49 19 3 986850954\n", "output": ["889195754"]}, {"input": "46 14 17 145753644\n", "output": ["52696668"]}, {"input": "36 18 1 240568600\n", "output": ["136986160"]}, {"input": "87 18 12 77289701\n", "output": ["39102988"]}, {"input": "100 81 1 493523592\n", "output": ["282525328"]}, {"input": "46 14 17 52540392\n", "output": ["30501960"]}, {"input": "36 18 1 291153326\n", "output": ["98909946"]}, {"input": "87 18 9 77289701\n", "output": ["57739169"]}, {"input": "46 13 17 52540392\n", "output": ["620112"]}, {"input": "36 10 1 291153326\n", "output": ["45261388"]}, {"input": "87 18 9 148860245\n", "output": ["75645813"]}, {"input": "46 13 18 52540392\n", "output": ["46453008"]}, {"input": "36 10 2 291153326\n", "output": ["104090786"]}, {"input": "46 13 18 30407390\n", "output": ["15295410"]}, {"input": "38 10 2 291153326\n", "output": ["156554784"]}, {"input": "16 6 5 5\n", "output": ["1"]}, {"input": "38 13 2 291153326\n", "output": ["201505506"]}, {"input": "38 13 2 140784535\n", "output": ["93763114"]}, {"input": "38 13 2 23942850\n", "output": ["15031844"]}, {"input": "38 13 1 23942850\n", "output": ["17757182"]}, {"input": "38 13 2 3676263\n", "output": ["874610"]}, {"input": "38 13 0 3676263\n", "output": ["3080310"]}, {"input": "38 18 0 3676263\n", "output": ["2819762"]}, {"input": "52 18 0 3676263\n", "output": ["1154343"]}, {"input": "52 18 1 3676263\n", "output": ["1476943"]}, {"input": "18 18 1 3676263\n", "output": ["131072"]}, {"input": "19 9 4 261612\n", "output": ["80104"]}, {"input": "19 14 4 261612\n", "output": ["24156"]}, {"input": "19 14 2 261612\n", "output": ["246644"]}, {"input": "19 14 1 261612\n", "output": ["87628"]}, {"input": "19 14 1 126669\n", "output": ["13099"]}, {"input": "19 1 1 126669\n", "output": ["79365"]}, {"input": "19 2 1 126669\n", "output": ["15021"]}, {"input": "19 1 1 82018\n", "output": ["23648"]}, {"input": "28 1 1 82018\n", "output": ["36708"]}, {"input": "54 1 1 82018\n", "output": ["60674"]}, {"input": "54 1 1 65770\n", "output": ["49870"]}, {"input": "54 1 1 75791\n", "output": ["68856"]}, {"input": "100 31 30 214796854\n", "output": ["23932048"]}, {"input": "99 30 18 9\n", "output": ["8"]}, {"input": "60 19 17 104779386\n", "output": ["71768412"]}, {"input": "100 37 30 498388229\n", "output": ["217650603"]}, {"input": "75 36 6 855650468\n", "output": ["525655356"]}, {"input": "75 15 14 308312578\n", "output": ["223154810"]}, {"input": "89 12 15 106840615\n", "output": ["16613523"]}, {"input": "72 10 15 221451100\n", "output": ["201447716"]}, {"input": "100 25 29 164834266\n", "output": ["26557830"]}, {"input": "96 21 21 992859620\n", "output": ["765062648"]}, {"input": "100 44 30 988511794\n", "output": ["482304904"]}, {"input": "18 4 4 341396382\n", "output": ["135513762"]}, {"input": "96 41 23 965938339\n", "output": ["108078872"]}, {"input": "81 6 14 695031561\n", "output": ["30090834"]}, {"input": "34 11 3 198747828\n", "output": ["159079032"]}, {"input": "100 50 28 931584837\n", "output": ["658982070"]}, {"input": "9 4 2 765062520\n", "output": ["203360"]}, {"input": "100 25 12 342159999\n", "output": ["40202793"]}, {"input": "7 4 1 769626776\n", "output": ["2624"]}, {"input": "66 11 9 502080449\n", "output": ["250847261"]}, {"input": "100 31 24 148365334\n", "output": ["80008890"]}, {"input": "60 16 17 176391848\n", "output": ["137534984"]}, {"input": "61 20 17 662420638\n", "output": ["236687066"]}, {"input": "68 36 6 855650468\n", "output": ["641455616"]}, {"input": "100 32 24 42949732\n", "output": ["39077984"]}, {"input": "49 9 14 217935696\n", "output": ["199577952"]}, {"input": "64 10 3 221451100\n", "output": ["147699660"]}, {"input": "100 67 16 28930735\n", "output": ["25064350"]}, {"input": "18 4 2 373700054\n", "output": ["212509070"]}, {"input": "96 25 23 32520448\n", "output": ["12212224"]}, {"input": "100 54 3 383503842\n", "output": ["168776310"]}, {"input": "81 29 14 695031561\n", "output": ["5486256"]}, {"input": "34 18 3 109073711\n", "output": ["94874565"]}, {"input": "79 19 28 531408605\n", "output": ["433422225"]}, {"input": "100 40 32 606578883\n", "output": ["456412017"]}, {"input": "19 11 4 786747482\n", "output": ["673866014"]}, {"input": "7 3 4 10007\n", "output": ["80"]}, {"input": "92 13 17 176391848\n", "output": ["96138432"]}, {"input": "67 27 17 93649925\n", "output": ["18319675"]}, {"input": "30 4 9 157679620\n", "output": ["0"]}, {"input": "100 30 58 1064\n", "output": ["0"]}, {"input": "100 54 70 12345\n", "output": ["0"]}, {"input": "7 1 4 1064\n", "output": ["0"]}, {"input": "100 48 39 426348968\n", "output": ["0"]}, {"input": "100 57 51 667663580\n", "output": ["0"]}, {"input": "100 77 92 984750163\n", "output": ["0"]}, {"input": "100 81 28 647161803\n", "output": ["0"]}, {"input": "100 25 41 44001198\n", "output": ["0"]}, {"input": "100 57 86 171736091\n", "output": ["0"]}, {"input": "4 3 4 10007\n", "output": ["0"]}, {"input": "99 30 18 6\n", "output": ["2"]}, {"input": "30 4 17 157679620\n", "output": ["0"]}, {"input": "68 57 9 855650468\n", "output": ["0"]}, {"input": "100 54 70 8938\n", "output": ["0"]}, {"input": "18 4 0 373700054\n", "output": ["0"]}, {"input": "7 1 4 1423\n", "output": ["0"]}, {"input": "100 48 39 618540992\n", "output": ["0"]}, {"input": "100 77 49 984750163\n", "output": ["0"]}, {"input": "100 81 28 391157626\n", "output": ["0"]}, {"input": "9 7 1 1104473567\n", "output": ["31936"]}, {"input": "100 71 32 986726587\n", "output": ["0"]}, {"input": "100 25 67 44001198\n", "output": ["0"]}, {"input": "4 6 4 10007\n", "output": ["0"]}, {"input": "73 30 18 6\n", "output": ["0"]}, {"input": "30 2 17 157679620\n", "output": ["0"]}, {"input": "100 10 70 8938\n", "output": ["0"]}, {"input": "25 4 0 373700054\n", "output": ["0"]}, {"input": "100 77 60 984750163\n", "output": ["0"]}, {"input": "100 81 25 391157626\n", "output": ["0"]}, {"input": "100 71 32 837920002\n", "output": ["0"]}, {"input": "100 25 87 44001198\n", "output": ["0"]}, {"input": "4 6 4 2672\n", "output": ["0"]}, {"input": "73 30 7 6\n", "output": ["0"]}, {"input": "100 10 70 16755\n", "output": ["0"]}, {"input": "25 4 0 418575380\n", "output": ["0"]}, {"input": "100 67 28 130177\n", "output": ["0"]}, {"input": "100 77 17 984750163\n", "output": ["0"]}, {"input": "100 81 25 481298326\n", "output": ["0"]}, {"input": "100 71 32 198736276\n", "output": ["0"]}, {"input": "4 6 4 11\n", "output": ["0"]}, {"input": "100 12 70 16755\n", "output": ["0"]}, {"input": "87 70 12 77289701\n", "output": ["0"]}, {"input": "25 4 0 157204656\n", "output": ["0"]}], "source_codes": ["\nfn count_permutations(n: usize, m: usize, k: usize, p: usize) -> usize {\n    let mut dp = vec![vec![vec![0; k+1]; m+1]; n+1];\n    dp[0][0][0] = 1;\n\n    for i in 1..=n {\n        for j in 0..=m {\n            for l in 0..=k {\n                dp[i][j][l] = (dp[i-1][j][l] * (i-j) + dp[i-1][j-1][l-1]) % p;\n                if j < m {\n                    dp[i][j][l] = (dp[i][j][l] + dp[i-1][j+1][l]) % p;\n                }\n            }\n        }\n    }\n\n    let ans = dp[n].iter().map(|row| row[k]).sum::<usize>() % p;\n    ans\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let parts: Vec<usize> = input.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let n = parts[0];\n    let m = parts[1];\n    let k = parts[2];\n    let p = parts[3];\n\n    println!(\"{}\", count_permutations(n, m, k, p));\n}\n\n\n"], "responses": ["\nfn count_permutations(n: usize, m: usize, k: usize, p: usize) -> usize {\n    let mut dp = vec![vec![vec![0; k+1]; m+1]; n+1];\n    dp[0][0][0] = 1;\n\n    for i in 1..=n {\n        for j in 0..=m {\n            for l in 0..=k {\n                dp[i][j][l] = (dp[i-1][j][l] * (i-j) + dp[i-1][j-1][l-1]) % p;\n                if j < m {\n                    dp[i][j][l] = (dp[i][j][l] + dp[i-1][j+1][l]) % p;\n                }\n            }\n        }\n    }\n\n    let ans = dp[n].iter().map(|row| row[k]).sum::<usize>() % p;\n    ans\n}\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let parts: Vec<usize> = input.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let n = parts[0];\n    let m = parts[1];\n    let k = parts[2];\n    let p = parts[3];\n\n    println!(\"{}\", count_permutations(n, m, k, p));\n}\n\n\n"], "prompt_tokens": [67058], "completion_tokens": [11251], "no_of_try": 1, "api_calls": 40, "is_solved": false, "language": "Rust", "task_id": 1580}
